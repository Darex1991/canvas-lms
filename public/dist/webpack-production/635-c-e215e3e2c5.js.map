{"version":3,"sources":["webpack:///./public/javascripts/tinymce_plugins/instructure_record/mediaEditorLoader.js"],"names":["mediaEditorLoader","insertCode","ed","mediaCommentId","mediaType","title","$editor","$","id","linkCode","this","makeLinkHtml","send","attr","href","htmlEscape","addClass","text","outerHTML","getComment","getBody","find","collapseMediaComment","commentDiv","selection","select","collapse","commentCreatedCallback","insertEditor","mediaComment","bind"],"mappings":";AAAA;AAAA;AAAA;AAuBA,MAAMA,EAAoB,CACxBC,WAAWC,EAAIC,EAAgBC,EAAWC,GACxC,MAAMC,EAAUC,IAAE,IAAML,EAAGM,IACrBC,EAAWC,KAAKC,aAAaR,EAAgBC,EAAWC;AAC9DO,YAAKN,EAAS,cAAeG,IAG/BE,aAAY,CAACR,EAAgBC,EAAWC,IAC/BE,IAAE,SACNM,KAAK,CAACC,KAAM,kBAAF,OAAoBC,YAAWZ,MACzCa,SAAS,oCACTA,SAHI,UAGQD,YAAWX,GAAa,SAHhC,aAIJS,KAAK,CAACL,GAAI,iBAAF,OAAmBO,YAAWZ,MACtCU,KAAK,CAAC,WAAYE,YAAWV,KAC7BY,KAAK,2BAA2B,GAAGC,UAGxCC,WAAU,CAACjB,EAAIC,IACNI,IAAEL,EAAGkB,WAAWC,KAAK,kBAAoBlB,EAAiB,SAAS,GAG5EmB,qBAAqBpB,EAAIC,GACvB,MAAMoB,EAAab,KAAKS,WAAWjB;AACnCA,EAAGsB,UAAUC,OAAOF,GACpBrB,EAAGsB,UAAUE,UAAS,IAGxBC,uBAAuBzB,EAAIC,EAAgBC,EAAWC,GACpDK,KAAKT,WAAWC,EAAIC,EAAgBC,EAAWC,GAC/CK,KAAKY,qBAAqBpB,EAAIC,IAGhCyB,aAAa1B,GACXK,IAAEsB,aAAa,SAAU,MAAOnB,KAAKiB,uBAAuBG,KAAKpB,KAAMR;AAI5DF","file":"635-c-e215e3e2c5.js","sourcesContent":["/*\n * Copyright (C) 2015 - present Instructure, Inc.\n *\n * This file is part of Canvas.\n *\n * Canvas is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, version 3 of the License.\n *\n * Canvas is distributed in the hope that it will be useful, but WITHOUT ANY\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\n * A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License along\n * with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport $ from 'jquery'\nimport htmlEscape from '../../str/htmlEscape'\nimport {send} from 'jsx/shared/rce/RceCommandShim'\nimport '../../media_comments'\n\nconst mediaEditorLoader = {\n  insertCode(ed, mediaCommentId, mediaType, title) {\n    const $editor = $('#' + ed.id)\n    const linkCode = this.makeLinkHtml(mediaCommentId, mediaType, title)\n    send($editor, 'insert_code', linkCode)\n  },\n\n  makeLinkHtml(mediaCommentId, mediaType, title) {\n    return $('<a />')\n      .attr({href: `/media_objects/${htmlEscape(mediaCommentId)}`})\n      .addClass('instructure_inline_media_comment')\n      .addClass(`${htmlEscape(mediaType || 'video')}_comment`)\n      .attr({id: `media_comment_${htmlEscape(mediaCommentId)}`})\n      .attr({'data-alt': htmlEscape(title)})\n      .text('this is a media comment')[0].outerHTML\n  },\n\n  getComment(ed, mediaCommentId) {\n    return $(ed.getBody()).find('#media_comment_' + mediaCommentId + ' + br')[0]\n  },\n\n  collapseMediaComment(ed, mediaCommentId) {\n    const commentDiv = this.getComment(ed)\n    ed.selection.select(commentDiv)\n    ed.selection.collapse(true)\n  },\n\n  commentCreatedCallback(ed, mediaCommentId, mediaType, title) {\n    this.insertCode(ed, mediaCommentId, mediaType, title)\n    this.collapseMediaComment(ed, mediaCommentId)\n  },\n\n  insertEditor(ed) {\n    $.mediaComment('create', 'any', this.commentCreatedCallback.bind(this, ed))\n  }\n}\n\nexport default mediaEditorLoader\n"],"sourceRoot":""}