{"version":3,"sources":["webpack:///./public/javascripts/page_views.js"],"names":["update_url","window","ENV","page_view_update_url","$","interactionSeconds","INST","interaction_contexts","secondsSinceLastEvent","intervalInSeconds","updateTrigger","document","bind","event","new_update_url","force","data","interaction_seconds","ajaxJSON","result","xhr","status","clearInterval","setInterval","triggerHandler","addEventListener","formData","FormData","append","authenticity_token","navigator","sendBeacon","eventInTime","interaction_context"],"mappings":";AAAA;AAAA;AAAA;AAuBA,IAAIA,EAAaC,OAAOC,IAAIC;AACxBH,GACFI,IAAE,KACA,IAAIC,EAAqB;AAIzB,GAFAC,IAAKC,qBAAuB,GAExBP,EAAY,CACd,IAAIQ,EAAwB;AAC5B,MAAMC,EAAoB;AAM1B,IAAIC;AAJJN,IAAEO,UAAUC,KAAK,gCAAiC,CAACC,EAAOC,KACxDd,EAAac,IAIfV,IAAEO,UAAUC,KAAK,mBAAoB,CAACC,EAAOE,KAC3C,MAAMC,EAAO,IAETD,GAAUV,EAAqB,IAAMG,EAAwBC,KAC/DO,EAAKC,oBAAsBZ,EAC3BD,IAAEc,SAASlB,EAAY,MAAOgB,EAAM,KAAM,CAACG,EAAQC,KAC9B,MAAfA,EAAIC,QACNC,cAAcZ,KAGlBL,EAAqB,KAIzBK,EAAgBa,YAAY,KAC1BnB,IAAEO,UAAUa,eAAe,qBAC1B,IAAOf,GAEVR,OAAOwB,iBACL,SACA,KACE,GAAIpB,EAAqB,GAAI,CAI3B,MAAMqB,EAAW,IAAIC;AACrBD,EAASE,OAAO,sBAAuBvB,GACvCqB,EAASE,OAAO,UAAW,OAC3BF,EAASE,OAAO,qBAAsBC,eACtCH,EAASE,OAAO,OAAQ,WACxBE,UAAUC,WAAW/B,EAAY0B,MAGrC;AAGF,IAAIM,GAAc;AAClB5B,IAAEO,UAAUC,KAAK,qCAAsC,KACrDoB,GAAc,IAEhBT,YAAY,KACNS,GACF3B,IACIC,KAAQA,IAAK2B,qBAAuB3B,IAAKC,uBAC3CD,IAAKC,qBAAqBD,IAAK2B,sBAC5B3B,IAAKC,qBAAqBD,IAAK2B,sBAAwB,GAAK,GAEjED,GAAc,EACVxB,GAAyBC,IAC3BD,EAAwB,EACxBJ,IAAEO,UAAUa,eAAe,qBAE7BhB,EAAwB,GAExBA,KAED","file":"633-c-3e1082d2de.js","sourcesContent":["/*\n * Copyright (C) 2011 - present Instructure, Inc.\n *\n * This file is part of Canvas.\n *\n * Canvas is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, version 3 of the License.\n *\n * Canvas is distributed in the hope that it will be useful, but WITHOUT ANY\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\n * A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License along\n * with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport INST from './INST'\nimport $ from 'jquery'\nimport authenticity_token from 'compiled/behaviors/authenticity_token'\nimport './jquery.ajaxJSON'\n\nlet update_url = window.ENV.page_view_update_url\nif (update_url) {\n  $(() => {\n    let interactionSeconds = 0\n\n    INST.interaction_contexts = {}\n\n    if (update_url) {\n      let secondsSinceLastEvent = 0\n      const intervalInSeconds = 60 * 5\n\n      $(document).bind('page_view_update_url_received', (event, new_update_url) => {\n        update_url = new_update_url\n      })\n\n      let updateTrigger\n      $(document).bind('page_view_update', (event, force) => {\n        const data = {}\n\n        if (force || (interactionSeconds > 10 && secondsSinceLastEvent < intervalInSeconds)) {\n          data.interaction_seconds = interactionSeconds\n          $.ajaxJSON(update_url, 'PUT', data, null, (result, xhr) => {\n            if (xhr.status === 422) {\n              clearInterval(updateTrigger)\n            }\n          })\n          interactionSeconds = 0\n        }\n      })\n\n      updateTrigger = setInterval(() => {\n        $(document).triggerHandler('page_view_update')\n      }, 1000 * intervalInSeconds)\n\n      window.addEventListener(\n        'unload',\n        () => {\n          if (interactionSeconds > 30) {\n            // Use sendBeacon so the request doesn't get cancelled as we navigate away like a normal XHR would,\n            // but because sendBeacon only sends POST requests, we have to use FormData to fake the \"_method\" to PUT\n            // like Rail's `form_for` does\n            const formData = new FormData()\n            formData.append('interaction_seconds', interactionSeconds)\n            formData.append('_method', 'put')\n            formData.append('authenticity_token', authenticity_token())\n            formData.append('utf8', '&#x2713')\n            navigator.sendBeacon(update_url, formData)\n          }\n        },\n        false\n      )\n\n      let eventInTime = false\n      $(document).bind('mousemove keypress mousedown focus', () => {\n        eventInTime = true\n      })\n      setInterval(() => {\n        if (eventInTime) {\n          interactionSeconds++\n          if (INST && INST.interaction_context && INST.interaction_contexts) {\n            INST.interaction_contexts[INST.interaction_context] =\n              (INST.interaction_contexts[INST.interaction_context] || 0) + 1\n          }\n          eventInTime = false\n          if (secondsSinceLastEvent >= intervalInSeconds) {\n            secondsSinceLastEvent = 0\n            $(document).triggerHandler('page_view_update')\n          }\n          secondsSinceLastEvent = 0\n        } else {\n          secondsSinceLastEvent++\n        }\n      }, 1000)\n    }\n  })\n}\n"],"sourceRoot":""}