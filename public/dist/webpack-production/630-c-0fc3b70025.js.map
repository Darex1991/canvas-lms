{"version":3,"sources":["webpack:///./public/javascripts/lti/post_message/__tests__/handleLtiPostMessages.test.js"],"names":["requestFullWindowLaunchMessage","messageType","data","postMessageEvent","origin","source","describe","it","async","ENV","context_asset_string","wasCalled","handleLtiPostMessage","expect","toBeTruthy","toBeFalsy","ltiState","toEqual"],"mappings":";AAAA;AAAA;AAoBA,MAAMA,EAAiC,CACrCC,YAAa,0BACbC,KAAM;AAGR,SAASC,EAAiBD,EAAME,EAAQC,GACtC,MAAO,CACLH,OACAE,SACAC,UAIJC,SAAS,uBAAwB,KAC/BA,SAAS,wCAAyC,KAChDC,GAAG,uCAAwCC,UACzCC,IAAIC,qBAAuB;AAC3B,MAAMC,QAAkBC,kBAAqBT,EAAiBH;AAC9Da,OAAOF,GAAWG,iBAItBR,SAAS,4CAA6C,KACpDC,GAAG,+CAAgDC,UACjD,MAAMG,QAAkBC,kBAAqBT,EAAiB,CAACF,YAAa;AAC5EY,OAAOF,GAAWI,kBAKxBT,SAAS,WAAY,KACnBC,GAAG,qBAAsB,KACvBM,OAAOG,YAAUC,QAAQ","file":"630-c-0fc3b70025.js","sourcesContent":["/*\n * Copyright (C) 2019 - present Instructure, Inc.\n *\n * This file is part of Canvas.\n *\n * Canvas is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, version 3 of the License.\n *\n * Canvas is distributed in the hope that it will be useful, but WITHOUT ANY\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\n * A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License along\n * with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport handleLtiPostMessage, {ltiState} from '../handleLtiPostMessage'\n\nconst requestFullWindowLaunchMessage = {\n  messageType: 'requestFullWindowLaunch',\n  data: 'http://localhost/test'\n}\n\nfunction postMessageEvent(data, origin, source) {\n  return {\n    data,\n    origin,\n    source\n  }\n}\n\ndescribe('handleLtiPostMessage', () => {\n  describe('when a whitelisted event is processed', () => {\n    it('attempts to call the message handler', async () => {\n      ENV.context_asset_string = 'account_1'\n      const wasCalled = await handleLtiPostMessage(postMessageEvent(requestFullWindowLaunchMessage))\n      expect(wasCalled).toBeTruthy()\n    })\n  })\n\n  describe('when a non-whitelisted event is processed', () => {\n    it('does not attempt to call the message handler', async () => {\n      const wasCalled = await handleLtiPostMessage(postMessageEvent({messageType: 'notSupported'}))\n      expect(wasCalled).toBeFalsy()\n    })\n  })\n})\n\ndescribe('ltiState', () => {\n  it('is empty initially', () => {\n    expect(ltiState).toEqual({})\n  })\n})\n"],"sourceRoot":""}