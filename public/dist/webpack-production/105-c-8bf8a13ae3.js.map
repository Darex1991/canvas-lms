{"version":3,"sources":["webpack:///./node_modules/normalize-scroll-left/esm/main.js","webpack:///./public/javascripts/vendor/slickgrid/slick.core.js","webpack:///./public/javascripts/vendor/slickgrid/slick.editors.js","webpack:///./public/javascripts/vendor/slickgrid/plugins/slick.rowselectionmodel.js","webpack:///./public/javascripts/vendor/slickgrid.js","webpack:///./public/javascripts/vendor/slickgrid/slick.grid.js","webpack:///./public/javascripts/vendor/slickgrid/lib/jquery.event.drag-2.2.js"],"names":["cachedType","inDOM","window","document","createElement","detectScrollType","body","dummy","appendChild","createTextNode","dir","style","fontSize","width","height","position","top","overflow","scrollLeft","removeChild","getNormalizedScrollLeft","element","direction","type","Number","NaN","scrollWidth","clientWidth","setNormalizedScrollLeft","$","EventData","isPropagationStopped","isImmediatePropagationStopped","this","stopPropagation","stopImmediatePropagation","NonDataItem","__nonDataRow","Group","__group","level","count","value","title","collapsed","totals","rows","groups","groupingKey","GroupTotals","__groupTotals","group","EditorLock","activeEditController","isActive","editController","activate","commitCurrentEdit","cancelCurrentEdit","deactivate","extend","Slick","Event","handlers","subscribe","fn","push","unsubscribe","i","length","splice","notify","args","e","scope","returnValue","call","EventHandler","event","handler","unsubscribeAll","Range","fromRow","fromCell","toRow","toCell","Math","min","max","isSingleRow","isSingleCell","contains","row","cell","toString","NonDataRow","GlobalEditorLock","prototype","equals","jQuery","Editors","Text","$input","defaultValue","init","appendTo","container","bind","keyCode","ui","LEFT","RIGHT","focus","select","destroy","remove","getValue","val","setValue","loadValue","item","column","field","serializeValue","applyValue","state","isValueChanged","validate","validator","validationResults","valid","msg","Integer","parseInt","isNaN","Date","calendarOpen","datepicker","showOn","buttonImageOnly","buttonImage","beforeShow","onClose","dpDiv","stop","show","hide","css","left","YesNoSelect","$select","Checkbox","prop","PercentComplete","$picker","innerWidth","append","find","slider","orientation","range","slide","attr","LongText","$wrapper","$container","save","cancel","handleKeyDown","which","ENTER","ctrlKey","ESCAPE","preventDefault","TAB","shiftKey","grid","navigatePrev","navigateNext","commitChanges","cancelChanges","UploadGradeCellEditor","columnDef","id","active","editorFormatter","new_content","grade","grading_type","outputString","each","text","uploaded_grade","editorParser","html","removeClass","RowSelectionModel","options","_grid","_ranges","_self","_handler","_inHandler","_options","_defaults","selectActiveRow","wrapHandler","apply","arguments","rangesToRows","ranges","j","rowsToRanges","lastCell","getColumns","getSelectedRows","setSelectedRanges","onSelectedRangesChanged","handleActiveCellChange","data","activeRow","getActiveCell","altKey","metaKey","selectedRows","sort","x","y","bottom","getDataLength","scrollRowIntoView","from","to","getRowsRange","handleClick","getCellFromEvent","canCellBeActive","selection","idx","inArray","getOptions","multiSelect","setActiveCell","grep","o","last","pop","setSelectedRows","getSelectedRanges","onActiveCellChanged","onKeyDown","onClick","drag","scrollbarDimensions","maxSupportedCssHeight","SlickGrid","columns","defaults","explicitInitialization","rowHeight","defaultColumnWidth","enableAddRow","leaveSpaceForNewRows","editable","autoEdit","enableCellNavigation","enableColumnReorder","asyncEditorLoading","asyncEditorLoadDelay","forceFitColumns","enableAsyncPostRender","asyncPostRenderDelay","autoHeight","editorLock","showHeaderRow","headerRowHeight","showTopPanel","topPanelHeight","formatterFactory","editorFactory","cellFlashingCssClass","selectedCellCssClass","enableTextSelectionOnCells","dataItemColumnValueExtractor","fullWidthRows","multiColumnSort","defaultFormatter","forceSyncScrolling","numberOfColumnsToFreeze","columnDefaults","name","resizable","sortable","minWidth","rerenderOnResize","headerCssClass","defaultSortAsc","focusable","selectable","th","h","ph","n","cj","page","offset","vScrollDir","initialized","uid","round","random","self","$focusSink","$focusSink2","$outerContainer","$container_0","$container_1","$headerScroller_0","$headerScroller_1","$headers_0","$headers_1","$headerRow_0","$headerRow_1","$headerRowScroller_0","$headerRowScroller_1","$headerRowSpacer_0","$headerRowSpacer_1","$topPanelScroller_0","$topPanelScroller_1","$topPanel_0","$topPanel_1","$viewport_0","$viewport_1","$canvas_0","$canvas_1","canvasWidth_0","canvasWidth_1","$style","$boundAncestors","stylesheet","columnCssRulesB","columnCssRulesF","viewportH_1","viewportW_1","viewportHasHScroll_1","viewportHasVScroll_1","headerColumnWidthDiff","headerColumnHeightDiff","cellWidthDiff","cellHeightDiff","absoluteColumnMinWidth","numberOfRows","tabbingDirection","activePosX","activeCell","activeCellNode","currentEditor","serializedEditorValue","rowsCache","renderedRows","numVisibleRows","prevScrollTop","scrollTop","lastRenderedScrollTop","lastRenderedScrollLeft","prevScrollLeft","selectionModel","plugins","cellCssClasses","columnsById","sortColumns","columnPosRear","columnPosFront","h_editorLoader","h_render","h_postrender","postProcessedRows","postProcessToRow","postProcessFromRow","counter_rows_rendered","counter_rows_removed","rtl","rear","front","gotoRight","gotoLeft","getOffsetRear","Error","getMaxSupportedCssHeight","measureScrollbar","validateAndEnforceOptions","m","maxWidth","empty","addClass","isRTL","gotoRear","gotoFront","getOffsetRight","getScrollLeft","el","setScrollLeft","test","totalWidthOfFrozenColumns","containerCSS","outline","containerClass","len","headersWidthObj","getHeadersWidth","frozen","nonFrozen","canvasWidthObj","getCanvasWidth","clone","finishInitialization","parseFloat","measureCellPaddingAndBorder","disableSelection","target","is","updateColumnCaches","createColumnHeaders","setupColumnSort","createCssRules","resizeCanvas","bindAncestorScrollEvents","handleScroll","handleHeaderContextMenu","handleHeaderClick","delegate","handleHeaderMouseEnter","handleHeaderMouseLeave","handleHeaderRowScroll","add","handleDblClick","handleContextMenu","handleDragInit","distance","handleDragStart","handleDrag","handleDragEnd","handleMouseEnter","handleMouseLeave","wheelDelta","originalEvent","newScrollTop","registerPlugin","plugin","unshift","unregisterPlugin","setSelectionModel","model","handleSelectedRangesChanged","getSelectionModel","getCanvasNode","nodeClassName","$c","dim","clientHeight","headersWidth_0","headersWidth_1","ii","availableWidth","rowWidth_0","rowWidth_1","colWidth","updateCanvasWidth","forceColumnWidthsUpdate","oldCanvasWidth_0","oldCanvasWidth_1","newCanvasWidth","canvasWidthDelta_0","applyColumnWidths","$target","jquery","supportedHeight","testUpTo","navigator","userAgent","toLowerCase","match","div","elem","parentNode","scrollHeight","$elem","handleActiveCellPositionChange","unbindAncestorScrollEvents","unbind","updateColumnHeader","columnId","toolTip","getColumnIndex","$header","children","eq","trigger","onBeforeHeaderCellDestroy","node","onHeaderCellRendered","getHeaderRow","getColumnHeaderNode","merge","getHeaderRowColumn","onMouseEnter","onMouseLeave","$headerRowObject","onBeforeHeaderRowCellDestroy","header","on","headerRowCell","onHeaderRowCellRendered","setSortColumns","setupColumnResize","setupColumnReorder","click","hasClass","$col","closest","getEditorLock","sortOpts","sortAsc","onSort","sortCols","map","col","sortCol","sortableHeaderGroups","forEach","$headers","filter","containment","axis","cursor","tolerance","helper","placeholder","forcePlaceholderSize","start","outerWidth","beforeStop","reorderedIds","reorderedColumns","columnIndex","replace","thingToPush","setColumns","slice","onColumnsReordered","c","pageX","columnElements","minPageX","maxPageX","firstResizable","lastResizable","isFrozenColumn","headerElements","isPartOfAFrozenColumn","getIndexOffset","dd","getColumnElements","parent","nextColumnIndex","shrinkLeewayOnFront","stretchLeewayOnFront","previousWidth","shrinkLeewayOnRear","stretchLeewayOnRear","actualMinWidth","d","applyColumnHeaderWidths","syncColumnCellResize","newWidth","invalidateAllRows","render","onColumnsResized","isFrozen","index","parents","getVBoxDelta","$el","delta","v","r","rules","styleSheet","cssText","join","getColumnCssRules","sheets","styleSheets","ownerNode","owningElement","matches","columnIdx","cssRules","selector","selectorText","exec","removeCssRules","onBeforeDestroy","evt","getUID","getEditController","autosizeColumns","prevTotal","widths","shrinkLeeway","total","availWidth","shrinkProportion","absMinWidth","shrinkSize","floor","growProportion","growSize","reRender","applyWidthToHeaders","headers","w","rule","nonFrozenWidth","frozenWidth","columnCount","setNumberOfColumnsToFreeze","setSortColumn","ascending","cols","headerColumnEls","getSortColumns","hash","k","canCellBeSelected","setCellCssStyles","onSelectedRowsChanged","columnDefinitions","setOptions","makeActiveCellNormal","invalidateRow","setData","newData","scrollToTop","updateRowCount","scrollTo","getData","getLength","getDataLengthIncludingAddNew","getDataItem","getItem","getTopPanel","setTopPanelVisibility","visible","slideDown","slideUp","setHeaderRowVisibility","getContainerNode","get","getRowTop","getRowFromPosition","oldOffset","cleanupRows","getVisibleRange","updateRowPositions","onViewportChanged","dataContext","getFormatter","rowMetadata","getItemMetadata","columnOverrides","formatter","getEditor","columnMetadata","editor","getDataItemValueForColumn","appendRowHtml","stringArray","dataLength","rowCss","metadata","cssClasses","colspan","rowString","columnData","appendCellHtml","rightPx","leftPx","cellCss","cssClass","key","cellString","contents","cellRenderQueue","cellColSpans","rangeToKeep","removeRowFromCache","invalidate","cacheEntry","childToRemove","rowNode","invalidateRows","rl","updateCell","cellNode","getCellNode","innerHTML","invalidatePostProcessingResults","updateRow","ensureCellNodesInRowsCache","cellNodesByColumnIdx","hasOwnProperty","getViewportHeight","ceil","oldViewportHasVScroll","l","resetActiveCell","oldH","oldScrollTopInRange","viewportTop","viewportLeft","getRenderedRange","buffer","lastChild_1","lastChild","lastChild_0","previousSibling","cleanUpCells","cellsToRemove","cellToRemove","childNodes","cleanUpAndRenderCells","cellsAdded","processedRows","btm","nonFrozenDiv","processedRow","nonFrozenNode","frozenNode","frozenDiv","renderRows","parentNode_1","needToReselectCell","parentNode_0","firstChild","startPostProcessing","clearTimeout","setTimeout","asyncPostProcessRows","rowTop","rendered","scrollInfo","vScrollDist","abs","hScrollDist","onScroll","asyncPostRender","updateCellCssStylesOnRenderedRows","addedHash","removedHash","addedRowHash","removedRowHash","addCellCssStyles","onCellCssStylesChanged","removeCellCssStyles","prevHash","getCellCssStyles","flashCell","speed","$cell","toggleCellClass","times","queue","toggleClass","dequeue","cellExists","retval","onDragInit","onDragStart","onDrag","onDragEnd","skipSlickGridDefaults","handled","cancelEditAndSetFocus","navigatePageDown","navigatePageUp","navigateLeft","navigateRight","navigateUp","navigateDown","commitEditAndSetFocus","makeActiveCellEditable","error","activeElement","setFocus","setActiveCellInternal","onContextMenu","onDblClick","gotoCell","onHeaderMouseEnter","onHeaderMouseLeave","onHeaderContextMenu","onHeaderClick","getCellFromPoint","getCellFromNode","cls","className","substr","getRowFromNode","rowItem","getCanvasFromEvent","closestCanvas","getCellNodeBox","y1","y2","x1","x2","scrollCellIntoView","doPaging","getColspan","rearVal","frontVal","scrollRight","adjustXToRight","newCell","opt_editMode","activeCellChanged","isCellPotentiallyEditable","clearTextSelection","getSelection","sel","removeAllRanges","cannotTriggerInsert","onBeforeCellEditorDestroy","onBeforeEditCell","gridPosition","absBox","maxLength","elm","getOffsetLeft","offsetLeft","offsetWidth","box","offsetTop","outerHeight","offsetParent","offsetHeight","getActiveCellPosition","getGridPosition","onActiveCellPositionChanged","cellBox","getCellEditor","getActiveCellNode","rowAtTop","rowAtBottom","scrollRowToTop","scrollPage","deltaRows","prevCell","prevActivePosX","findFirstFocusableCell","findLastFocusableCell","lastFocusableCell","_posX","posX","firstFocusableCell","pos","prev","gotoDown","gotoUp","gotoNext","gotoPrev","lastSelectableCell","navigate","up","down","right","next","stepFn","isAddNewRow","forceEdit","editCommand","serializedValue","prevSerializedValue","execute","undo","editCommandHandler","onCellChange","newItem","onAddNewRow","onValidationError","debug","s","alert","eval","expr","slickGridVersion","getViewport","editActiveCell","Grid","str","arg","opts","isFunction","indexOf","$event","$special","special","not","handle","relative","drop","datakey","noBubble","obj","related","def","setup","attachEvent","dontstart","teardown","removeData","textselect","detachEvent","touched","results","currentTarget","propagates","mousedown","interactions","interaction","pageY","dragging","hijack","flatten","live","callback","droppable","pow","getTime","result","ia","orig","mode","cancelled","properties","p","subject","dispatch","proxy","update","startX","startY","deltaX","deltaY","originalX","originalY","offsetX","offsetY","available","nodeType","arr","member","makeArray","bool","unselectable","locate","$dispatch","touchHooks","fixHooks","touchstart","touchmove","touchend","touchcancel","props","split","touches","changedTouches","draginit","dragstart","dragend"],"mappings":"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","file":"105-c-8bf8a13ae3.js","sourcesContent":["// Based on https://github.com/react-bootstrap/dom-helpers/blob/master/src/util/inDOM.js\r\nvar inDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\r\nvar cachedType;\r\nexport function _setScrollType(type) {\r\n    cachedType = type;\r\n}\r\n// Based on the jquery plugin https://github.com/othree/jquery.rtl-scroll-type\r\nexport function detectScrollType() {\r\n    if (cachedType) {\r\n        return cachedType;\r\n    }\r\n    if (!inDOM || !window.document.body) {\r\n        return 'indeterminate';\r\n    }\r\n    var dummy = window.document.createElement('div');\r\n    dummy.appendChild(document.createTextNode('ABCD'));\r\n    dummy.dir = 'rtl';\r\n    dummy.style.fontSize = '14px';\r\n    dummy.style.width = '4px';\r\n    dummy.style.height = '1px';\r\n    dummy.style.position = 'absolute';\r\n    dummy.style.top = '-1000px';\r\n    dummy.style.overflow = 'scroll';\r\n    document.body.appendChild(dummy);\r\n    cachedType = 'reverse';\r\n    if (dummy.scrollLeft > 0) {\r\n        cachedType = 'default';\r\n    }\r\n    else {\r\n        dummy.scrollLeft = 1;\r\n        if (dummy.scrollLeft === 0) {\r\n            cachedType = 'negative';\r\n        }\r\n    }\r\n    document.body.removeChild(dummy);\r\n    return cachedType;\r\n}\r\n// Based on https://stackoverflow.com/a/24394376\r\nexport function getNormalizedScrollLeft(element, direction) {\r\n    var scrollLeft = element.scrollLeft;\r\n    // Perform the calculations only when direction is rtl to avoid messing up the ltr bahavior\r\n    if (direction !== 'rtl') {\r\n        return scrollLeft;\r\n    }\r\n    var type = detectScrollType();\r\n    if (type === 'indeterminate') {\r\n        return Number.NaN;\r\n    }\r\n    switch (type) {\r\n        case 'negative':\r\n            return element.scrollWidth - element.clientWidth + scrollLeft;\r\n        case 'reverse':\r\n            return element.scrollWidth - element.clientWidth - scrollLeft;\r\n    }\r\n    return scrollLeft;\r\n}\r\nexport function setNormalizedScrollLeft(element, scrollLeft, direction) {\r\n    // Perform the calculations only when direction is rtl to avoid messing up the ltr bahavior\r\n    if (direction !== 'rtl') {\r\n        element.scrollLeft = scrollLeft;\r\n        return;\r\n    }\r\n    var type = detectScrollType();\r\n    if (type === 'indeterminate') {\r\n        return;\r\n    }\r\n    switch (type) {\r\n        case 'negative':\r\n            element.scrollLeft = element.clientWidth - element.scrollWidth + scrollLeft;\r\n            break;\r\n        case 'reverse':\r\n            element.scrollLeft = element.scrollWidth - element.clientWidth - scrollLeft;\r\n            break;\r\n        default:\r\n            element.scrollLeft = scrollLeft;\r\n            break;\r\n    }\r\n}\r\n","/*\n * Copyright (c) 2010 Michael Leibman, http://github.com/mleibman/slickgrid\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport $ from 'jquery'\nimport 'vendor/slickgrid/lib/jquery.event.drag-2.2'\n\n/** *\n * Contains core SlickGrid classes.\n * @module Core\n * @namespace Slick\n */\n\n;(function($) {\n  // register namespace\n  $.extend(true, window, {\n    Slick: {\n      Event,\n      EventData,\n      EventHandler,\n      Range,\n      NonDataRow: NonDataItem,\n      Group,\n      GroupTotals,\n      EditorLock,\n\n      /** *\n       * A global singleton editor lock.\n       * @class GlobalEditorLock\n       * @static\n       * @constructor\n       */\n      GlobalEditorLock: new EditorLock()\n    }\n  })\n\n  /** *\n   * An event object for passing data to event handlers and letting them control propagation.\n   * <p>This is pretty much identical to how W3C and jQuery implement events.</p>\n   * @class EventData\n   * @constructor\n   */\n  function EventData() {\n    let isPropagationStopped = false\n    let isImmediatePropagationStopped = false\n\n    /** *\n     * Stops event from propagating up the DOM tree.\n     * @method stopPropagation\n     */\n    this.stopPropagation = function() {\n      isPropagationStopped = true\n    }\n\n    /** *\n     * Returns whether stopPropagation was called on this event object.\n     * @method isPropagationStopped\n     * @return {Boolean}\n     */\n    this.isPropagationStopped = function() {\n      return isPropagationStopped\n    }\n\n    /** *\n     * Prevents the rest of the handlers from being executed.\n     * @method stopImmediatePropagation\n     */\n    this.stopImmediatePropagation = function() {\n      isImmediatePropagationStopped = true\n    }\n\n    /** *\n     * Returns whether stopImmediatePropagation was called on this event object.\\\n     * @method isImmediatePropagationStopped\n     * @return {Boolean}\n     */\n    this.isImmediatePropagationStopped = function() {\n      return isImmediatePropagationStopped\n    }\n  }\n\n  /** *\n   * A simple publisher-subscriber implementation.\n   * @class Event\n   * @constructor\n   */\n  function Event() {\n    const handlers = []\n\n    /** *\n     * Adds an event handler to be called when the event is fired.\n     * <p>Event handler will receive two arguments - an <code>EventData</code> and the <code>data</code>\n     * object the event was fired with.<p>\n     * @method subscribe\n     * @param fn {Function} Event handler.\n     */\n    this.subscribe = function(fn) {\n      handlers.push(fn)\n    }\n\n    /** *\n     * Removes an event handler added with <code>subscribe(fn)</code>.\n     * @method unsubscribe\n     * @param fn {Function} Event handler to be removed.\n     */\n    this.unsubscribe = function(fn) {\n      for (let i = handlers.length - 1; i >= 0; i--) {\n        if (handlers[i] === fn) {\n          handlers.splice(i, 1)\n        }\n      }\n    }\n\n    /** *\n     * Fires an event notifying all subscribers.\n     * @method notify\n     * @param args {Object} Additional data object to be passed to all handlers.\n     * @param e {EventData}\n     *      Optional.\n     *      An <code>EventData</code> object to be passed to all handlers.\n     *      For DOM events, an existing W3C/jQuery event object can be passed in.\n     * @param scope {Object}\n     *      Optional.\n     *      The scope (\"this\") within which the handler will be executed.\n     *      If not specified, the scope will be set to the <code>Event</code> instance.\n     */\n    this.notify = function(args, e, scope) {\n      e = e || new EventData()\n      scope = scope || this\n\n      let returnValue\n      for (\n        let i = 0;\n        i < handlers.length && !(e.isPropagationStopped() || e.isImmediatePropagationStopped());\n        i++\n      ) {\n        returnValue = handlers[i].call(scope, e, args)\n      }\n\n      return returnValue\n    }\n  }\n\n  function EventHandler() {\n    let handlers = []\n\n    this.subscribe = function(event, handler) {\n      handlers.push({\n        event,\n        handler\n      })\n      event.subscribe(handler)\n\n      return this // allow chaining\n    }\n\n    this.unsubscribe = function(event, handler) {\n      let i = handlers.length\n      while (i--) {\n        if (handlers[i].event === event && handlers[i].handler === handler) {\n          handlers.splice(i, 1)\n          event.unsubscribe(handler)\n          return\n        }\n      }\n\n      return this // allow chaining\n    }\n\n    this.unsubscribeAll = function() {\n      let i = handlers.length\n      while (i--) {\n        handlers[i].event.unsubscribe(handlers[i].handler)\n      }\n      handlers = []\n\n      return this // allow chaining\n    }\n  }\n\n  /** *\n   * A structure containing a range of cells.\n   * @class Range\n   * @constructor\n   * @param fromRow {Integer} Starting row.\n   * @param fromCell {Integer} Starting cell.\n   * @param toRow {Integer} Optional. Ending row. Defaults to <code>fromRow</code>.\n   * @param toCell {Integer} Optional. Ending cell. Defaults to <code>fromCell</code>.\n   */\n  function Range(fromRow, fromCell, toRow, toCell) {\n    if (toRow === undefined && toCell === undefined) {\n      toRow = fromRow\n      toCell = fromCell\n    }\n\n    /** *\n     * @property fromRow\n     * @type {Integer}\n     */\n    this.fromRow = Math.min(fromRow, toRow)\n\n    /** *\n     * @property fromCell\n     * @type {Integer}\n     */\n    this.fromCell = Math.min(fromCell, toCell)\n\n    /** *\n     * @property toRow\n     * @type {Integer}\n     */\n    this.toRow = Math.max(fromRow, toRow)\n\n    /** *\n     * @property toCell\n     * @type {Integer}\n     */\n    this.toCell = Math.max(fromCell, toCell)\n\n    /** *\n     * Returns whether a range represents a single row.\n     * @method isSingleRow\n     * @return {Boolean}\n     */\n    this.isSingleRow = function() {\n      return this.fromRow == this.toRow\n    }\n\n    /** *\n     * Returns whether a range represents a single cell.\n     * @method isSingleCell\n     * @return {Boolean}\n     */\n    this.isSingleCell = function() {\n      return this.fromRow == this.toRow && this.fromCell == this.toCell\n    }\n\n    /** *\n     * Returns whether a range contains a given cell.\n     * @method contains\n     * @param row {Integer}\n     * @param cell {Integer}\n     * @return {Boolean}\n     */\n    this.contains = function(row, cell) {\n      return (\n        row >= this.fromRow && row <= this.toRow && cell >= this.fromCell && cell <= this.toCell\n      )\n    }\n\n    /** *\n     * Returns a readable representation of a range.\n     * @method toString\n     * @return {String}\n     */\n    this.toString = function() {\n      if (this.isSingleCell()) {\n        return `(${this.fromRow}:${this.fromCell})`\n      } else {\n        return `(${this.fromRow}:${this.fromCell} - ${this.toRow}:${this.toCell})`\n      }\n    }\n  }\n\n  /** *\n   * A base class that all special / non-data rows (like Group and GroupTotals) derive from.\n   * @class NonDataItem\n   * @constructor\n   */\n  function NonDataItem() {\n    this.__nonDataRow = true\n  }\n\n  /** *\n   * Information about a group of rows.\n   * @class Group\n   * @extends Slick.NonDataItem\n   * @constructor\n   */\n  function Group() {\n    this.__group = true\n\n    /**\n     * Grouping level, starting with 0.\n     * @property level\n     * @type {Number}\n     */\n    this.level = 0\n\n    /** *\n     * Number of rows in the group.\n     * @property count\n     * @type {Integer}\n     */\n    this.count = 0\n\n    /** *\n     * Grouping value.\n     * @property value\n     * @type {Object}\n     */\n    this.value = null\n\n    /** *\n     * Formatted display value of the group.\n     * @property title\n     * @type {String}\n     */\n    this.title = null\n\n    /** *\n     * Whether a group is collapsed.\n     * @property collapsed\n     * @type {Boolean}\n     */\n    this.collapsed = false\n\n    /** *\n     * GroupTotals, if any.\n     * @property totals\n     * @type {GroupTotals}\n     */\n    this.totals = null\n\n    /**\n     * Rows that are part of the group.\n     * @property rows\n     * @type {Array}\n     */\n    this.rows = []\n\n    /**\n     * Sub-groups that are part of the group.\n     * @property groups\n     * @type {Array}\n     */\n    this.groups = null\n\n    /**\n     * A unique key used to identify the group.  This key can be used in calls to DataView\n     * collapseGroup() or expandGroup().\n     * @property groupingKey\n     * @type {Object}\n     */\n    this.groupingKey = null\n  }\n\n  Group.prototype = new NonDataItem()\n\n  /** *\n   * Compares two Group instances.\n   * @method equals\n   * @return {Boolean}\n   * @param group {Group} Group instance to compare to.\n   */\n  Group.prototype.equals = function(group) {\n    return (\n      this.value === group.value &&\n      this.count === group.count &&\n      this.collapsed === group.collapsed &&\n      this.title === group.title\n    )\n  }\n\n  /** *\n   * Information about group totals.\n   * An instance of GroupTotals will be created for each totals row and passed to the aggregators\n   * so that they can store arbitrary data in it.  That data can later be accessed by group totals\n   * formatters during the display.\n   * @class GroupTotals\n   * @extends Slick.NonDataItem\n   * @constructor\n   */\n  function GroupTotals() {\n    this.__groupTotals = true\n\n    /** *\n     * Parent Group.\n     * @param group\n     * @type {Group}\n     */\n    this.group = null\n  }\n\n  GroupTotals.prototype = new NonDataItem()\n\n  /** *\n   * A locking helper to track the active edit controller and ensure that only a single controller\n   * can be active at a time.  This prevents a whole class of state and validation synchronization\n   * issues.  An edit controller (such as SlickGrid) can query if an active edit is in progress\n   * and attempt a commit or cancel before proceeding.\n   * @class EditorLock\n   * @constructor\n   */\n  function EditorLock() {\n    let activeEditController = null\n\n    /** *\n     * Returns true if a specified edit controller is active (has the edit lock).\n     * If the parameter is not specified, returns true if any edit controller is active.\n     * @method isActive\n     * @param editController {EditController}\n     * @return {Boolean}\n     */\n    this.isActive = function(editController) {\n      return editController\n        ? activeEditController === editController\n        : activeEditController !== null\n    }\n\n    /** *\n     * Sets the specified edit controller as the active edit controller (acquire edit lock).\n     * If another edit controller is already active, and exception will be thrown.\n     * @method activate\n     * @param editController {EditController} edit controller acquiring the lock\n     */\n    this.activate = function(editController) {\n      if (editController === activeEditController) {\n        // already activated?\n        return\n      }\n      if (activeEditController !== null) {\n        throw \"SlickGrid.EditorLock.activate: an editController is still active, can't activate another editController\"\n      }\n      if (!editController.commitCurrentEdit) {\n        throw 'SlickGrid.EditorLock.activate: editController must implement .commitCurrentEdit()'\n      }\n      if (!editController.cancelCurrentEdit) {\n        throw 'SlickGrid.EditorLock.activate: editController must implement .cancelCurrentEdit()'\n      }\n      activeEditController = editController\n    }\n\n    /** *\n     * Unsets the specified edit controller as the active edit controller (release edit lock).\n     * If the specified edit controller is not the active one, an exception will be thrown.\n     * @method deactivate\n     * @param editController {EditController} edit controller releasing the lock\n     */\n    this.deactivate = function(editController) {\n      if (activeEditController !== editController) {\n        throw 'SlickGrid.EditorLock.deactivate: specified editController is not the currently active one'\n      }\n      activeEditController = null\n    }\n\n    /** *\n     * Attempts to commit the current edit by calling \"commitCurrentEdit\" method on the active edit\n     * controller and returns whether the commit attempt was successful (commit may fail due to validation\n     * errors, etc.).  Edit controller's \"commitCurrentEdit\" must return true if the commit has succeeded\n     * and false otherwise.  If no edit controller is active, returns true.\n     * @method commitCurrentEdit\n     * @return {Boolean}\n     */\n    this.commitCurrentEdit = function() {\n      return activeEditController ? activeEditController.commitCurrentEdit() : true\n    }\n\n    /** *\n     * Attempts to cancel the current edit by calling \"cancelCurrentEdit\" method on the active edit\n     * controller and returns whether the edit was successfully cancelled.  If no edit controller is\n     * active, returns true.\n     * @method cancelCurrentEdit\n     * @return {Boolean}\n     */\n    this.cancelCurrentEdit = function cancelCurrentEdit() {\n      return activeEditController ? activeEditController.cancelCurrentEdit() : true\n    }\n  }\n})($)\n","/*\n * Copyright (c) 2010 Michael Leibman, http://github.com/mleibman/slickgrid\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport jQuery from 'jquery'\nimport 'vendor/slickgrid/slick.core'\n\n/** *\n * Contains basic SlickGrid editors.\n * @module Editors\n * @namespace Slick\n */\n\n;(function($) {\n  // register namespace\n  $.extend(true, window, {\n    Slick: {\n      Editors: {\n        Text: TextEditor,\n        Integer: IntegerEditor,\n        Date: DateEditor,\n        YesNoSelect: YesNoSelectEditor,\n        Checkbox: CheckboxEditor,\n        PercentComplete: PercentCompleteEditor,\n        LongText: LongTextEditor,\n        UploadGradeCellEditor\n      }\n    }\n  })\n\n  function TextEditor(args) {\n    let $input\n    let defaultValue\n    const scope = this\n\n    this.init = function() {\n      $input = $(\"<INPUT type=text class='editor-text' />\")\n        .appendTo(args.container)\n        .bind('keydown.nav', e => {\n          if (e.keyCode === $.ui.keyCode.LEFT || e.keyCode === $.ui.keyCode.RIGHT) {\n            e.stopImmediatePropagation()\n          }\n        })\n        .focus()\n        .select()\n    }\n\n    this.destroy = function() {\n      $input.remove()\n    }\n\n    this.focus = function() {\n      $input.focus()\n    }\n\n    this.getValue = function() {\n      return $input.val()\n    }\n\n    this.setValue = function(val) {\n      $input.val(val)\n    }\n\n    this.loadValue = function(item) {\n      defaultValue = item[args.column.field] || ''\n      $input.val(defaultValue)\n      $input[0].defaultValue = defaultValue\n      $input.select()\n    }\n\n    this.serializeValue = function() {\n      return $input.val()\n    }\n\n    this.applyValue = function(item, state) {\n      item[args.column.field] = state\n    }\n\n    this.isValueChanged = function() {\n      return !($input.val() == '' && defaultValue == null) && $input.val() != defaultValue\n    }\n\n    this.validate = function() {\n      if (args.column.validator) {\n        const validationResults = args.column.validator($input.val())\n        if (!validationResults.valid) {\n          return validationResults\n        }\n      }\n\n      return {\n        valid: true,\n        msg: null\n      }\n    }\n\n    this.init()\n  }\n\n  function IntegerEditor(args) {\n    let $input\n    let defaultValue\n    const scope = this\n\n    this.init = function() {\n      $input = $(\"<INPUT type=text class='editor-text' />\")\n\n      $input.bind('keydown.nav', e => {\n        if (e.keyCode === $.ui.keyCode.LEFT || e.keyCode === $.ui.keyCode.RIGHT) {\n          e.stopImmediatePropagation()\n        }\n      })\n\n      $input.appendTo(args.container)\n      $input.focus().select()\n    }\n\n    this.destroy = function() {\n      $input.remove()\n    }\n\n    this.focus = function() {\n      $input.focus()\n    }\n\n    this.loadValue = function(item) {\n      defaultValue = item[args.column.field]\n      $input.val(defaultValue)\n      $input[0].defaultValue = defaultValue\n      $input.select()\n    }\n\n    this.serializeValue = function() {\n      return parseInt($input.val(), 10) || 0\n    }\n\n    this.applyValue = function(item, state) {\n      item[args.column.field] = state\n    }\n\n    this.isValueChanged = function() {\n      return !($input.val() == '' && defaultValue == null) && $input.val() != defaultValue\n    }\n\n    this.validate = function() {\n      if (isNaN($input.val())) {\n        return {\n          valid: false,\n          msg: 'Please enter a valid integer'\n        }\n      }\n\n      return {\n        valid: true,\n        msg: null\n      }\n    }\n\n    this.init()\n  }\n\n  function DateEditor(args) {\n    let $input\n    let defaultValue\n    const scope = this\n    let calendarOpen = false\n\n    this.init = function() {\n      $input = $(\"<INPUT type=text class='editor-text' />\")\n      $input.appendTo(args.container)\n      $input.focus().select()\n      $input.datepicker({\n        showOn: 'button',\n        buttonImageOnly: true,\n        buttonImage: '../images/calendar.gif',\n        beforeShow() {\n          calendarOpen = true\n        },\n        onClose() {\n          calendarOpen = false\n        }\n      })\n      $input.width($input.width() - 18)\n    }\n\n    this.destroy = function() {\n      $.datepicker.dpDiv.stop(true, true)\n      $input.datepicker('hide')\n      $input.datepicker('destroy')\n      $input.remove()\n    }\n\n    this.show = function() {\n      if (calendarOpen) {\n        $.datepicker.dpDiv.stop(true, true).show()\n      }\n    }\n\n    this.hide = function() {\n      if (calendarOpen) {\n        $.datepicker.dpDiv.stop(true, true).hide()\n      }\n    }\n\n    this.position = function(position) {\n      if (!calendarOpen) {\n        return\n      }\n      $.datepicker.dpDiv.css('top', position.top + 30).css('left', position.left)\n    }\n\n    this.focus = function() {\n      $input.focus()\n    }\n\n    this.loadValue = function(item) {\n      defaultValue = item[args.column.field]\n      $input.val(defaultValue)\n      $input[0].defaultValue = defaultValue\n      $input.select()\n    }\n\n    this.serializeValue = function() {\n      return $input.val()\n    }\n\n    this.applyValue = function(item, state) {\n      item[args.column.field] = state\n    }\n\n    this.isValueChanged = function() {\n      return !($input.val() == '' && defaultValue == null) && $input.val() != defaultValue\n    }\n\n    this.validate = function() {\n      return {\n        valid: true,\n        msg: null\n      }\n    }\n\n    this.init()\n  }\n\n  function YesNoSelectEditor(args) {\n    let $select\n    let defaultValue\n    const scope = this\n\n    this.init = function() {\n      $select = $(\n        \"<SELECT tabIndex='0' class='editor-yesno'><OPTION value='yes'>Yes</OPTION><OPTION value='no'>No</OPTION></SELECT>\"\n      )\n      $select.appendTo(args.container)\n      $select.focus()\n    }\n\n    this.destroy = function() {\n      $select.remove()\n    }\n\n    this.focus = function() {\n      $select.focus()\n    }\n\n    this.loadValue = function(item) {\n      $select.val((defaultValue = item[args.column.field]) ? 'yes' : 'no')\n      $select.select()\n    }\n\n    this.serializeValue = function() {\n      return $select.val() == 'yes'\n    }\n\n    this.applyValue = function(item, state) {\n      item[args.column.field] = state\n    }\n\n    this.isValueChanged = function() {\n      return $select.val() != defaultValue\n    }\n\n    this.validate = function() {\n      return {\n        valid: true,\n        msg: null\n      }\n    }\n\n    this.init()\n  }\n\n  function CheckboxEditor(args) {\n    let $select\n    let defaultValue\n    const scope = this\n\n    this.init = function() {\n      $select = $(\"<INPUT type=checkbox value='true' class='editor-checkbox' hideFocus>\")\n      $select.appendTo(args.container)\n      $select.focus()\n    }\n\n    this.destroy = function() {\n      $select.remove()\n    }\n\n    this.focus = function() {\n      $select.focus()\n    }\n\n    this.loadValue = function(item) {\n      defaultValue = !!item[args.column.field]\n      if (defaultValue) {\n        $select.prop('checked', true)\n      } else {\n        $select.prop('checked', false)\n      }\n    }\n\n    this.serializeValue = function() {\n      return $select.prop('checked')\n    }\n\n    this.applyValue = function(item, state) {\n      item[args.column.field] = state\n    }\n\n    this.isValueChanged = function() {\n      return this.serializeValue() !== defaultValue\n    }\n\n    this.validate = function() {\n      return {\n        valid: true,\n        msg: null\n      }\n    }\n\n    this.init()\n  }\n\n  function PercentCompleteEditor(args) {\n    let $input, $picker\n    let defaultValue\n    const scope = this\n\n    this.init = function() {\n      $input = $(\"<INPUT type=text class='editor-percentcomplete' />\")\n      $input.width($(args.container).innerWidth() - 25)\n      $input.appendTo(args.container)\n\n      $picker = $(\"<div class='editor-percentcomplete-picker' />\").appendTo(args.container)\n      $picker.append(\n        \"<div class='editor-percentcomplete-helper'><div class='editor-percentcomplete-wrapper'><div class='editor-percentcomplete-slider' /><div class='editor-percentcomplete-buttons' /></div></div>\"\n      )\n\n      $picker\n        .find('.editor-percentcomplete-buttons')\n        .append(\n          '<button val=0>Not started</button><br/><button val=50>In Progress</button><br/><button val=100>Complete</button>'\n        )\n\n      $input.focus().select()\n\n      $picker.find('.editor-percentcomplete-slider').slider({\n        orientation: 'vertical',\n        range: 'min',\n        value: defaultValue,\n        slide(event, ui) {\n          $input.val(ui.value)\n        }\n      })\n\n      $picker.find('.editor-percentcomplete-buttons button').bind('click', function(e) {\n        $input.val($(this).attr('val'))\n        $picker.find('.editor-percentcomplete-slider').slider('value', $(this).attr('val'))\n      })\n    }\n\n    this.destroy = function() {\n      $input.remove()\n      $picker.remove()\n    }\n\n    this.focus = function() {\n      $input.focus()\n    }\n\n    this.loadValue = function(item) {\n      $input.val((defaultValue = item[args.column.field]))\n      $input.select()\n    }\n\n    this.serializeValue = function() {\n      return parseInt($input.val(), 10) || 0\n    }\n\n    this.applyValue = function(item, state) {\n      item[args.column.field] = state\n    }\n\n    this.isValueChanged = function() {\n      return (\n        !($input.val() == '' && defaultValue == null) &&\n        (parseInt($input.val(), 10) || 0) != defaultValue\n      )\n    }\n\n    this.validate = function() {\n      if (isNaN(parseInt($input.val(), 10))) {\n        return {\n          valid: false,\n          msg: 'Please enter a valid positive number'\n        }\n      }\n\n      return {\n        valid: true,\n        msg: null\n      }\n    }\n\n    this.init()\n  }\n\n  /*\n   * An example of a \"detached\" editor.\n   * The UI is added onto document BODY and .position(), .show() and .hide() are implemented.\n   * KeyDown events are also handled to provide handling for Tab, Shift-Tab, Esc and Ctrl-Enter.\n   */\n  function LongTextEditor(args) {\n    let $input, $wrapper\n    let defaultValue\n    const scope = this\n\n    this.init = function() {\n      const $container = $('body')\n\n      $wrapper = $(\n        \"<DIV style='z-index:10000;position:absolute;background:white;padding:5px;border:3px solid gray; -moz-border-radius:10px; border-radius:10px;'/>\"\n      ).appendTo($container)\n\n      $input = $(\n        \"<TEXTAREA hidefocus rows=5 style='backround:white;width:250px;height:80px;border:0;outline:0'>\"\n      ).appendTo($wrapper)\n\n      $(\n        \"<DIV style='text-align:right'><BUTTON>Save</BUTTON><BUTTON>Cancel</BUTTON></DIV>\"\n      ).appendTo($wrapper)\n\n      $wrapper.find('button:first').bind('click', this.save)\n      $wrapper.find('button:last').bind('click', this.cancel)\n      $input.bind('keydown', this.handleKeyDown)\n\n      scope.position(args.position)\n      $input.focus().select()\n    }\n\n    this.handleKeyDown = function(e) {\n      if (e.which == $.ui.keyCode.ENTER && e.ctrlKey) {\n        scope.save()\n      } else if (e.which == $.ui.keyCode.ESCAPE) {\n        e.preventDefault()\n        scope.cancel()\n      } else if (e.which == $.ui.keyCode.TAB && e.shiftKey) {\n        e.preventDefault()\n        args.grid.navigatePrev()\n      } else if (e.which == $.ui.keyCode.TAB) {\n        e.preventDefault()\n        args.grid.navigateNext()\n      }\n    }\n\n    this.save = function() {\n      args.commitChanges()\n    }\n\n    this.cancel = function() {\n      $input.val(defaultValue)\n      args.cancelChanges()\n    }\n\n    this.hide = function() {\n      $wrapper.hide()\n    }\n\n    this.show = function() {\n      $wrapper.show()\n    }\n\n    this.position = function(position) {\n      $wrapper.css('top', position.top - 5).css('left', position.left - 5)\n    }\n\n    this.destroy = function() {\n      $wrapper.remove()\n    }\n\n    this.focus = function() {\n      $input.focus()\n    }\n\n    this.loadValue = function(item) {\n      $input.val((defaultValue = item[args.column.field]))\n      $input.select()\n    }\n\n    this.serializeValue = function() {\n      return $input.val()\n    }\n\n    this.applyValue = function(item, state) {\n      item[args.column.field] = state\n    }\n\n    this.isValueChanged = function() {\n      return !($input.val() == '' && defaultValue == null) && $input.val() != defaultValue\n    }\n\n    this.validate = function() {\n      return {\n        valid: true,\n        msg: null\n      }\n    }\n\n    this.init()\n  }\n\n  function UploadGradeCellEditor(args) {\n    let $container = args.container,\n      columnDef = args.column,\n      value = args.item[columnDef.id]\n\n    if (columnDef.active) {\n      value = value || {}\n      var $input\n      let defaultValue\n\n      if (columnDef.editorFormatter === 'custom_column') {\n        defaultValue = value.new_content\n      } else {\n        defaultValue = value.grade\n      }\n\n      const scope = this\n\n      this.init = function() {\n        switch (columnDef.grading_type) {\n          case 'letter_grade':\n            var letterGrades = [\n              {text: '--', value: ''},\n              {text: 'A', value: 'A'},\n              {text: 'A-', value: 'A-'},\n              {text: 'B+', value: 'B+'},\n              {text: 'B', value: 'B'},\n              {text: 'B-', value: 'B-'},\n              {text: 'C+', value: 'C+'},\n              {text: 'C-', value: 'C-'},\n              {text: 'D+', value: 'D+'},\n              {text: 'D', value: 'D'},\n              {text: 'D-', value: 'D-'},\n              {text: 'F', value: 'F'}\n            ]\n            var outputString = ''\n            $.each(letterGrades, function() {\n              outputString += `<option value=\"${this.value}\" ${\n                this.value === value.grade ? 'selected' : ''\n              }>${this.text}</option>`\n            })\n            $input = $(`<select>${outputString}</select>`)\n            break\n\n          default:\n            $input = $(\"<INPUT type=text class='editor-text' />\")\n        }\n\n        // if there is something typed in to the grade,\n        // can't do if (value.grade) because if they had a grade of 0 it would break.\n        if (typeof value.grade !== 'undefined' && `${value.grade}` !== '') {\n          if (typeof columnDef.editorFormatter === 'function') {\n            $input[0].defaultValue = columnDef.editorFormatter(value.grade)\n            $input.val($input[0].defaultValue)\n          } else {\n            $input[0].defaultValue = value.grade\n            $input.val(defaultValue)\n          }\n        } else if (columnDef.editorFormatter === 'custom_column') {\n          $input[0].defaultValue = value.new_content\n          $input.val(defaultValue)\n        }\n\n        $input.appendTo($container)\n        $input.focus().select()\n\n        if (typeof value.uploaded_grade === 'undefined') {\n          value.uploaded_grade = value.grade\n        }\n      }\n      this.serializeValue = function serializeValue() {\n        return $input.val()\n      }\n\n      this.loadValue = function() {}\n\n      this.destroy = function() {\n        $input.remove()\n      }\n\n      this.focus = function() {\n        $input.focus()\n      }\n\n      this.applyValue = function(item, state) {\n        if (typeof columnDef.editorParser === 'function') {\n          item[columnDef.id].grade = columnDef.editorParser(state)\n        } else if (columnDef.editorParser === 'custom_column') {\n          item[columnDef.id].new_content = state\n        } else {\n          item[columnDef.id].grade = state\n        }\n      }\n\n      this.getValue = function() {\n        return $input.val()\n      }\n\n      this.isValueChanged = function() {\n        return !($input.val() === '' && defaultValue == null) && $input.val() !== defaultValue\n      }\n\n      this.validate = function() {\n        if (columnDef.validator) {\n          const validationResults = columnDef.validator(scope.getValue())\n          if (!validationResults.valid) return validationResults\n        }\n\n        return {\n          valid: true,\n          msg: null\n        }\n      }\n\n      this.init()\n    } else {\n      var $input\n      this.init = function() {\n        const html = value ? value.grade : ''\n        $container.removeClass('selected editable').html(html)\n      }\n\n      this.destroy = function() {}\n\n      this.focus = function() {}\n\n      this.setValue = function() {}\n\n      this.getValue = function() {\n        return value\n      }\n\n      this.isValueChanged = function() {\n        return false\n      }\n\n      this.validate = function() {\n        return {\n          valid: true,\n          msg: null\n        }\n      }\n\n      this.init()\n    }\n  }\n})(jQuery)\n","/*\n * Copyright (c) 2010 Michael Leibman, http://github.com/mleibman/slickgrid\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport jQuery from 'jquery'\nimport 'vendor/slickgrid/slick.core'\n\n;(function($) {\n  // register namespace\n  $.extend(true, window, {\n    Slick: {\n      RowSelectionModel\n    }\n  })\n\n  function RowSelectionModel(options) {\n    let _grid\n    let _ranges = []\n    const _self = this\n    const _handler = new Slick.EventHandler()\n    let _inHandler\n    let _options\n    const _defaults = {\n      selectActiveRow: true\n    }\n\n    function init(grid) {\n      _options = $.extend(true, {}, _defaults, options)\n      _grid = grid\n      _handler.subscribe(_grid.onActiveCellChanged, wrapHandler(handleActiveCellChange))\n      _handler.subscribe(_grid.onKeyDown, wrapHandler(handleKeyDown))\n      _handler.subscribe(_grid.onClick, wrapHandler(handleClick))\n    }\n\n    function destroy() {\n      _handler.unsubscribeAll()\n    }\n\n    function wrapHandler(handler) {\n      return function() {\n        if (!_inHandler) {\n          _inHandler = true\n          handler.apply(this, arguments)\n          _inHandler = false\n        }\n      }\n    }\n\n    function rangesToRows(ranges) {\n      const rows = []\n      for (let i = 0; i < ranges.length; i++) {\n        for (let j = ranges[i].fromRow; j <= ranges[i].toRow; j++) {\n          rows.push(j)\n        }\n      }\n      return rows\n    }\n\n    function rowsToRanges(rows) {\n      const ranges = []\n      const lastCell = _grid.getColumns().length - 1\n      for (let i = 0; i < rows.length; i++) {\n        ranges.push(new Slick.Range(rows[i], 0, rows[i], lastCell))\n      }\n      return ranges\n    }\n\n    function getRowsRange(from, to) {\n      let i,\n        rows = []\n      for (i = from; i <= to; i++) {\n        rows.push(i)\n      }\n      for (i = to; i < from; i++) {\n        rows.push(i)\n      }\n      return rows\n    }\n\n    function getSelectedRows() {\n      return rangesToRows(_ranges)\n    }\n\n    function setSelectedRows(rows) {\n      setSelectedRanges(rowsToRanges(rows))\n    }\n\n    function setSelectedRanges(ranges) {\n      _ranges = ranges\n      _self.onSelectedRangesChanged.notify(_ranges)\n    }\n\n    function getSelectedRanges() {\n      return _ranges\n    }\n\n    function handleActiveCellChange(e, data) {\n      if (_options.selectActiveRow && data.row != null) {\n        setSelectedRanges([new Slick.Range(data.row, 0, data.row, _grid.getColumns().length - 1)])\n      }\n    }\n\n    function handleKeyDown(e) {\n      const activeRow = _grid.getActiveCell()\n      if (\n        activeRow &&\n        e.shiftKey &&\n        !e.ctrlKey &&\n        !e.altKey &&\n        !e.metaKey &&\n        (e.which == 38 || e.which == 40)\n      ) {\n        let selectedRows = getSelectedRows()\n        selectedRows.sort((x, y) => x - y)\n\n        if (!selectedRows.length) {\n          selectedRows = [activeRow.row]\n        }\n\n        let top = selectedRows[0]\n        let bottom = selectedRows[selectedRows.length - 1]\n        let active\n\n        if (e.which == 40) {\n          active = activeRow.row < bottom || top == bottom ? ++bottom : ++top\n        } else {\n          active = activeRow.row < bottom ? --bottom : --top\n        }\n\n        if (active >= 0 && active < _grid.getDataLength()) {\n          _grid.scrollRowIntoView(active)\n          _ranges = rowsToRanges(getRowsRange(top, bottom))\n          setSelectedRanges(_ranges)\n        }\n\n        e.preventDefault()\n        e.stopPropagation()\n      }\n    }\n\n    function handleClick(e) {\n      const cell = _grid.getCellFromEvent(e)\n      if (!cell || !_grid.canCellBeActive(cell.row, cell.cell)) {\n        return false\n      }\n\n      let selection = rangesToRows(_ranges)\n      const idx = $.inArray(cell.row, selection)\n\n      if (!e.ctrlKey && !e.shiftKey && !e.metaKey) {\n        return false\n      } else if (_grid.getOptions().multiSelect) {\n        if (idx === -1 && (e.ctrlKey || e.metaKey)) {\n          selection.push(cell.row)\n          _grid.setActiveCell(cell.row, cell.cell)\n        } else if (idx !== -1 && (e.ctrlKey || e.metaKey)) {\n          selection = $.grep(selection, (o, i) => o !== cell.row)\n          _grid.setActiveCell(cell.row, cell.cell)\n        } else if (selection.length && e.shiftKey) {\n          const last = selection.pop()\n          const from = Math.min(cell.row, last)\n          const to = Math.max(cell.row, last)\n          selection = []\n          for (let i = from; i <= to; i++) {\n            if (i !== last) {\n              selection.push(i)\n            }\n          }\n          selection.push(last)\n          _grid.setActiveCell(cell.row, cell.cell)\n        }\n      }\n\n      _ranges = rowsToRanges(selection)\n      setSelectedRanges(_ranges)\n      e.stopImmediatePropagation()\n\n      return true\n    }\n\n    $.extend(this, {\n      getSelectedRows,\n      setSelectedRows,\n\n      getSelectedRanges,\n      setSelectedRanges,\n\n      init,\n      destroy,\n\n      onSelectedRangesChanged: new Slick.Event()\n    })\n  }\n})(jQuery)\n","/*\n * Copyright (C) 2011 - present Instructure, Inc.\n *\n * This file is part of Canvas.\n *\n * Canvas is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, version 3 of the License.\n *\n * Canvas is distributed in the hope that it will be useful, but WITHOUT ANY\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\n * A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License along\n * with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n// add any plugins to slickgrid here\nimport 'vendor/slickgrid/slick.grid'\nimport 'vendor/slickgrid/slick.editors'\nimport 'vendor/slickgrid/plugins/slick.rowselectionmodel'\n\nexport default Slick\n","/*\n * Copyright (c) 2010 Michael Leibman, http://github.com/mleibman/slickgrid\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport jQuery from 'jquery'\nimport 'vendor/slickgrid/slick.core'\nimport 'vendor/slickgrid/lib/jquery.event.drag-2.2'\nimport {isRTL} from 'jsx/shared/helpers/rtlHelper'\nimport {getNormalizedScrollLeft, setNormalizedScrollLeft} from 'normalize-scroll-left'\nimport 'jqueryui/sortable'\n\n/*\n * These eslint configurations are just becase that's how this file was\n * originally written and we want the file to remain as much like the original\n * source as possible but still want it to tell us about the important stuff.\n */\n\n/* eslint-disable notice/notice, no-var, vars-on-top, prefer-template, object-shorthand, no-use-before-define, max-len, eqeqeq, no-multi-assign, no-cond-assign, one-var */\n/* eslint linebreak-style: [\"error\", \"windows\"] */\n\n/**\n * @license\n * (c) 2009-2013 Michael Leibman\n * michael{dot}leibman{at}gmail{dot}com\n * http://github.com/mleibman/slickgrid\n *\n * Distributed under MIT license.\n * All rights reserved.\n *\n * SlickGrid v2.2\n *\n * NOTES:\n *     Cell/row DOM manipulations are done directly bypassing jQuery's DOM manipulation methods.\n *     This increases the speed dramatically, but can only be done safely because there are no event handlers\n *     or data associated with any cell/row DOM nodes.  Cell editors must make sure they implement .destroy()\n *     and do proper cleanup.\n */\n\n// make sure required JavaScript modules are loaded\nif (typeof jQuery === 'undefined') {\n  throw 'SlickGrid requires jquery module to be loaded'\n}\nif (!jQuery.fn.drag) {\n  throw 'SlickGrid requires jquery.event.drag module to be loaded'\n}\nif (typeof Slick === 'undefined') {\n  throw 'slick.core.js not loaded'\n}\n\n;(function($) {\n  // Slick.Grid\n  $.extend(true, window, {\n    Slick: {\n      Grid: SlickGrid\n    }\n  })\n\n  // shared across all grids on the page\n  var scrollbarDimensions\n  var maxSupportedCssHeight // browser's breaking point\n\n  // ////////////////////////////////////////////////////////////////////////////////////////////\n  // SlickGrid class implementation (available as Slick.Grid)\n\n  /**\n   * Creates a new instance of the grid.\n   * @class SlickGrid\n   * @constructor\n   * @param {Node}              container   Container node to create the grid in.\n   * @param {Array,Object}      data        An array of objects for databinding.\n   * @param {Array}             columns     An array of column definitions.\n   * @param {Object}            options     Grid options.\n   * */\n  function SlickGrid(container, data, columns, options) {\n    // settings\n    var defaults = {\n      explicitInitialization: false,\n      rowHeight: 25,\n      defaultColumnWidth: 80,\n      enableAddRow: false,\n      leaveSpaceForNewRows: false,\n      editable: false,\n      autoEdit: true,\n      enableCellNavigation: true,\n      enableColumnReorder: true,\n      asyncEditorLoading: false,\n      asyncEditorLoadDelay: 100,\n      forceFitColumns: false,\n      enableAsyncPostRender: false,\n      asyncPostRenderDelay: 50,\n      autoHeight: false,\n      editorLock: Slick.GlobalEditorLock,\n      showHeaderRow: false,\n      headerRowHeight: 25,\n      showTopPanel: false,\n      topPanelHeight: 25,\n      formatterFactory: null,\n      editorFactory: null,\n      cellFlashingCssClass: 'flashing',\n      selectedCellCssClass: 'selected',\n      multiSelect: true,\n      enableTextSelectionOnCells: false,\n      dataItemColumnValueExtractor: null,\n      fullWidthRows: false,\n      multiColumnSort: false,\n      defaultFormatter: defaultFormatter,\n      forceSyncScrolling: false,\n      numberOfColumnsToFreeze: 0 // Number of left-most columns to freeze from scrolling\n    }\n\n    var columnDefaults = {\n      name: '',\n      resizable: true,\n      sortable: false,\n      minWidth: 30,\n      rerenderOnResize: false,\n      headerCssClass: null,\n      defaultSortAsc: true,\n      focusable: true,\n      selectable: true\n    }\n\n    // scroller\n    var th // virtual height\n    var h // real scrollable height\n    var ph // page height\n    var n // number of pages\n    var cj // \"jumpiness\" coefficient\n\n    var page = 0 // current page\n    var offset = 0 // current page offset\n    var vScrollDir = 1\n\n    // private\n    var initialized = false\n    var uid = 'slickgrid_' + Math.round(1000000 * Math.random())\n    var self = this\n    var $focusSink, $focusSink2\n\n    var $outerContainer\n    var $container_0\n    var $container_1\n    var $headerScroller_0\n    var $headerScroller_1\n    var $headers_0\n    var $headers_1\n    var $headerRow_0\n    var $headerRow_1\n    var $headerRowScroller_0\n    var $headerRowScroller_1\n    var $headerRowSpacer_0\n    var $headerRowSpacer_1\n    var $topPanelScroller_0\n    var $topPanelScroller_1\n    var $topPanel_0\n    var $topPanel_1\n    var $viewport_0\n    var $viewport_1\n    var $canvas_0\n    var $canvas_1\n    var canvasWidth_0\n    var canvasWidth_1\n\n    var $style\n    var $boundAncestors\n    var stylesheet, columnCssRulesB, columnCssRulesF\n    var viewportH_1\n    var viewportW_1\n\n    var viewportHasHScroll_1\n    var viewportHasVScroll_1\n    // viewport_0 will never have scroll bars so the above two vars are only necessary for viewport_1.\n    var headerColumnWidthDiff = 0,\n      headerColumnHeightDiff = 0, // border+padding\n      cellWidthDiff = 0,\n      cellHeightDiff = 0\n    var absoluteColumnMinWidth\n    var numberOfRows = 0\n\n    var tabbingDirection = 1\n    var activePosX\n    var activeRow, activeCell\n    var activeCellNode = null\n    var currentEditor = null\n    var serializedEditorValue\n    var editController\n\n    var rowsCache = {}\n    var renderedRows = 0\n    var numVisibleRows\n    var prevScrollTop = 0\n    var scrollTop = 0\n    var lastRenderedScrollTop = 0\n    var lastRenderedScrollLeft = 0\n    var prevScrollLeft = 0\n    var scrollLeft = 0\n\n    var selectionModel\n    var selectedRows = []\n\n    var plugins = []\n    var cellCssClasses = {}\n\n    var columnsById = {}\n    var sortColumns = []\n    var columnPosRear = []\n    var columnPosFront = []\n\n    // async call handles\n    var h_editorLoader = null\n    var h_render = null\n    var h_postrender = null\n    var postProcessedRows = {}\n    var postProcessToRow = null\n    var postProcessFromRow = null\n\n    // perf counters\n    var counter_rows_rendered = 0\n    var counter_rows_removed = 0\n\n    var rtl = false\n    var rear = 'left'\n    var front = 'right'\n    var gotoRight\n    var gotoLeft\n    var getOffsetRear\n\n    // ////////////////////////////////////////////////////////////////////////////////////////////\n    // Initialization\n\n    function init() {\n      $outerContainer = $(container)\n      $container_1 = $outerContainer\n      if ($outerContainer.length < 1) {\n        throw new Error(\n          'SlickGrid requires a valid container, ' + container + ' does not exist in the DOM.'\n        )\n      }\n\n      // calculate these only once and share between grid instances\n      maxSupportedCssHeight = maxSupportedCssHeight || getMaxSupportedCssHeight()\n      scrollbarDimensions = scrollbarDimensions || measureScrollbar()\n\n      options = $.extend({}, defaults, options)\n      validateAndEnforceOptions()\n      columnDefaults.width = options.defaultColumnWidth\n\n      columnsById = {}\n      for (var i = 0; i < columns.length; i++) {\n        var m = (columns[i] = $.extend({}, columnDefaults, columns[i]))\n        columnsById[m.id] = i\n        if (m.minWidth && m.width < m.minWidth) {\n          m.width = m.minWidth\n        }\n        if (m.maxWidth && m.width > m.maxWidth) {\n          m.width = m.maxWidth\n        }\n      }\n\n      // validate loaded JavaScript modules against requested options\n      if (options.enableColumnReorder && !$.fn.sortable) {\n        throw new Error(\n          \"SlickGrid's 'enableColumnReorder = true' option requires jquery-ui.sortable module to be loaded\"\n        )\n      }\n\n      editController = {\n        commitCurrentEdit: commitCurrentEdit,\n        cancelCurrentEdit: cancelCurrentEdit\n      }\n\n      $outerContainer\n        .empty()\n        .css('overflow', 'hidden')\n        .css('outline', 0)\n        .addClass(uid)\n        .addClass('ui-widget')\n      $container_1\n        .empty()\n        .css('overflow', 'hidden')\n        .css('outline', 0)\n        .addClass(uid)\n        .addClass('ui-widget')\n\n      if (isRTL($outerContainer[0])) {\n        rtl = true\n        rear = 'right'\n        front = 'left'\n        gotoRight = gotoRear\n        gotoLeft = gotoFront\n        getOffsetRear = getOffsetRight\n        getScrollLeft = el => getNormalizedScrollLeft(el, 'rtl')\n        setScrollLeft = (el, val) => setNormalizedScrollLeft(el, val, 'rtl')\n      }\n\n      // set up a positioning container if needed\n      if (!/relative|absolute|fixed/.test($outerContainer.css('position'))) {\n        $outerContainer.css('position', 'relative')\n      }\n      // set up a positioning container if needed\n      if (!/relative|absolute|fixed/.test($container_1.css('position'))) {\n        $container_1.css('position', 'relative')\n      }\n\n      $focusSink = $(\n        \"<div tabIndex='0' hideFocus style='position:fixed;width:0;height:0;top:0;left:0;outline:0;'></div>\"\n      ).appendTo($outerContainer)\n\n      // FreezeColumns - Add outerContainer and frozen column structure - Begin\n      if (options.numberOfColumnsToFreeze > 0) {\n        var totalWidthOfFrozenColumns = 0\n        var container_1Width = 0\n        var containerCSS = {\n          overflow: 'hidden',\n          position: 'absolute',\n          [rear]: 0,\n          top: 0,\n          bottom: 0,\n          outline: 0\n        }\n        var containerClass = uid + ' ui-widget'\n        // Calculate frozen widths\n        for (var i = 0, len = columns.length; i < len; i++) {\n          if (i < options.numberOfColumnsToFreeze) {\n            totalWidthOfFrozenColumns += columns[i].width\n          } else {\n            break\n          }\n        }\n        $container_0 = $(\"<div class='container_0'></div>\")\n          .css($.extend({}, containerCSS, {width: totalWidthOfFrozenColumns}))\n          .addClass(containerClass)\n          .appendTo($outerContainer)\n        $container_1 = $(\"<div class='container_1'></div>\")\n          .css($.extend({}, containerCSS, {[rear]: totalWidthOfFrozenColumns, [front]: 0}))\n          .addClass(containerClass)\n          .appendTo($outerContainer)\n\n        $headerScroller_0 = $(\n          \"<div class='headerScroller_0 slick-header ui-state-default' style='overflow:hidden;position:relative;' />\"\n        ).appendTo($container_0)\n        $headers_0 = $(\n          \"<div class='headers_0 slick-header-columns' style='\" + rear + \":-1000px' />\"\n        ).appendTo($headerScroller_0)\n\n        $headerRowScroller_0 = $(\n          \"<div class='headerRowScroller_0 slick-headerrow ui-state-default' style='overflow:hidden;position:relative;' />\"\n        ).appendTo($container_0)\n        $headerRow_0 = $(\"<div class='headerRow_0 slick-headerrow-columns' />\").appendTo(\n          $headerRowScroller_0\n        )\n        $headerRowSpacer_0 = $(\n          \"<div class='headerRowSpacer_0' style='display:block;height:1px;position:absolute;top:0;left:0;'></div>\"\n        ).appendTo($headerRowScroller_0)\n\n        $topPanelScroller_0 = $(\n          \"<div class='topPanelScroller_0 slick-top-panel-scroller ui-state-default' style='overflow:hidden;position:relative;' />\"\n        ).appendTo($container_0)\n        $topPanel_0 = $(\n          \"<div class='topPanel_0 slick-top-panel' style='width:10000px' />\"\n        ).appendTo($topPanelScroller_0)\n\n        if (!options.showTopPanel) {\n          $topPanelScroller_0.hide()\n        }\n\n        if (!options.showHeaderRow) {\n          $headerRowScroller_0.hide()\n        }\n\n        $viewport_0 = $(\n          \"<div class='viewport_0 slick-viewport' style='width:100%;overflow:hidden;outline:0;position:relative;'>\"\n        ).appendTo($container_0)\n        $canvas_0 = $(\"<div class='canvas_0 grid-canvas' />\").appendTo($viewport_0)\n      }\n      // FreezeColumns - Add outerContainer and frozen column structure - End\n      $headerScroller_1 = $(\n        \"<div class='headerScroller_1 slick-header ui-state-default' style='overflow:hidden;position:relative;' />\"\n      ).appendTo($container_1)\n      $headers_1 = $(\n        \"<div class='headers_1 slick-header-columns' style='\" + rear + \":-1000px' />\"\n      ).appendTo($headerScroller_1)\n\n      // FreezeColumns - Set width of headers - Begin\n      var headersWidthObj = getHeadersWidth()\n      if (options.numberOfColumnsToFreeze > 0) {\n        $headers_0.width(headersWidthObj.frozen + 1000)\n        $headers_1.width(headersWidthObj.nonFrozen)\n      } else {\n        $headers_1.width(headersWidthObj.nonFrozen)\n      }\n      // FreezeColumns - Set width of headers - End\n\n      $headerRowScroller_1 = $(\n        \"<div class='headerRowScroller_1 slick-headerrow ui-state-default' style='overflow:hidden;position:relative;' />\"\n      ).appendTo($container_1)\n      $headerRow_1 = $(\"<div class='headerRow_1 slick-headerrow-columns' />\").appendTo(\n        $headerRowScroller_1\n      )\n      $headerRowSpacer_1 = $(\n        \"<div class='headerRowSpacer_1' style='display:block;height:1px;position:absolute;top:0;left:0;'></div>\"\n      ).appendTo($headerRowScroller_1)\n\n      // FreezeColumns - Set width of header row spacer - Begin\n      var canvasWidthObj = getCanvasWidth()\n      $headerRowSpacer_1.css('width', canvasWidthObj.nonFrozen + scrollbarDimensions.width + 'px')\n      if (options.numberOfColumnsToFreeze > 0) {\n        $headerRowSpacer_0.css('width', canvasWidthObj.frozen + 'px')\n      }\n      // FreezeColumns - Set width of header row spacer - End\n\n      $topPanelScroller_1 = $(\n        \"<div class='topPanelScroller_1 slick-top-panel-scroller ui-state-default' style='overflow:hidden;position:relative;' />\"\n      ).appendTo($container_1)\n      $topPanel_1 = $(\"<div class='topPanel_1 slick-top-panel' style='width:10000px' />\").appendTo(\n        $topPanelScroller_1\n      )\n\n      if (!options.showTopPanel) {\n        $topPanelScroller_1.hide()\n      }\n\n      if (!options.showHeaderRow) {\n        $headerRowScroller_1.hide()\n      }\n\n      $viewport_1 = $(\n        \"<div class='viewport_1 slick-viewport' style='width:100%;overflow:auto;outline:0;position:relative;'>\"\n      ).appendTo($container_1)\n      $viewport_1.css('overflow-y', options.autoHeight ? 'hidden' : 'auto')\n\n      $canvas_1 = $(\"<div class='canvas_1 grid-canvas' />\").appendTo($viewport_1)\n\n      $focusSink2 = $focusSink.clone().appendTo($outerContainer)\n\n      if (!options.explicitInitialization) {\n        finishInitialization()\n      }\n    }\n\n    function finishInitialization() {\n      if (!initialized) {\n        initialized = true\n\n        viewportW_1 = parseFloat($.css($outerContainer[0], 'width', true))\n\n        // header columns and cells may have different padding/border skewing width calculations (box-sizing, hello?)\n        // calculate the diff so we can set consistent sizes\n        measureCellPaddingAndBorder()\n\n        // for usability reasons, all text selection in SlickGrid is disabled\n        // with the exception of input and textarea elements (selection must\n        // be enabled there so that editors work as expected); note that\n        // selection in grid cells (grid body) is already unavailable in\n        // all browsers except IE\n        disableSelection($headers_1) // disable all text selection in header (including input and textarea)\n\n        if (!options.enableTextSelectionOnCells) {\n          // disable text selection in grid cells except in input and textarea elements\n          // (this is IE-specific, because selectstart event will only fire in IE)\n          $viewport_1.bind('selectstart.ui', event => $(event.target).is('input,textarea'))\n        }\n\n        updateColumnCaches()\n        createColumnHeaders()\n        setupColumnSort()\n        createCssRules()\n        resizeCanvas()\n        bindAncestorScrollEvents()\n\n        $outerContainer.bind('resize.slickgrid', resizeCanvas)\n        $container_1.bind('resize.slickgrid', resizeCanvas)\n        $viewport_1.bind('scroll', handleScroll).bind('click', handleClick)\n        $headerScroller_1\n          .bind('contextmenu', handleHeaderContextMenu)\n          .bind('click', handleHeaderClick)\n          .delegate('.slick-header-column', 'mouseenter', handleHeaderMouseEnter)\n          .delegate('.slick-header-column', 'mouseleave', handleHeaderMouseLeave)\n        $headerRowScroller_1.bind('scroll', handleHeaderRowScroll)\n        $focusSink.add($focusSink2).bind('keydown', handleKeyDown)\n        $canvas_1\n          .bind('keydown', handleKeyDown)\n          .bind('click', handleClick)\n          .bind('dblclick', handleDblClick)\n          .bind('contextmenu', handleContextMenu)\n          .bind('draginit', handleDragInit)\n          .bind('dragstart', {distance: 3}, handleDragStart)\n          .bind('drag', handleDrag)\n          .bind('dragend', handleDragEnd)\n          .delegate('.slick-cell', 'mouseenter', handleMouseEnter)\n          .delegate('.slick-cell', 'mouseleave', handleMouseLeave)\n\n        if (options.numberOfColumnsToFreeze > 0) {\n          $container_0.bind('resize.slickgrid', resizeCanvas)\n          $viewport_0.bind('mousewheel', e => {\n            var wheelDelta = e.originalEvent.wheelDelta\n            var newScrollTop = scrollTop - wheelDelta\n            if (newScrollTop < 0) {\n              newScrollTop = 0\n            }\n            handleScroll({wheelDelta: wheelDelta, scrollTop: newScrollTop})\n          })\n          $headerScroller_0\n            .bind('contextmenu', handleHeaderContextMenu)\n            .bind('click', handleHeaderClick)\n            .delegate('.slick-header-column', 'mouseenter', handleHeaderMouseEnter)\n            .delegate('.slick-header-column', 'mouseleave', handleHeaderMouseLeave)\n          $headerRowScroller_0.bind('scroll', handleHeaderRowScroll)\n          $canvas_0\n            .bind('keydown', handleKeyDown)\n            .bind('click', handleClick)\n            .bind('dblclick', handleDblClick)\n            .bind('contextmenu', handleContextMenu)\n            .bind('draginit', handleDragInit)\n            .bind('dragstart', {distance: 3}, handleDragStart)\n            .bind('drag', handleDrag)\n            .bind('dragend', handleDragEnd)\n            .delegate('.slick-cell', 'mouseenter', handleMouseEnter)\n            .delegate('.slick-cell', 'mouseleave', handleMouseLeave)\n        }\n      }\n    }\n\n    function registerPlugin(plugin) {\n      plugins.unshift(plugin)\n      plugin.init(self)\n    }\n\n    function unregisterPlugin(plugin) {\n      for (var i = plugins.length; i >= 0; i--) {\n        if (plugins[i] === plugin) {\n          if (plugins[i].destroy) {\n            plugins[i].destroy()\n          }\n          plugins.splice(i, 1)\n          break\n        }\n      }\n    }\n\n    function setSelectionModel(model) {\n      if (selectionModel) {\n        selectionModel.onSelectedRangesChanged.unsubscribe(handleSelectedRangesChanged)\n        if (selectionModel.destroy) {\n          selectionModel.destroy()\n        }\n      }\n\n      selectionModel = model\n      if (selectionModel) {\n        selectionModel.init(self)\n        selectionModel.onSelectedRangesChanged.subscribe(handleSelectedRangesChanged)\n      }\n    }\n\n    function getSelectionModel() {\n      return selectionModel\n    }\n\n    function getCanvasNode(nodeClassName) {\n      // TODO: SFA: This is the entry point into fixing the row reordering style issue\n      var canvasNode = $canvas_1[0] // Original code\n      // New code not yet complete\n      // if(nodeClassName != undefined){\n      //  canvasNode = {\"frozen\": $canvas_0[0],\n      //                \"nonFrozen\": $canvas_1[0]\n      //               };\n      // }\n      return canvasNode\n    }\n\n    function measureScrollbar() {\n      var $c = $(\n        \"<div style='position:absolute; top:-10000px; left:-10000px; width:100px; height:100px; overflow:scroll;'></div>\"\n      ).appendTo('body')\n      var dim = {\n        width: $c.width() - $c[0].clientWidth,\n        height: $c.height() - $c[0].clientHeight\n      }\n      $c.remove()\n      return dim\n    }\n\n    function getHeadersWidth() {\n      var headersWidth_0 = 0\n      var headersWidth_1 = 0\n      var numberOfColumnsToFreeze = options.numberOfColumnsToFreeze\n      for (var i = 0, ii = columns.length; i < ii; i++) {\n        var width = columns[i].width\n        if (i < numberOfColumnsToFreeze) {\n          headersWidth_0 += width\n        } else {\n          headersWidth_1 += width\n        }\n      }\n      headersWidth_0 += 1000\n      headersWidth_1 += scrollbarDimensions.width\n      headersWidth_1 = Math.max(headersWidth_1, viewportW_1) + 1000\n      return {frozen: headersWidth_0, nonFrozen: headersWidth_1}\n    }\n\n    function getCanvasWidth() {\n      var availableWidth = viewportHasVScroll_1\n        ? viewportW_1 - scrollbarDimensions.width\n        : viewportW_1\n      var rowWidth_0 = 0\n      var rowWidth_1 = 0\n      var numberOfColumnsToFreeze = options.numberOfColumnsToFreeze\n      var i = columns.length\n      while (i--) {\n        var colWidth = columns[i].width\n        if (i < numberOfColumnsToFreeze) {\n          rowWidth_0 += colWidth\n        } else {\n          rowWidth_1 += colWidth\n        }\n      }\n      rowWidth_1 = options.fullWidthRows ? Math.max(rowWidth_1, availableWidth) : rowWidth_1\n      return {frozen: rowWidth_0, nonFrozen: rowWidth_1}\n    }\n\n    function updateCanvasWidth(forceColumnWidthsUpdate) {\n      var oldCanvasWidth_0 = canvasWidth_0\n      var oldCanvasWidth_1 = canvasWidth_1\n\n      var newCanvasWidth = getCanvasWidth()\n      canvasWidth_0 = newCanvasWidth.frozen\n      canvasWidth_1 = newCanvasWidth.nonFrozen\n\n      // FreezeColumns - Handle left and main canvas widths\n      var headersWidthObj = getHeadersWidth()\n      var canvasWidthDelta_0 = 0\n      if (options.numberOfColumnsToFreeze > 0 && canvasWidth_0 != oldCanvasWidth_0) {\n        $canvas_0.width(canvasWidth_0)\n        $headerRow_0.width(canvasWidth_0)\n        $headers_0.width(headersWidthObj.frozen)\n        $headerRowSpacer_0.width(canvasWidth_0)\n        if (oldCanvasWidth_0 != undefined) {\n          canvasWidthDelta_0 = canvasWidth_0 - oldCanvasWidth_0\n          canvasWidth_1 -= canvasWidthDelta_0\n          viewportW_1 -= canvasWidthDelta_0\n          $container_0[0].style.width =\n            parseInt($container_0[0].style.width) + canvasWidthDelta_0 + 'px'\n          $container_1[0].style[rear] = canvasWidth_0 + 'px'\n          $container_1[0].style.width =\n            parseInt($container_1[0].style.width) - canvasWidthDelta_0 + 'px'\n        }\n      }\n      if (canvasWidth_1 != oldCanvasWidth_1 || canvasWidthDelta_0 != 0) {\n        $canvas_1.width(canvasWidth_1)\n        $headerRow_1.width(canvasWidth_1)\n        $headers_1.width(headersWidthObj.nonFrozen)\n        viewportHasHScroll_1 = canvasWidth_1 > viewportW_1 - scrollbarDimensions.width\n      }\n      $headerRowSpacer_1.width(\n        canvasWidth_1 + (viewportHasVScroll_1 ? scrollbarDimensions.width : 0)\n      )\n\n      if (canvasWidth_1 != oldCanvasWidth_1 || forceColumnWidthsUpdate || canvasWidthDelta_0 != 0) {\n        applyColumnWidths()\n      }\n    }\n\n    function disableSelection($target) {\n      if ($target && $target.jquery) {\n        $target\n          .attr('unselectable', 'on')\n          .css('MozUserSelect', 'none')\n          .bind('selectstart.ui', () => false) // from jquery:ui.core.js 1.7.2\n      }\n    }\n\n    function getMaxSupportedCssHeight() {\n      var supportedHeight = 1000000\n      // FF reports the height back but still renders blank after ~6M px\n      var testUpTo = navigator.userAgent.toLowerCase().match(/firefox/) ? 6000000 : 1000000000\n      var div = $(\"<div style='display:none' />\").appendTo(document.body)\n\n      while (true) {\n        var test = supportedHeight * 2\n        div.css('height', test)\n        if (test > testUpTo || div.height() !== test) {\n          break\n        } else {\n          supportedHeight = test\n        }\n      }\n\n      div.remove()\n      return supportedHeight\n    }\n\n    // TODO:  this is static.  need to handle page mutation.\n    function bindAncestorScrollEvents() {\n      var elem = $canvas_1[0]\n      while ((elem = elem.parentNode) != document.body && elem != null) {\n        // bind to scroll containers only\n        if (\n          elem == $viewport_1[0] ||\n          elem.scrollWidth != elem.clientWidth ||\n          elem.scrollHeight != elem.clientHeight\n        ) {\n          var $elem = $(elem)\n          if (!$boundAncestors) {\n            $boundAncestors = $elem\n          } else {\n            $boundAncestors = $boundAncestors.add($elem)\n          }\n          $elem.bind('scroll.' + uid, handleActiveCellPositionChange)\n        }\n      }\n    }\n\n    function unbindAncestorScrollEvents() {\n      if (!$boundAncestors) {\n        return\n      }\n      $boundAncestors.unbind('scroll.' + uid)\n      $boundAncestors = null\n    }\n\n    function updateColumnHeader(columnId, title, toolTip) {\n      if (!initialized) {\n        return\n      }\n      var idx = getColumnIndex(columnId)\n      if (idx == null) {\n        return\n      }\n\n      var columnDef = columns[idx]\n      let $header\n\n      if (options.numberOfColumnsToFreeze > 0) {\n        if (options.numberOfColumnsToFreeze > idx) {\n          $header = $headers_0.children().eq(idx)\n        } else {\n          $header = $headers_1.children().eq(idx - options.numberOfColumnsToFreeze)\n        }\n      }\n\n      if ($header) {\n        if (title !== undefined) {\n          columns[idx].name = title\n        }\n        if (toolTip !== undefined) {\n          columns[idx].toolTip = toolTip\n        }\n\n        trigger(self.onBeforeHeaderCellDestroy, {\n          node: $header[0],\n          column: columnDef\n        })\n\n        $header\n          .attr('title', toolTip || '')\n          .children()\n          .eq(0)\n          .html(title)\n\n        trigger(self.onHeaderCellRendered, {\n          node: $header[0],\n          column: columnDef\n        })\n      }\n    }\n\n    function getHeaderRow() {\n      return $headerRow_1[0]\n    }\n\n    function getColumnHeaderNode(columnId) {\n      var idx = getColumnIndex(columnId)\n      // FreezeColumn - Combine frozen and nonFrozen side header row objects\n      var $headersObject\n      if (!options.numberOfColumnsToFreeze) {\n        $headersObject = $headers_1\n      } else {\n        // Combine frozen and nonFrozen\n        $headersObject = $($.merge($.merge([], $headers_0), $headers_1))\n      }\n      var $header = $headersObject.children().eq(idx)\n      return $header && $header[0]\n    }\n\n    function getHeaderRowColumn(columnId) {\n      var idx = getColumnIndex(columnId)\n      // FreezeColumn - Combine frozen and nonFrozen side header row objects\n      var $headerRowObject\n      if (!options.numberOfColumnsToFreeze) {\n        $headerRowObject = $headerRow_1\n      } else {\n        // Combine frozen and nonFrozen\n        $headerRowObject = $($.merge($.merge([], $headerRow_0), $headerRow_1))\n      }\n      var $header = $headerRowObject.children().eq(idx)\n      return $header && $header[0]\n    }\n\n    function createColumnHeaders() {\n      function onMouseEnter() {\n        $(this).addClass('ui-state-hover')\n      }\n\n      function onMouseLeave() {\n        $(this).removeClass('ui-state-hover')\n      }\n\n      $headers_1.find('.slick-header-column').each(function() {\n        var columnDef = $(this).data('column')\n        if (columnDef) {\n          trigger(self.onBeforeHeaderCellDestroy, {\n            node: this,\n            column: columnDef\n          })\n        }\n      })\n      $headers_1.empty()\n      var headersWidthObj = getHeadersWidth()\n      $headers_1.width(headersWidthObj.nonFrozen)\n\n      // FreezeColumns - handle header empty\n      var numberOfColumnsToFreeze = options.numberOfColumnsToFreeze\n      if (numberOfColumnsToFreeze > 0) {\n        $headers_0.empty()\n        $headers_0.width(headersWidthObj.frozen)\n      }\n\n      // FreezeColumns - handle header row empty\n      var $headerRowObject\n      $headerRowObject = $headerRow_1\n      if (numberOfColumnsToFreeze > 0) {\n        // Combine frozen and nonFrozen\n        $headerRowObject = $($.merge($.merge([], $headerRow_0), $headerRow_1))\n      }\n      $headerRowObject.find('.slick-headerrow-column').each(function() {\n        var columnDef = $(this).data('column')\n        if (columnDef) {\n          trigger(self.onBeforeHeaderRowCellDestroy, {\n            node: this,\n            column: columnDef\n          })\n        }\n      })\n      $headerRowObject.empty()\n\n      for (var i = 0; i < columns.length; i++) {\n        var m = columns[i]\n\n        var header = $(\"<div class='ui-state-default slick-header-column' />\")\n          .html(\"<span class='slick-column-name'>\" + m.name + '</span>')\n          .width(m.width - headerColumnWidthDiff)\n          .attr('id', '' + uid + m.id)\n          .attr('title', m.toolTip || '')\n          .data('column', m)\n          .addClass(m.headerCssClass || '')\n          .appendTo(i < numberOfColumnsToFreeze ? $headers_0 : $headers_1)\n\n        if (options.enableColumnReorder || m.sortable) {\n          header.on('mouseenter', onMouseEnter).on('mouseleave', onMouseLeave)\n        }\n\n        if (m.sortable) {\n          header.addClass('slick-header-sortable')\n          header.append(\"<span class='slick-sort-indicator' />\")\n        }\n\n        trigger(self.onHeaderCellRendered, {\n          node: header[0],\n          column: m\n        })\n\n        if (options.showHeaderRow) {\n          var headerRowCell = $(\n            \"<div class='ui-state-default slick-headerrow-column b\" + i + ' f' + i + \"'></div>\"\n          )\n            .data('column', m)\n            .appendTo(i < numberOfColumnsToFreeze ? $headerRow_0 : $headerRow_1)\n\n          trigger(self.onHeaderRowCellRendered, {\n            node: headerRowCell[0],\n            column: m\n          })\n        }\n      }\n\n      setSortColumns(sortColumns)\n      setupColumnResize()\n      if (options.enableColumnReorder) {\n        setupColumnReorder()\n      }\n    }\n\n    function setupColumnSort() {\n      $headers_1.add(options.numberOfColumnsToFreeze ? $headers_0 : null).click(e => {\n        // temporary workaround for a bug in jQuery 1.7.1 (http://bugs.jquery.com/ticket/11328)\n        e.metaKey = e.metaKey || e.ctrlKey\n\n        if ($(e.target).hasClass('slick-resizable-handle')) {\n          return\n        }\n\n        var $col = $(e.target).closest('.slick-header-column')\n        if (!$col.length) {\n          return\n        }\n\n        var column = $col.data('column')\n        if (column.sortable) {\n          if (!getEditorLock().commitCurrentEdit()) {\n            return\n          }\n\n          var sortOpts = null\n          var i = 0\n          for (; i < sortColumns.length; i++) {\n            if (sortColumns[i].columnId == column.id) {\n              sortOpts = sortColumns[i]\n              sortOpts.sortAsc = !sortOpts.sortAsc\n              break\n            }\n          }\n\n          if (e.metaKey && options.multiColumnSort) {\n            if (sortOpts) {\n              sortColumns.splice(i, 1)\n            }\n          } else {\n            if ((!e.shiftKey && !e.metaKey) || !options.multiColumnSort) {\n              sortColumns = []\n            }\n\n            if (!sortOpts) {\n              sortOpts = {columnId: column.id, sortAsc: column.defaultSortAsc}\n              sortColumns.push(sortOpts)\n            } else if (sortColumns.length == 0) {\n              sortColumns.push(sortOpts)\n            }\n          }\n\n          setSortColumns(sortColumns)\n\n          if (!options.multiColumnSort) {\n            trigger(\n              self.onSort,\n              {\n                multiColumnSort: false,\n                sortCol: column,\n                sortAsc: sortOpts.sortAsc\n              },\n              e\n            )\n          } else {\n            trigger(\n              self.onSort,\n              {\n                multiColumnSort: true,\n                sortCols: $.map(sortColumns, col => ({\n                  sortCol: columns[getColumnIndex(col.columnId)],\n                  sortAsc: col.sortAsc\n                }))\n              },\n              e\n            )\n          }\n        }\n      })\n    }\n\n    function setupColumnReorder() {\n      const sortableHeaderGroups = [$headers_1]\n      if (options.numberOfColumnsToFreeze > 0) sortableHeaderGroups.push($headers_0)\n      sortableHeaderGroups.forEach($headers => {\n        $headers.filter(':ui-sortable').sortable('destroy')\n        $headers.sortable({\n          containment: 'parent',\n          distance: 3,\n          axis: 'x',\n          cursor: 'default',\n          tolerance: 'intersection',\n          helper: 'clone',\n          placeholder: 'slick-sortable-placeholder ui-state-default slick-header-column',\n          forcePlaceholderSize: true,\n          start: function(e, ui) {\n            ui.placeholder.width(ui.helper.outerWidth() - headerColumnWidthDiff)\n            $(ui.helper).addClass('slick-header-column-active')\n          },\n          beforeStop: function(e, ui) {\n            $(ui.helper).removeClass('slick-header-column-active')\n          },\n          stop: function(e) {\n            if (!getEditorLock().commitCurrentEdit()) {\n              $(this).sortable('cancel')\n              return\n            }\n            var reorderedIds = $headers.sortable('toArray')\n            var reorderedColumns = []\n\n            // handle the reordering\n            for (var i = 0; i < reorderedIds.length; i++) {\n              var reorderedIndex = reorderedIds[i].replace(uid, '')\n              var columnIndex = getColumnIndex(reorderedIndex)\n              var thingToPush = columns[columnIndex]\n              reorderedColumns.push(thingToPush)\n            }\n\n            // Preserve the other (frozen/nonfrozen) set of columns\n            reorderedColumns =\n              $headers === $headers_1\n                ? [...columns.slice(0, options.numberOfColumnsToFreeze), ...reorderedColumns]\n                : [...reorderedColumns, ...columns.slice(options.numberOfColumnsToFreeze)]\n\n            setColumns(reorderedColumns)\n\n            trigger(self.onColumnsReordered, {})\n            e.stopPropagation()\n            setupColumnResize()\n          }\n        })\n      })\n    }\n\n    function setupColumnResize() {\n      var $col, j, c, pageX, columnElements, minPageX, maxPageX, firstResizable, lastResizable\n      var isFrozenColumn\n      var headerElements = []\n      if (options.numberOfColumnsToFreeze > 0) {\n        headerElements.push($headers_0.children())\n      }\n      headerElements.push($headers_1.children())\n\n      for (var h = 0; h < headerElements.length; h++) {\n        columnElements = headerElements[h]\n        isFrozenColumn = isPartOfAFrozenColumn(columnElements)\n\n        columnElements.find('.slick-resizable-handle').remove()\n        columnElements.each((i, e) => {\n          var columnIndex = getIndexOffset(isFrozenColumn, i)\n          if (columns[columnIndex].resizable) {\n            if (firstResizable === undefined) {\n              firstResizable = i\n            }\n            lastResizable = i\n          }\n        })\n        if (firstResizable === undefined) {\n          return\n        }\n        columnElements.each((i, e) => {\n          if (i < firstResizable || (options.forceFitColumns && i >= lastResizable)) {\n            return\n          }\n          $col = $(e)\n          $(\"<div class='slick-resizable-handle' />\")\n            .appendTo(e)\n            .bind('dragstart', function(e, dd) {\n              isFrozenColumn = isPartOfAFrozenColumn(this)\n              columnElements = getColumnElements(this)\n              if (!getEditorLock().commitCurrentEdit()) {\n                return false\n              }\n              pageX = e.pageX\n              $(this)\n                .parent()\n                .addClass('slick-header-column-active')\n              var shrinkLeewayOnFront = null,\n                stretchLeewayOnFront = null\n              // lock each column's width option to current width\n              columnElements.each((i, e) => {\n                var columnIndex = getIndexOffset(isFrozenColumn, i)\n                columns[columnIndex].previousWidth = $(e).outerWidth()\n              })\n              if (options.forceFitColumns) {\n                shrinkLeewayOnFront = 0\n                stretchLeewayOnFront = 0\n                // colums on front affect maxPageX/minPageX\n                var nextColumnIndex\n                for (j = i + 1; j < columnElements.length; j++) {\n                  nextColumnIndex = getIndexOffset(isFrozenColumn, j)\n                  c = columns[nextColumnIndex]\n                  if (c.resizable) {\n                    if (stretchLeewayOnFront !== null) {\n                      if (c.maxWidth) {\n                        stretchLeewayOnFront += c.maxWidth - c.previousWidth\n                      } else {\n                        stretchLeewayOnFront = null\n                      }\n                    }\n                    shrinkLeewayOnFront +=\n                      c.previousWidth - Math.max(c.minWidth || 0, absoluteColumnMinWidth)\n                  }\n                }\n              }\n              var shrinkLeewayOnRear = 0,\n                stretchLeewayOnRear = 0\n              for (j = 0; j <= i; j++) {\n                // columns on rear only affect minPageX\n                var columnIndex = getIndexOffset(isFrozenColumn, j)\n                c = columns[columnIndex]\n                if (c.resizable) {\n                  if (stretchLeewayOnRear !== null) {\n                    if (c.maxWidth) {\n                      stretchLeewayOnRear += c.maxWidth - c.previousWidth\n                    } else {\n                      stretchLeewayOnRear = null\n                    }\n                  }\n                  shrinkLeewayOnRear +=\n                    c.previousWidth - Math.max(c.minWidth || 0, absoluteColumnMinWidth)\n                }\n              }\n              if (shrinkLeewayOnFront === null) {\n                shrinkLeewayOnFront = 100000\n              }\n              if (shrinkLeewayOnRear === null) {\n                shrinkLeewayOnRear = 100000\n              }\n              if (stretchLeewayOnFront === null) {\n                stretchLeewayOnFront = 100000\n              }\n              if (stretchLeewayOnRear === null) {\n                stretchLeewayOnRear = 100000\n              }\n              if (rtl) {\n                maxPageX = pageX - Math.min(shrinkLeewayOnFront, stretchLeewayOnRear)\n                minPageX = pageX + Math.min(shrinkLeewayOnRear, stretchLeewayOnFront)\n              } else {\n                maxPageX = pageX + Math.min(shrinkLeewayOnFront, stretchLeewayOnRear)\n                minPageX = pageX - Math.min(shrinkLeewayOnRear, stretchLeewayOnFront)\n              }\n            })\n            .bind('drag', function(e, dd) {\n              isFrozenColumn = isPartOfAFrozenColumn(this)\n              columnElements = getColumnElements(this)\n              var actualMinWidth, d, x\n              d = rtl\n                ? Math.max(maxPageX, Math.min(minPageX, e.pageX)) - pageX\n                : Math.min(maxPageX, Math.max(minPageX, e.pageX)) - pageX\n              var isShrink = (d < 0 && !rtl) || (d > 0 && rtl)\n              if (isShrink) {\n                // shrink column\n                x = d * (rtl ? -1 : 1)\n                for (j = i; j >= 0; j--) {\n                  c = columns[getIndexOffset(isFrozenColumn, j)]\n                  if (c.resizable) {\n                    actualMinWidth = Math.max(c.minWidth || 0, absoluteColumnMinWidth)\n                    if (x && c.previousWidth + x < actualMinWidth) {\n                      x += c.previousWidth - actualMinWidth\n                      c.width = actualMinWidth\n                    } else {\n                      c.width = c.previousWidth + x\n                      x = 0\n                    }\n                  }\n                }\n\n                if (options.forceFitColumns) {\n                  x = -d * (rtl ? -1 : 1)\n                  for (j = i + 1; j < columnElements.length; j++) {\n                    c = columns[getIndexOffset(isFrozenColumn, j)]\n                    if (c.resizable) {\n                      if (x && c.maxWidth && c.maxWidth - c.previousWidth < x) {\n                        x -= c.maxWidth - c.previousWidth\n                        c.width = c.maxWidth\n                      } else {\n                        c.width = c.previousWidth + x\n                        x = 0\n                      }\n                    }\n                  }\n                }\n              } else {\n                // stretch column\n                x = d * (rtl ? -1 : 1)\n                for (j = i; j >= 0; j--) {\n                  c = columns[getIndexOffset(isFrozenColumn, j)]\n                  if (c.resizable) {\n                    if (x && c.maxWidth && c.maxWidth - c.previousWidth < x) {\n                      x -= c.maxWidth - c.previousWidth\n                      c.width = c.maxWidth\n                    } else {\n                      c.width = c.previousWidth + x\n                      x = 0\n                    }\n                  }\n                }\n\n                if (options.forceFitColumns) {\n                  x = -d * (rtl ? -1 : 1)\n                  for (j = i + 1; j < columnElements.length; j++) {\n                    c = columns[getIndexOffset(isFrozenColumn, j)]\n                    if (c.resizable) {\n                      actualMinWidth = Math.max(c.minWidth || 0, absoluteColumnMinWidth)\n                      if (x && c.previousWidth + x < actualMinWidth) {\n                        x += c.previousWidth - actualMinWidth\n                        c.width = actualMinWidth\n                      } else {\n                        c.width = c.previousWidth + x\n                        x = 0\n                      }\n                    }\n                  }\n                }\n              }\n              applyColumnHeaderWidths()\n              if (options.numberOfColumnsToFreeze > 0) {\n                updateCanvasWidth(true)\n              }\n              if (options.syncColumnCellResize) {\n                applyColumnWidths()\n              }\n            })\n            .bind('dragend', function(e, dd) {\n              isFrozenColumn = isPartOfAFrozenColumn(this)\n              columnElements = getColumnElements(this)\n              var newWidth\n              $(this)\n                .parent()\n                .removeClass('slick-header-column-active')\n              for (var j = 0; j < columnElements.length; j++) {\n                c = columns[getIndexOffset(isFrozenColumn, j)]\n                newWidth = $(columnElements[j]).outerWidth()\n                if (c.previousWidth !== newWidth) {\n                  if (c.rerenderOnResize) {\n                    invalidateAllRows()\n                  }\n                }\n              }\n              updateCanvasWidth(true)\n              render()\n              trigger(self.onColumnsResized, {})\n            })\n        })\n      }\n    }\n\n    function getIndexOffset(isFrozen, index) {\n      var newIndex = isFrozen ? index : index + options.numberOfColumnsToFreeze\n      return newIndex\n    }\n\n    function isPartOfAFrozenColumn(target) {\n      var results = false\n      var targetIsFrozen = $(target).hasClass('headers_0')\n      if (targetIsFrozen) {\n        results = true\n      } else {\n        results = $(target).parents('.headers_0').length > 0\n      }\n      return results\n    }\n\n    function getColumnElements(target) {\n      var results = $(target)\n        .parents('.slick-header-columns')\n        .children()\n      return results\n    }\n\n    function getVBoxDelta($el) {\n      var p = ['borderTopWidth', 'borderBottomWidth', 'paddingTop', 'paddingBottom']\n      var delta = 0\n      $.each(p, (n, val) => {\n        delta += parseFloat($el.css(val)) || 0\n      })\n      return delta\n    }\n\n    function measureCellPaddingAndBorder() {\n      var el\n      var h = ['borderLeftWidth', 'borderRightWidth', 'paddingLeft', 'paddingRight']\n      var v = ['borderTopWidth', 'borderBottomWidth', 'paddingTop', 'paddingBottom']\n\n      el = $(\n        \"<div class='ui-state-default slick-header-column' style='visibility:hidden'>-</div>\"\n      ).appendTo($headers_1)\n      headerColumnWidthDiff = headerColumnHeightDiff = 0\n      if (\n        el.css('box-sizing') != 'border-box' &&\n        el.css('-moz-box-sizing') != 'border-box' &&\n        el.css('-webkit-box-sizing') != 'border-box'\n      ) {\n        $.each(h, (n, val) => {\n          headerColumnWidthDiff += parseFloat(el.css(val)) || 0\n        })\n        $.each(v, (n, val) => {\n          headerColumnHeightDiff += parseFloat(el.css(val)) || 0\n        })\n      }\n      el.remove()\n\n      var r = $(\"<div class='slick-row' />\").appendTo($canvas_1)\n      el = $(\"<div class='slick-cell' id='' style='visibility:hidden'>-</div>\").appendTo(r)\n      cellWidthDiff = cellHeightDiff = 0\n      if (\n        el.css('box-sizing') != 'border-box' &&\n        el.css('-moz-box-sizing') != 'border-box' &&\n        el.css('-webkit-box-sizing') != 'border-box'\n      ) {\n        $.each(h, (n, val) => {\n          cellWidthDiff += parseFloat(el.css(val)) || 0\n        })\n        $.each(v, (n, val) => {\n          cellHeightDiff += parseFloat(el.css(val)) || 0\n        })\n      }\n      r.remove()\n\n      absoluteColumnMinWidth = Math.max(headerColumnWidthDiff, cellWidthDiff)\n    }\n\n    function createCssRules() {\n      $style = $(\"<style type='text/css' rel='stylesheet' />\").appendTo($('head'))\n      var rowHeight = options.rowHeight - cellHeightDiff\n      var rules = [\n        '.' + uid + ' .slick-header-column { ' + rear + ': 1000px; }',\n        '.' + uid + ' .slick-top-panel { height:' + options.topPanelHeight + 'px; }',\n        '.' + uid + ' .slick-headerrow-columns { height:' + options.headerRowHeight + 'px; }',\n        '.' + uid + ' .slick-cell { height:' + rowHeight + 'px; }',\n        '.' + uid + ' .slick-row { height:' + options.rowHeight + 'px; }'\n      ]\n\n      for (var i = 0; i < columns.length; i++) {\n        rules.push('.' + uid + ' .b' + i + ' { }')\n        rules.push('.' + uid + ' .f' + i + ' { }')\n      }\n\n      if ($style[0].styleSheet) {\n        // IE\n        $style[0].styleSheet.cssText = rules.join(' ')\n      } else {\n        $style[0].appendChild(document.createTextNode(rules.join(' ')))\n      }\n    }\n\n    function getColumnCssRules(idx) {\n      if (!stylesheet) {\n        var sheets = document.styleSheets\n        for (var i = 0; i < sheets.length; i++) {\n          if ((sheets[i].ownerNode || sheets[i].owningElement) == $style[0]) {\n            stylesheet = sheets[i]\n            break\n          }\n        }\n\n        if (!stylesheet) {\n          throw new Error('Cannot find stylesheet.')\n        }\n\n        // find and cache column CSS rules\n        columnCssRulesB = []\n        columnCssRulesF = []\n        var cssRules = stylesheet.cssRules || stylesheet.rules\n        var matches, columnIdx\n        for (var i = 0; i < cssRules.length; i++) {\n          var selector = cssRules[i].selectorText\n          if ((matches = /\\.b(\\d+)/.exec(selector))) {\n            columnIdx = parseInt(matches[1], 10)\n            columnCssRulesB[columnIdx] = cssRules[i]\n          } else if ((matches = /\\.f(\\d+)/.exec(selector))) {\n            columnIdx = parseInt(matches[1], 10)\n            columnCssRulesF[columnIdx] = cssRules[i]\n          }\n        }\n      }\n\n      return {\n        [rear]: columnCssRulesB[idx],\n        [front]: columnCssRulesF[idx]\n      }\n    }\n\n    function removeCssRules() {\n      $style.remove()\n      stylesheet = null\n    }\n\n    function destroy() {\n      getEditorLock().cancelCurrentEdit()\n\n      trigger(self.onBeforeDestroy, {})\n\n      var i = plugins.length\n      while (i--) {\n        unregisterPlugin(plugins[i])\n      }\n\n      if (options.enableColumnReorder) {\n        if (options.numberOfColumnsToFreeze > 0) {\n          $headers_0.filter(':ui-sortable').sortable('destroy')\n        }\n        $headers_1.filter(':ui-sortable').sortable('destroy')\n      }\n\n      unbindAncestorScrollEvents()\n      $outerContainer.unbind('.slickgrid')\n      removeCssRules()\n\n      $canvas_1.unbind('draginit dragstart dragend drag')\n      $outerContainer.empty().removeClass(uid)\n    }\n\n    // ////////////////////////////////////////////////////////////////////////////////////////////\n    // General\n\n    function trigger(evt, args, e) {\n      e = e || new Slick.EventData()\n      args = args || {}\n      args.grid = self\n      return evt.notify(args, e, self)\n    }\n\n    function getUID() {\n      return uid\n    }\n\n    function getEditorLock() {\n      return options.editorLock\n    }\n\n    function getEditController() {\n      return editController\n    }\n\n    function getColumnIndex(id) {\n      return columnsById[id]\n    }\n\n    function autosizeColumns() {\n      var i,\n        c,\n        widths = [],\n        shrinkLeeway = 0,\n        total = 0,\n        prevTotal,\n        availWidth = viewportHasVScroll_1 ? viewportW_1 - scrollbarDimensions.width : viewportW_1\n\n      for (i = 0; i < columns.length; i++) {\n        c = columns[i]\n        widths.push(c.width)\n        total += c.width\n        if (c.resizable) {\n          shrinkLeeway += c.width - Math.max(c.minWidth, absoluteColumnMinWidth)\n        }\n      }\n\n      // shrink\n      prevTotal = total\n      while (total > availWidth && shrinkLeeway) {\n        var shrinkProportion = (total - availWidth) / shrinkLeeway\n        for (i = 0; i < columns.length && total > availWidth; i++) {\n          c = columns[i]\n          var width = widths[i]\n          if (!c.resizable || width <= c.minWidth || width <= absoluteColumnMinWidth) {\n            continue\n          }\n          var absMinWidth = Math.max(c.minWidth, absoluteColumnMinWidth)\n          var shrinkSize = Math.floor(shrinkProportion * (width - absMinWidth)) || 1\n          shrinkSize = Math.min(shrinkSize, width - absMinWidth)\n          total -= shrinkSize\n          shrinkLeeway -= shrinkSize\n          widths[i] -= shrinkSize\n        }\n        if (prevTotal == total) {\n          // avoid infinite loop\n          break\n        }\n        prevTotal = total\n      }\n\n      // grow\n      prevTotal = total\n      while (total < availWidth) {\n        var growProportion = availWidth / total\n        for (i = 0; i < columns.length && total < availWidth; i++) {\n          c = columns[i]\n          if (!c.resizable || c.maxWidth <= c.width) {\n            continue\n          }\n          var growSize =\n            Math.min(\n              Math.floor(growProportion * c.width) - c.width,\n              c.maxWidth - c.width || 1000000\n            ) || 1\n          total += growSize\n          widths[i] += growSize\n        }\n        if (prevTotal == total) {\n          // avoid infinite loop\n          break\n        }\n        prevTotal = total\n      }\n\n      var reRender = false\n      for (i = 0; i < columns.length; i++) {\n        if (columns[i].rerenderOnResize && columns[i].width != widths[i]) {\n          reRender = true\n        }\n        columns[i].width = widths[i]\n      }\n\n      applyColumnHeaderWidths()\n      updateCanvasWidth(true)\n      if (reRender) {\n        invalidateAllRows()\n        render()\n      }\n    }\n\n    function applyWidthToHeaders(header) {\n      var isFrozenColumn = isPartOfAFrozenColumn(header)\n      var headers = header.children()\n      for (var i = 0, h, ii = headers.length; i < ii; i++) {\n        h = $(headers[i])\n        var columnIndex = getIndexOffset(isFrozenColumn, i)\n        if (h.width() !== columns[columnIndex].width - headerColumnWidthDiff) {\n          h.width(columns[columnIndex].width - headerColumnWidthDiff)\n        }\n      }\n    }\n\n    function applyColumnHeaderWidths() {\n      if (!initialized) {\n        return\n      }\n      if (options.numberOfColumnsToFreeze > 0) {\n        applyWidthToHeaders($headers_0) // Frozen Columns\n      }\n      applyWidthToHeaders($headers_1) // NonFrozen Columns\n      updateColumnCaches()\n    }\n\n    function applyColumnWidths() {\n      var nonFrozenWidth = 0,\n        w,\n        rule\n      var frozenWidth = 0\n      var numberOfColumnsToFreeze = options.numberOfColumnsToFreeze\n      var ruleIndex = 0\n      var columnCount = columns.length\n\n      for (var i = 0; i < columnCount; i++) {\n        w = columns[i].width\n        rule = getColumnCssRules(i)\n        if (i < numberOfColumnsToFreeze) {\n          // FrozenColumns\n          rule[rear].style[rear] = frozenWidth + 'px'\n          rule[front].style[front] = canvasWidth_0 - frozenWidth - w + 'px'\n          frozenWidth += columns[i].width\n        } else {\n          // NonFrozenColumns\n          rule[rear].style[rear] = nonFrozenWidth + 'px'\n          rule[front].style[front] = canvasWidth_1 - nonFrozenWidth - w + 'px'\n          nonFrozenWidth += columns[i].width\n        }\n      }\n    }\n\n    /*\n     * updates the numberOfColumnsToFreeze.\n     *\n     * doesn't change the number of frozen columns until you do something to\n     * re-build the grid (like setColumns)\n     */\n    function setNumberOfColumnsToFreeze(n) {\n      options.numberOfColumnsToFreeze = n\n    }\n\n    function setSortColumn(columnId, ascending) {\n      setSortColumns([{columnId: columnId, sortAsc: ascending}])\n    }\n\n    function setSortColumns(cols) {\n      sortColumns = cols\n      // Combine frozen and nonFrozen\n      var headerColumnEls = $headers_1\n        .children()\n        .add(options.numberOfColumnsToFreeze ? $headers_0.children() : null)\n      headerColumnEls\n        .removeClass('slick-header-column-sorted')\n        .find('.slick-sort-indicator')\n        .removeClass('slick-sort-indicator-asc slick-sort-indicator-desc')\n\n      $.each(sortColumns, (i, col) => {\n        if (col.sortAsc == null) {\n          col.sortAsc = true\n        }\n        var columnIndex = getColumnIndex(col.columnId)\n        if (columnIndex != null) {\n          headerColumnEls\n            .eq(columnIndex)\n            .addClass('slick-header-column-sorted')\n            .find('.slick-sort-indicator')\n            .addClass(col.sortAsc ? 'slick-sort-indicator-asc' : 'slick-sort-indicator-desc')\n        }\n      })\n    }\n\n    function getSortColumns() {\n      return sortColumns\n    }\n\n    function handleSelectedRangesChanged(e, ranges) {\n      selectedRows = []\n      var hash = {}\n      for (var i = 0; i < ranges.length; i++) {\n        for (var j = ranges[i].fromRow; j <= ranges[i].toRow; j++) {\n          if (!hash[j]) {\n            // prevent duplicates\n            selectedRows.push(j)\n            hash[j] = {}\n          }\n          for (var k = ranges[i].fromCell; k <= ranges[i].toCell; k++) {\n            if (canCellBeSelected(j, k)) {\n              hash[j][columns[k].id] = options.selectedCellCssClass\n            }\n          }\n        }\n      }\n\n      setCellCssStyles(options.selectedCellCssClass, hash)\n\n      trigger(self.onSelectedRowsChanged, {rows: getSelectedRows()}, e)\n    }\n\n    function getColumns() {\n      return columns\n    }\n\n    function updateColumnCaches() {\n      // Pre-calculate cell boundaries.\n      columnPosRear = []\n      columnPosFront = []\n      var frozenWidth = 0\n      var nonFrozenWidth = 0\n      var numberOfColumnsToFreeze = options.numberOfColumnsToFreeze\n      for (var i = 0, ii = columns.length; i < ii; i++) {\n        if (i < numberOfColumnsToFreeze) {\n          // Frozen Columns\n          columnPosRear[i] = frozenWidth\n          columnPosFront[i] = frozenWidth + columns[i].width\n          frozenWidth += columns[i].width\n        } else {\n          // NonFrozen Columns\n          columnPosRear[i] = nonFrozenWidth\n          columnPosFront[i] = nonFrozenWidth + columns[i].width\n          nonFrozenWidth += columns[i].width\n        }\n      }\n    }\n\n    function setColumns(columnDefinitions) {\n      columns = columnDefinitions\n\n      columnsById = {}\n      for (var i = 0; i < columns.length; i++) {\n        var m = (columns[i] = $.extend({}, columnDefaults, columns[i]))\n        columnsById[m.id] = i\n        if (m.minWidth && m.width < m.minWidth) {\n          m.width = m.minWidth\n        }\n        if (m.maxWidth && m.width > m.maxWidth) {\n          m.width = m.maxWidth\n        }\n      }\n\n      updateColumnCaches()\n\n      if (initialized) {\n        invalidateAllRows()\n        createColumnHeaders()\n        removeCssRules()\n        createCssRules()\n        resizeCanvas()\n        applyColumnWidths()\n        handleScroll()\n      }\n    }\n\n    function getOptions() {\n      return options\n    }\n\n    function setOptions(args) {\n      if (!getEditorLock().commitCurrentEdit()) {\n        return\n      }\n\n      makeActiveCellNormal()\n\n      if (options.enableAddRow !== args.enableAddRow) {\n        invalidateRow(getDataLength())\n      }\n\n      options = $.extend(options, args)\n      validateAndEnforceOptions()\n\n      $viewport_1.css('overflow-y', options.autoHeight ? 'hidden' : 'auto')\n      render()\n    }\n\n    function validateAndEnforceOptions() {\n      if (options.autoHeight) {\n        options.leaveSpaceForNewRows = false\n      }\n    }\n\n    function setData(newData, scrollToTop) {\n      data = newData\n      invalidateAllRows()\n      updateRowCount()\n      if (scrollToTop) {\n        scrollTo(0)\n      }\n    }\n\n    function getData() {\n      return data\n    }\n\n    function getDataLength() {\n      if (data.getLength) {\n        return data.getLength()\n      } else {\n        return data.length\n      }\n    }\n\n    function getDataLengthIncludingAddNew() {\n      return getDataLength() + (options.enableAddRow ? 1 : 0)\n    }\n\n    function getDataItem(i) {\n      if (data.getItem) {\n        return data.getItem(i)\n      } else {\n        return data[i]\n      }\n    }\n\n    function getTopPanel() {\n      return $topPanel_1[0]\n    }\n\n    function setTopPanelVisibility(visible) {\n      if (options.showTopPanel != visible) {\n        options.showTopPanel = visible\n        if (visible) {\n          $topPanelScroller_1.slideDown('fast', resizeCanvas)\n        } else {\n          $topPanelScroller_1.slideUp('fast', resizeCanvas)\n        }\n      }\n    }\n\n    function setHeaderRowVisibility(visible) {\n      if (options.showHeaderRow != visible) {\n        options.showHeaderRow = visible\n        if (visible) {\n          $headerRowScroller_1.slideDown('fast', resizeCanvas)\n        } else {\n          $headerRowScroller_1.slideUp('fast', resizeCanvas)\n        }\n      }\n    }\n\n    function getContainerNode() {\n      return $outerContainer.get(0)\n    }\n\n    // ////////////////////////////////////////////////////////////////////////////////////////////\n    // Rendering / Scrolling\n\n    function getRowTop(row) {\n      return options.rowHeight * row - offset\n    }\n\n    function getRowFromPosition(y) {\n      return Math.floor((y + offset) / options.rowHeight)\n    }\n\n    function scrollTo(y) {\n      y = Math.max(y, 0)\n      y = Math.min(y, th - viewportH_1 + (viewportHasHScroll_1 ? scrollbarDimensions.height : 0))\n\n      var oldOffset = offset\n\n      page = Math.min(n - 1, Math.floor(y / ph))\n      offset = Math.round(page * cj)\n      var newScrollTop = y - offset\n\n      if (offset != oldOffset) {\n        var range = getVisibleRange(newScrollTop)\n        cleanupRows(range)\n        updateRowPositions()\n      }\n\n      if (prevScrollTop != newScrollTop) {\n        vScrollDir = prevScrollTop + oldOffset < newScrollTop + offset ? 1 : -1\n        $viewport_1[0].scrollTop = lastRenderedScrollTop = scrollTop = prevScrollTop = newScrollTop\n\n        if (options.numberOfColumnsToFreeze > 0) {\n          $viewport_0[0].scrollTop = scrollTop\n        }\n\n        trigger(self.onViewportChanged, {})\n      }\n    }\n\n    function defaultFormatter(row, cell, value, columnDef, dataContext) {\n      if (value == null) {\n        return ''\n      } else {\n        return (value + '')\n          .replace(/&/g, '&amp;')\n          .replace(/</g, '&lt;')\n          .replace(/>/g, '&gt;')\n      }\n    }\n\n    function getFormatter(row, column) {\n      var rowMetadata = data.getItemMetadata && data.getItemMetadata(row)\n\n      // look up by id, then index\n      var columnOverrides =\n        rowMetadata &&\n        rowMetadata.columns &&\n        (rowMetadata.columns[column.id] || rowMetadata.columns[getColumnIndex(column.id)])\n\n      return (\n        (columnOverrides && columnOverrides.formatter) ||\n        (rowMetadata && rowMetadata.formatter) ||\n        column.formatter ||\n        (options.formatterFactory && options.formatterFactory.getFormatter(column)) ||\n        options.defaultFormatter\n      )\n    }\n\n    function getEditor(row, cell) {\n      var column = columns[cell]\n      var rowMetadata = data.getItemMetadata && data.getItemMetadata(row)\n      var columnMetadata = rowMetadata && rowMetadata.columns\n\n      if (\n        columnMetadata &&\n        columnMetadata[column.id] &&\n        columnMetadata[column.id].editor !== undefined\n      ) {\n        return columnMetadata[column.id].editor\n      }\n      if (columnMetadata && columnMetadata[cell] && columnMetadata[cell].editor !== undefined) {\n        return columnMetadata[cell].editor\n      }\n\n      return column.editor || (options.editorFactory && options.editorFactory.getEditor(column))\n    }\n\n    function getDataItemValueForColumn(item, columnDef) {\n      if (options.dataItemColumnValueExtractor) {\n        return options.dataItemColumnValueExtractor(item, columnDef)\n      }\n      return item[columnDef.field]\n    }\n\n    function appendRowHtml(stringArray, row, range, dataLength) {\n      var numberOfColumnsToFreeze = options.numberOfColumnsToFreeze // CLICK CUSTOM CODE\n      var d = getDataItem(row)\n      var dataLoading = row < dataLength && !d\n      var rowCss =\n        'slick-row' +\n        (dataLoading ? ' loading' : '') +\n        (row === activeRow ? ' active' : '') +\n        (row % 2 == 1 ? ' odd' : ' even')\n\n      var metadata = data.getItemMetadata && data.getItemMetadata(row)\n\n      if (metadata && metadata.cssClasses) {\n        rowCss += ' ' + metadata.cssClasses\n      }\n\n      var rowString =\n        \"<div class='ui-widget-content \" + rowCss + \"' style='top:\" + getRowTop(row) + \"px;' >\"\n      // only use role in normal rows\n      stringArray.nonFrozen.push(rowString)\n      if (numberOfColumnsToFreeze > 0) {\n        stringArray.frozen.push(rowString)\n      }\n\n      var colspan, m\n      for (var i = 0, ii = columns.length; i < ii; i++) {\n        m = columns[i]\n        colspan = 1\n        if (metadata && metadata.columns) {\n          var columnData = metadata.columns[m.id] || metadata.columns[i]\n          colspan = (columnData && columnData.colspan) || 1\n          if (colspan === '*') {\n            colspan = ii - i\n          }\n        }\n\n        // Always render frozen columns\n        if (numberOfColumnsToFreeze && i < numberOfColumnsToFreeze) {\n          appendCellHtml(stringArray, row, i, colspan, d)\n        } else if (\n          columnPosFront[Math.min(ii - 1, i + colspan - 1)] >\n          (rtl ? canvasWidth_1 - range.rightPx : range.leftPx)\n        ) {\n          // Do not render cells before those in range.\n          if (columnPosRear[i] > (rtl ? canvasWidth_1 - range.leftPx : range.rightPx)) {\n            // All columns after are outside the range.\n            break\n          }\n          appendCellHtml(stringArray, row, i, colspan, d)\n        }\n        if (colspan > 1) {\n          i += colspan - 1\n        }\n      }\n\n      stringArray.nonFrozen.push('</div>')\n      if (numberOfColumnsToFreeze > 0) {\n        stringArray.frozen.push('</div>')\n      }\n    }\n\n    function appendCellHtml(stringArray, row, cell, colspan, item) {\n      var m = columns[cell]\n      // var d = getDataItem(row);\n      var cellCss =\n        'slick-cell b' +\n        cell +\n        ' f' +\n        Math.min(columns.length - 1, cell + colspan - 1) +\n        (m.cssClass ? ' ' + m.cssClass : '')\n      if (row === activeRow && cell === activeCell) {\n        cellCss += ' active'\n      }\n\n      // TODO:  merge them together in the setter\n      for (var key in cellCssClasses) {\n        if (cellCssClasses[key][row] && cellCssClasses[key][row][m.id]) {\n          cellCss += ' ' + cellCssClasses[key][row][m.id]\n        }\n      }\n\n      var cellString = \"<div class='\" + cellCss + \"'>\"\n\n      var numberOfColumnsToFreeze = options.numberOfColumnsToFreeze\n      // FrozenColumns - Add the cells html depending on the cell index - frozen or not\n      if (cell < numberOfColumnsToFreeze) {\n        stringArray.frozen.push(cellString)\n      } else {\n        stringArray.nonFrozen.push(cellString)\n      }\n\n      // if there is a corresponding row (if not, this is the Add New row or this data hasn't been loaded yet)\n      if (item) {\n        var value = getDataItemValueForColumn(item, m)\n        var contents = getFormatter(row, m)(row, cell, value, m, item)\n        if (cell < numberOfColumnsToFreeze) {\n          stringArray.frozen.push(contents)\n        } else {\n          stringArray.nonFrozen.push(getFormatter(row, m)(row, cell, value, m, item))\n        }\n      }\n\n      if (cell < numberOfColumnsToFreeze) {\n        stringArray.frozen.push('</div>')\n      } else {\n        stringArray.nonFrozen.push('</div>')\n      }\n\n      rowsCache[row].cellRenderQueue.push(cell)\n      rowsCache[row].cellColSpans[cell] = colspan\n    }\n\n    function cleanupRows(rangeToKeep) {\n      for (var i in rowsCache) {\n        if (\n          (i = parseInt(i, 10)) !== activeRow &&\n          (i < rangeToKeep.top || i > rangeToKeep.bottom)\n        ) {\n          removeRowFromCache(i)\n        }\n      }\n    }\n\n    function invalidate() {\n      updateRowCount()\n      invalidateAllRows()\n      render()\n    }\n\n    function invalidateAllRows() {\n      if (currentEditor) {\n        makeActiveCellNormal()\n      }\n      for (var row in rowsCache) {\n        removeRowFromCache(row)\n      }\n    }\n\n    function removeRowFromCache(row) {\n      var cacheEntry = rowsCache[row]\n      if (!cacheEntry) {\n        return\n      }\n      var childToRemove = cacheEntry.rowNode\n      // Frozen Columns - remove row from frozen and nonFrozen canvas_x\n      if (options.numberOfColumnsToFreeze > 0) {\n        if (childToRemove.nonFrozen) {\n          $canvas_1[0].removeChild(childToRemove.nonFrozen)\n        }\n        if (childToRemove.frozen) {\n          $canvas_0[0].removeChild(childToRemove.frozen)\n        }\n      } else {\n        $canvas_1[0].removeChild(childToRemove.nonFrozen)\n      }\n      delete rowsCache[row]\n      delete postProcessedRows[row]\n      renderedRows--\n      counter_rows_removed++\n    }\n\n    function invalidateRows(rows) {\n      var i, rl\n      if (!rows || !rows.length) {\n        return\n      }\n      vScrollDir = 0\n      for (i = 0, rl = rows.length; i < rl; i++) {\n        if (currentEditor && activeRow === rows[i]) {\n          makeActiveCellNormal()\n        }\n        if (rowsCache[rows[i]]) {\n          removeRowFromCache(rows[i])\n        }\n      }\n    }\n\n    function invalidateRow(row) {\n      invalidateRows([row])\n    }\n\n    function updateCell(row, cell) {\n      var cellNode = getCellNode(row, cell)\n      if (!cellNode) {\n        return\n      }\n\n      var m = columns[cell],\n        d = getDataItem(row)\n      if (currentEditor && activeRow === row && activeCell === cell) {\n        currentEditor.loadValue(d)\n      } else {\n        cellNode.innerHTML = d\n          ? getFormatter(row, m)(row, cell, getDataItemValueForColumn(d, m), m, d)\n          : ''\n        invalidatePostProcessingResults(row)\n      }\n    }\n\n    function updateRow(row) {\n      var cacheEntry = rowsCache[row]\n      if (!cacheEntry) {\n        return\n      }\n\n      ensureCellNodesInRowsCache(row)\n\n      var d = getDataItem(row)\n\n      for (var columnIdx in cacheEntry.cellNodesByColumnIdx) {\n        if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(columnIdx)) {\n          continue\n        }\n\n        columnIdx |= 0\n        var m = columns[columnIdx],\n          node = cacheEntry.cellNodesByColumnIdx[columnIdx]\n\n        if (row === activeRow && columnIdx === activeCell && currentEditor) {\n          currentEditor.loadValue(d)\n        } else if (d) {\n          node.innerHTML = getFormatter(row, m)(\n            row,\n            columnIdx,\n            getDataItemValueForColumn(d, m),\n            m,\n            d\n          )\n        } else {\n          node.innerHTML = ''\n        }\n      }\n\n      invalidatePostProcessingResults(row)\n    }\n\n    function getViewportHeight() {\n      return (\n        parseFloat($.css($outerContainer[0], 'height', true)) -\n        parseFloat($.css($outerContainer[0], 'paddingTop', true)) -\n        parseFloat($.css($outerContainer[0], 'paddingBottom', true)) -\n        parseFloat($.css($headerScroller_1[0], 'height')) -\n        getVBoxDelta($headerScroller_1) -\n        (options.showTopPanel ? options.topPanelHeight + getVBoxDelta($topPanelScroller_1) : 0) -\n        (options.showHeaderRow ? options.headerRowHeight + getVBoxDelta($headerRowScroller_1) : 0)\n      )\n    }\n\n    function resizeCanvas() {\n      if (!initialized) {\n        return\n      }\n      if (options.autoHeight) {\n        viewportH_1 = options.rowHeight * getDataLengthIncludingAddNew()\n      } else {\n        viewportH_1 = getViewportHeight()\n      }\n\n      numVisibleRows = Math.ceil(viewportH_1 / options.rowHeight)\n      viewportW_1 = parseFloat($.css($container_1[0], 'width', true))\n      if (!options.autoHeight) {\n        $viewport_1.height(viewportH_1)\n        // Frozen Columns - also set left viewport height\n        if (options.numberOfColumnsToFreeze) {\n          $viewport_0.height(viewportH_1)\n        }\n      }\n\n      if (options.forceFitColumns) {\n        autosizeColumns()\n      }\n\n      updateRowCount()\n      handleScroll()\n      // Since the width has changed, force the render() to reevaluate virtually rendered cells.\n      lastRenderedScrollLeft = -1\n      render()\n    }\n\n    function updateRowCount() {\n      var dataLength = getDataLength()\n      if (!initialized) {\n        return\n      }\n      numberOfRows =\n        getDataLengthIncludingAddNew() + (options.leaveSpaceForNewRows ? numVisibleRows - 1 : 0)\n\n      var oldViewportHasVScroll = viewportHasVScroll_1\n      // with autoHeight, we do not need to accommodate the vertical scroll bar\n      viewportHasVScroll_1 = !options.autoHeight && numberOfRows * options.rowHeight > viewportH_1\n\n      // remove the rows that are now outside of the data range\n      // this helps avoid redundant calls to .removeRow() when the size of the data decreased by thousands of rows\n      var l = getDataLengthIncludingAddNew() - 1\n      for (var i in rowsCache) {\n        if (i >= l) {\n          removeRowFromCache(i)\n        }\n      }\n\n      if (activeCellNode && activeRow > l) {\n        resetActiveCell()\n      }\n\n      var oldH = h\n      th = Math.max(options.rowHeight * numberOfRows, viewportH_1 - scrollbarDimensions.height)\n      if (th < maxSupportedCssHeight) {\n        // just one page\n        h = ph = th\n        n = 1\n        cj = 0\n      } else {\n        // break into pages\n        h = maxSupportedCssHeight\n        ph = h / 100\n        n = Math.floor(th / ph)\n        cj = (th - h) / (n - 1)\n      }\n\n      if (h !== oldH) {\n        $canvas_1.css('height', h)\n        scrollTop = $viewport_1[0].scrollTop\n        // Frozen Columns - Set left viewport height to h + scrollbar height\n        if (options.numberOfColumnsToFreeze > 0) {\n          $canvas_0.css('height', h + scrollbarDimensions.height)\n        }\n      }\n\n      var oldScrollTopInRange = scrollTop + offset <= th - viewportH_1\n\n      if (th == 0 || scrollTop == 0) {\n        page = offset = 0\n      } else if (oldScrollTopInRange) {\n        // maintain virtual position\n        scrollTo(scrollTop + offset)\n      } else {\n        // scroll to bottom\n        scrollTo(th - viewportH_1)\n      }\n\n      if (h != oldH && options.autoHeight) {\n        resizeCanvas()\n      }\n\n      if (options.forceFitColumns && oldViewportHasVScroll != viewportHasVScroll_1) {\n        autosizeColumns()\n      }\n      updateCanvasWidth(false)\n    }\n\n    // ///////////////////////////////////////////////////////////////////////////////////////////////////////\n    // Returns an object with the following values.\n    //\ttop\t\t- row number of the top visible row. applicable to viewport_0 and viewport_1.\n    //\tbottom\t- row number of the bottom visible row. applicable to viewport_0 and viewport_1.\n    //\tleftPx\t- pixel number of the leftmost visible pixel. applicable to viewPort_1 only.\n    //\t\t\tAs viewport_0 is frozen it is assumed to always be visible\n    //\trightPx\t- pixel number. applicable to viewPort_1 only.\n    //\t\t\tAs viewport_0 is frozen it is assumed to always be visible\n    // ///////////////////////////////////////////////////////////////////////////////////////////////////////\n    function getVisibleRange(viewportTop, viewportLeft) {\n      if (viewportTop == null) {\n        viewportTop = scrollTop\n      }\n      if (viewportLeft == null) {\n        viewportLeft = scrollLeft\n      }\n\n      return {\n        top: getRowFromPosition(viewportTop),\n        bottom: getRowFromPosition(viewportTop + viewportH_1),\n        leftPx: viewportLeft,\n        rightPx: viewportLeft + viewportW_1\n      }\n    }\n\n    // ///////////////////////////////////////////////////////////////////////////////////////////////////////\n    // Returns an object with the following values.\n    //\ttop\t\t- row number. applicable to viewport_0 and viewport_1.\n    //\tbottom\t- row number. applicable to viewport_0 and viewport_1.\n    //\tleftPx\t- pixel number. applicable to viewPort_1 only. As viewport_0 is frozen it\n    //\t\t\tis assumed to always be rendered\n    //\trightPx\t- pixel number. applicable to viewPort_1 only. As viewport_0 is frozen it\n    //\t\t\tis assumed to always be rendered\n    // ///////////////////////////////////////////////////////////////////////////////////////////////////////\n    function getRenderedRange(viewportTop, viewportLeft) {\n      var range = getVisibleRange(viewportTop, viewportLeft)\n      var buffer = Math.round(viewportH_1 / options.rowHeight)\n      var minBuffer = 3\n\n      if (vScrollDir == -1) {\n        range.top -= buffer\n        range.bottom += minBuffer\n      } else if (vScrollDir == 1) {\n        range.top -= minBuffer\n        range.bottom += buffer\n      } else {\n        range.top -= minBuffer\n        range.bottom += minBuffer\n      }\n\n      range.top = Math.max(0, range.top)\n      range.bottom = Math.min(getDataLengthIncludingAddNew() - 1, range.bottom)\n      range.leftPx -= viewportW_1\n      range.rightPx += viewportW_1\n      range.leftPx = Math.max(0, range.leftPx)\n      range.rightPx = Math.min(canvasWidth_1, range.rightPx)\n      return range\n    }\n\n    function ensureCellNodesInRowsCache(row) {\n      var cacheEntry = rowsCache[row]\n      if (cacheEntry) {\n        if (cacheEntry.cellRenderQueue.length) {\n          var lastChild_1 = cacheEntry.rowNode.nonFrozen.lastChild\n          if (options.numberOfColumnsToFreeze > 0) {\n            var lastChild_0 = cacheEntry.rowNode.frozen.lastChild\n          }\n          var numberOfColumnsToFreeze = options.numberOfColumnsToFreeze\n          while (cacheEntry.cellRenderQueue.length) {\n            var columnIdx = cacheEntry.cellRenderQueue.pop()\n\n            if (numberOfColumnsToFreeze > columnIdx) {\n              cacheEntry.cellNodesByColumnIdx[columnIdx] = lastChild_0\n              if (lastChild_0.previousSibling) {\n                lastChild_0 = lastChild_0.previousSibling\n              }\n            } else {\n              cacheEntry.cellNodesByColumnIdx[columnIdx] = lastChild_1\n              if (lastChild_1.previousSibling) {\n                lastChild_1 = lastChild_1.previousSibling\n              }\n            }\n          }\n        }\n      }\n    }\n    function cleanUpCells(range, row) {\n      var totalCellsRemoved = 0\n      var cacheEntry = rowsCache[row]\n\n      // Remove cells outside the range.\n      var cellsToRemove = []\n      for (var i in cacheEntry.cellNodesByColumnIdx) {\n        // I really hate it when people mess with Array.prototype.\n        if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(i)) {\n          continue\n        }\n\n        // This is a string, so it needs to be cast back to a number.\n        i |= 0\n\n        var colspan = cacheEntry.cellColSpans[i]\n        const outOfRange = rtl\n          ? columnPosRear[i] > canvasWidth_1 - range.leftPx ||\n            columnPosFront[Math.min(columns.length - 1, i + colspan - 1)] <\n              canvasWidth_1 - range.rightPx\n          : columnPosRear[i] > range.rightPx ||\n            columnPosFront[Math.min(columns.length - 1, i + colspan - 1)] < range.leftPx\n        if (outOfRange) {\n          if (!(row == activeRow && i == activeCell)) {\n            cellsToRemove.push(i)\n          }\n        }\n      }\n\n      var cellToRemove = cellsToRemove.pop()\n      var childToRemove, children\n      while (cellToRemove != null && cellToRemove != 0) {\n        childToRemove = cacheEntry.cellNodesByColumnIdx[cellToRemove]\n        // cacheEntry.rowNode.frozen.removeChild(childToRemove);\n        children = cacheEntry.rowNode.nonFrozen.childNodes\n        for (var i = 0; i < children.length; i++) {\n          if (children[i] == childToRemove) {\n            cacheEntry.rowNode.nonFrozen.removeChild(childToRemove)\n            delete cacheEntry.cellColSpans[cellToRemove]\n            delete cacheEntry.cellNodesByColumnIdx[cellToRemove]\n            if (postProcessedRows[row]) {\n              delete postProcessedRows[row][cellToRemove]\n            }\n            totalCellsRemoved++\n            break\n          }\n        }\n        if (cellsToRemove.length > 0) {\n          cellToRemove = cellsToRemove.pop()\n        } else {\n          cellToRemove = null\n        }\n      }\n    }\n\n    function cleanUpAndRenderCells(range) {\n      var cacheEntry\n      var stringArray = {frozen: [], nonFrozen: []}\n      var processedRows = []\n      var cellsAdded\n      var totalCellsAdded = 0\n      var colspan\n\n      for (var row = range.top, btm = range.bottom; row <= btm; row++) {\n        cacheEntry = rowsCache[row]\n        if (!cacheEntry) {\n          continue\n        }\n\n        // cellRenderQueue populated in renderRows() needs to be cleared first\n        ensureCellNodesInRowsCache(row)\n\n        cleanUpCells(range, row)\n\n        // Render missing cells.\n        cellsAdded = 0\n\n        var metadata = data.getItemMetadata && data.getItemMetadata(row)\n        metadata = metadata && metadata.columns\n\n        var d = getDataItem(row)\n\n        // TODO:  shorten this loop (index? heuristics? binary search?)\n        for (var i = 0, ii = columns.length; i < ii; i++) {\n          // Cells to the right are outside the range.\n          if (columnPosRear[i] > (rtl ? range.rightPx + canvasWidth_1 : range.rightPx)) {\n            break\n          }\n\n          // Already rendered.\n          if ((colspan = cacheEntry.cellColSpans[i]) != null) {\n            i += colspan > 1 ? colspan - 1 : 0\n            continue\n          }\n\n          colspan = 1\n          if (metadata) {\n            var columnData = metadata[columns[i].id] || metadata[i]\n            colspan = (columnData && columnData.colspan) || 1\n            if (colspan === '*') {\n              colspan = ii - i\n            }\n          }\n\n          if (\n            columnPosFront[Math.min(ii - 1, i + colspan - 1)] >\n            (rtl ? canvasWidth_1 - range.rightPx : range.leftPx)\n          ) {\n            appendCellHtml(stringArray, row, i, colspan, d)\n            cellsAdded++\n          }\n\n          i += colspan > 1 ? colspan - 1 : 0\n        }\n\n        if (cellsAdded) {\n          totalCellsAdded += cellsAdded\n          processedRows.push(row)\n        }\n      }\n\n      if (!stringArray.nonFrozen.length) {\n        return\n      }\n\n      var nonFrozenDiv = document.createElement('div')\n      nonFrozenDiv.innerHTML = stringArray.nonFrozen.join('')\n      var frozenDiv = document.createElement('div')\n      frozenDiv.innerHTML = stringArray.frozen.join('')\n\n      var processedRow\n      var nonFrozenNode\n      var frozenNode\n      var numberOfColumnsToFreeze = options.numberOfColumnsToFreeze\n      while ((processedRow = processedRows.pop()) != null) {\n        cacheEntry = rowsCache[processedRow]\n        var columnIdx\n        while ((columnIdx = cacheEntry.cellRenderQueue.pop()) != null) {\n          frozenNode = frozenDiv.lastChild\n          nonFrozenNode = nonFrozenDiv.lastChild\n          if (numberOfColumnsToFreeze > columnIdx) {\n            cacheEntry.rowNode.frozen.appendChild(frozenNode)\n            cacheEntry.cellNodesByColumnIdx[columnIdx] = frozenNode\n          } else {\n            cacheEntry.rowNode.nonFrozen.appendChild(nonFrozenNode)\n            cacheEntry.cellNodesByColumnIdx[columnIdx] = nonFrozenNode\n          }\n        }\n      }\n    }\n\n    function renderRows(range) {\n      var parentNode_1 = $canvas_1[0],\n        stringArray = {frozen: [], nonFrozen: []},\n        rows = [],\n        needToReselectCell = false,\n        dataLength = getDataLength()\n\n      var numberOfColumnsToFreeze = options.numberOfColumnsToFreeze\n      if (numberOfColumnsToFreeze) {\n        var parentNode_0 = $canvas_0[0]\n      }\n\n      for (var i = range.top, ii = range.bottom; i <= ii; i++) {\n        if (rowsCache[i]) {\n          continue\n        }\n        renderedRows++\n        rows.push(i)\n\n        // Create an entry right away so that appendRowHtml() can\n        // start populatating it.\n        rowsCache[i] = {\n          rowNode: null,\n\n          // ColSpans of rendered cells (by column idx).\n          // Can also be used for checking whether a cell has been rendered.\n          cellColSpans: [],\n\n          // Cell nodes (by column idx).  Lazy-populated by ensureCellNodesInRowsCache().\n          cellNodesByColumnIdx: [],\n\n          // Column indices of cell nodes that have been rendered, but not yet indexed in\n          // cellNodesByColumnIdx.  These are in the same order as cell nodes added at the\n          // end of the row.\n          cellRenderQueue: []\n        }\n\n        appendRowHtml(stringArray, i, range, dataLength)\n        if (activeCellNode && activeRow === i) {\n          needToReselectCell = true\n        }\n        counter_rows_rendered++\n      }\n\n      if (!rows.length) {\n        return\n      }\n\n      var nonFrozenDiv = document.createElement('div')\n      nonFrozenDiv.innerHTML = stringArray.nonFrozen.join('')\n      if (numberOfColumnsToFreeze > 0) {\n        // FreezeColumns - Add divs for both frozen columns and update contents\n        var frozenDiv = document.createElement('div')\n        frozenDiv.innerHTML = stringArray.frozen.join('')\n      }\n\n      var currentRowCache\n      for (var i = 0, ii = rows.length; i < ii; i++) {\n        currentRowCache = rowsCache[rows[i]]\n        currentRowCache.rowNode = {\n          frozen: numberOfColumnsToFreeze > 0 ? parentNode_0.appendChild(frozenDiv.firstChild) : '',\n          nonFrozen: parentNode_1.appendChild(nonFrozenDiv.firstChild)\n        }\n      }\n\n      if (needToReselectCell) {\n        activeCellNode = getCellNode(activeRow, activeCell)\n      }\n    }\n\n    function startPostProcessing() {\n      if (!options.enableAsyncPostRender) {\n        return\n      }\n      clearTimeout(h_postrender)\n      h_postrender = setTimeout(asyncPostProcessRows, options.asyncPostRenderDelay)\n    }\n\n    function invalidatePostProcessingResults(row) {\n      delete postProcessedRows[row]\n      postProcessFromRow = Math.min(postProcessFromRow, row)\n      postProcessToRow = Math.max(postProcessToRow, row)\n      startPostProcessing()\n    }\n\n    function updateRowPositions() {\n      for (var row in rowsCache) {\n        var rowTop = getRowTop(row) + 'px'\n        rowsCache[row].rowNode.frozen.style.top = rowTop\n        rowsCache[row].rowNode.nonFrozen.style.top = rowTop\n      }\n    }\n\n    function render() {\n      if (!initialized) {\n        return\n      }\n      var visible = getVisibleRange()\n      var rendered = getRenderedRange()\n\n      // remove rows no longer in the viewport\n      cleanupRows(rendered)\n\n      // add new rows & missing cells in existing rows\n      if (lastRenderedScrollLeft != scrollLeft) {\n        cleanUpAndRenderCells(rendered)\n      }\n\n      // render missing rows\n      renderRows(rendered)\n\n      postProcessFromRow = visible.top\n      postProcessToRow = Math.min(getDataLengthIncludingAddNew() - 1, visible.bottom)\n      startPostProcessing()\n\n      lastRenderedScrollTop = scrollTop\n      lastRenderedScrollLeft = scrollLeft\n      h_render = null\n    }\n\n    function handleHeaderRowScroll() {\n      var scrollLeft = getScrollLeft($headerRowScroller_1[0])\n      if (scrollLeft != getScrollLeft($viewport_1[0])) {\n        $viewport_1[0].scrollLeft = scrollLeft\n      }\n    }\n\n    function handleScroll(scrollInfo) {\n      if (scrollInfo != undefined && scrollInfo.scrollTop != undefined) {\n        $viewport_1[0].scrollTop = scrollInfo.scrollTop\n      }\n      scrollTop = $viewport_1[0].scrollTop\n      scrollLeft = getScrollLeft($viewport_1[0])\n      var vScrollDist = Math.abs(scrollTop - prevScrollTop)\n      var hScrollDist = Math.abs(scrollLeft - prevScrollLeft)\n\n      if (hScrollDist) {\n        prevScrollLeft = scrollLeft\n        setScrollLeft($headerScroller_1[0], scrollLeft)\n        setScrollLeft($topPanelScroller_1[0], scrollLeft)\n        setScrollLeft($headerRowScroller_1[0], scrollLeft)\n      }\n\n      if (vScrollDist) {\n        vScrollDir = prevScrollTop < scrollTop ? 1 : -1\n        prevScrollTop = scrollTop\n\n        if (options.numberOfColumnsToFreeze > 0) {\n          $viewport_0[0].scrollTop = scrollTop\n        }\n\n        // switch virtual pages if needed\n        if (vScrollDist < viewportH_1) {\n          scrollTo(scrollTop + offset)\n        } else {\n          var oldOffset = offset\n          if (h == viewportH_1) {\n            page = 0\n          } else {\n            page = Math.min(\n              n - 1,\n              Math.floor(scrollTop * ((th - viewportH_1) / (h - viewportH_1)) * (1 / ph))\n            )\n          }\n          offset = Math.round(page * cj)\n          if (oldOffset != offset) {\n            invalidateAllRows()\n          }\n        }\n      }\n\n      if (hScrollDist || vScrollDist) {\n        if (h_render) {\n          clearTimeout(h_render)\n        }\n\n        if (\n          Math.abs(lastRenderedScrollTop - scrollTop) > 20 ||\n          Math.abs(lastRenderedScrollLeft - scrollLeft) > 20\n        ) {\n          if (\n            options.forceSyncScrolling ||\n            (Math.abs(lastRenderedScrollTop - scrollTop) < viewportH_1 &&\n              Math.abs(lastRenderedScrollLeft - scrollLeft) < viewportW_1)\n          ) {\n            render()\n          } else {\n            h_render = setTimeout(render, 50)\n          }\n\n          trigger(self.onViewportChanged, {})\n        }\n      }\n\n      trigger(self.onScroll, {scrollLeft: scrollLeft, scrollTop: scrollTop})\n    }\n\n    function asyncPostProcessRows() {\n      while (postProcessFromRow <= postProcessToRow) {\n        var row = vScrollDir >= 0 ? postProcessFromRow++ : postProcessToRow--\n        var cacheEntry = rowsCache[row]\n        if (!cacheEntry || row >= getDataLength()) {\n          continue\n        }\n\n        if (!postProcessedRows[row]) {\n          postProcessedRows[row] = {}\n        }\n\n        ensureCellNodesInRowsCache(row)\n        for (var columnIdx in cacheEntry.cellNodesByColumnIdx) {\n          if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(columnIdx)) {\n            continue\n          }\n\n          columnIdx |= 0\n\n          var m = columns[columnIdx]\n          if (m.asyncPostRender && !postProcessedRows[row][columnIdx]) {\n            var node = cacheEntry.cellNodesByColumnIdx[columnIdx]\n            if (node) {\n              m.asyncPostRender(node, row, getDataItem(row), m)\n            }\n            postProcessedRows[row][columnIdx] = true\n          }\n        }\n\n        h_postrender = setTimeout(asyncPostProcessRows, options.asyncPostRenderDelay)\n        return\n      }\n    }\n\n    function updateCellCssStylesOnRenderedRows(addedHash, removedHash) {\n      var node, columnId, addedRowHash, removedRowHash\n      for (var row in rowsCache) {\n        removedRowHash = removedHash && removedHash[row]\n        addedRowHash = addedHash && addedHash[row]\n\n        if (removedRowHash) {\n          for (columnId in removedRowHash) {\n            if (!addedRowHash || removedRowHash[columnId] != addedRowHash[columnId]) {\n              node = getCellNode(row, getColumnIndex(columnId))\n              if (node) {\n                $(node).removeClass(removedRowHash[columnId])\n              }\n            }\n          }\n        }\n\n        if (addedRowHash) {\n          for (columnId in addedRowHash) {\n            if (!removedRowHash || removedRowHash[columnId] != addedRowHash[columnId]) {\n              node = getCellNode(row, getColumnIndex(columnId))\n              if (node) {\n                $(node).addClass(addedRowHash[columnId])\n              }\n            }\n          }\n        }\n      }\n    }\n\n    function addCellCssStyles(key, hash) {\n      if (cellCssClasses[key]) {\n        throw \"addCellCssStyles: cell CSS hash with key '\" + key + \"' already exists.\"\n      }\n\n      cellCssClasses[key] = hash\n      updateCellCssStylesOnRenderedRows(hash, null)\n\n      trigger(self.onCellCssStylesChanged, {key: key, hash: hash})\n    }\n\n    function removeCellCssStyles(key) {\n      if (!cellCssClasses[key]) {\n        return\n      }\n\n      updateCellCssStylesOnRenderedRows(null, cellCssClasses[key])\n      delete cellCssClasses[key]\n\n      trigger(self.onCellCssStylesChanged, {key: key, hash: null})\n    }\n\n    function setCellCssStyles(key, hash) {\n      var prevHash = cellCssClasses[key]\n\n      cellCssClasses[key] = hash\n      updateCellCssStylesOnRenderedRows(hash, prevHash)\n\n      trigger(self.onCellCssStylesChanged, {key: key, hash: hash})\n    }\n\n    function getCellCssStyles(key) {\n      return cellCssClasses[key]\n    }\n\n    function flashCell(row, cell, speed) {\n      speed = speed || 100\n      if (rowsCache[row]) {\n        var $cell = $(getCellNode(row, cell))\n\n        var toggleCellClass = function(times) {\n          if (!times) {\n            return\n          }\n          setTimeout(() => {\n            $cell.queue(() => {\n              $cell.toggleClass(options.cellFlashingCssClass).dequeue()\n              toggleCellClass(times - 1)\n            })\n          }, speed)\n        }\n\n        toggleCellClass(4)\n      }\n    }\n\n    // ////////////////////////////////////////////////////////////////////////////////////////////\n    // Interactivity\n\n    function handleDragInit(e, dd) {\n      var cell = getCellFromEvent(e)\n      if (!cell || !cellExists(cell.row, cell.cell)) {\n        return false\n      }\n\n      var retval = trigger(self.onDragInit, dd, e)\n      if (e.isImmediatePropagationStopped()) {\n        return retval\n      }\n\n      // if nobody claims to be handling drag'n'drop by stopping immediate propagation,\n      // cancel out of it\n      return false\n    }\n\n    function handleDragStart(e, dd) {\n      var cell = getCellFromEvent(e)\n      if (!cell || !cellExists(cell.row, cell.cell)) {\n        return false\n      }\n\n      var retval = trigger(self.onDragStart, dd, e)\n      if (e.isImmediatePropagationStopped()) {\n        return retval\n      }\n\n      return false\n    }\n\n    function handleDrag(e, dd) {\n      return trigger(self.onDrag, dd, e)\n    }\n\n    function handleDragEnd(e, dd) {\n      trigger(self.onDragEnd, dd, e)\n    }\n\n    function handleKeyDown(e) {\n      trigger(self.onKeyDown, {row: activeRow, cell: activeCell}, e)\n\n      // Canvas Hack: SlickGrid has unreasonable default behavior that is unavoidable without an early return here.\n      if (e.originalEvent.skipSlickGridDefaults) {\n        return\n      }\n\n      var handled = e.isImmediatePropagationStopped()\n\n      if (!handled) {\n        if (!e.shiftKey && !e.altKey && !e.ctrlKey) {\n          if (e.which == 27) {\n            if (!getEditorLock().isActive()) {\n              return // no editing mode to cancel, allow bubbling and default processing (exit without cancelling the event)\n            }\n            cancelEditAndSetFocus()\n          } else if (e.which == 34) {\n            navigatePageDown()\n            handled = true\n          } else if (e.which == 33) {\n            navigatePageUp()\n            handled = true\n          } else if (e.which == 37) {\n            handled = navigateLeft()\n          } else if (e.which == 39) {\n            handled = navigateRight()\n          } else if (e.which == 38) {\n            handled = navigateUp()\n          } else if (e.which == 40) {\n            handled = navigateDown()\n          } else if (e.which == 9) {\n            handled = navigateNext()\n          } else if (e.which == 13) {\n            if (options.editable) {\n              if (currentEditor) {\n                // adding new row\n                if (activeRow === getDataLength()) {\n                  navigateDown()\n                } else {\n                  commitEditAndSetFocus()\n                }\n              } else if (getEditorLock().commitCurrentEdit()) {\n                makeActiveCellEditable()\n              }\n            }\n            handled = true\n          }\n        } else if (e.which == 9 && e.shiftKey && !e.ctrlKey && !e.altKey) {\n          handled = navigatePrev()\n        }\n      }\n\n      if (handled) {\n        // the event has been handled so don't let parent element (bubbling/propagation) or browser (default) handle it\n        e.stopPropagation()\n        e.preventDefault()\n        try {\n          e.originalEvent.keyCode = 0 // prevent default behaviour for special keys in IE browsers (F3, F5, etc.)\n        } catch (error) {\n          // ignore exceptions - setting the original event's keycode throws access denied exception for \"Ctrl\"\n          // (hitting control key only, nothing else), \"Shift\" (maybe others)\n        }\n      }\n    }\n\n    function handleClick(e) {\n      if (!currentEditor) {\n        // if this click resulted in some cell child node getting focus,\n        // don't steal it back - keyboard events will still bubble up\n        // IE9+ seems to default DIVs to tabIndex=0 instead of -1, so check for cell clicks directly.\n        if (e.target != document.activeElement || $(e.target).hasClass('slick-cell')) {\n          setFocus()\n        }\n      }\n\n      var cell = getCellFromEvent(e)\n      if (!cell || (currentEditor !== null && activeRow == cell.row && activeCell == cell.cell)) {\n        return\n      }\n\n      trigger(self.onClick, {row: cell.row, cell: cell.cell}, e)\n      if (e.isImmediatePropagationStopped()) {\n        return\n      }\n\n      if (\n        (activeCell != cell.cell || activeRow != cell.row) &&\n        canCellBeActive(cell.row, cell.cell)\n      ) {\n        if (!getEditorLock().isActive() || getEditorLock().commitCurrentEdit()) {\n          scrollRowIntoView(cell.row, false)\n          setActiveCellInternal(getCellNode(cell.row, cell.cell))\n        }\n      }\n    }\n\n    function handleContextMenu(e) {\n      var $cell = $(e.target).closest('.slick-cell', $canvas_1)\n      if ($cell.length === 0) {\n        return\n      }\n\n      // are we editing this cell?\n      if (activeCellNode === $cell[0] && currentEditor !== null) {\n        return\n      }\n\n      trigger(self.onContextMenu, {}, e)\n    }\n\n    function handleDblClick(e) {\n      var cell = getCellFromEvent(e)\n      if (!cell || (currentEditor !== null && activeRow == cell.row && activeCell == cell.cell)) {\n        return\n      }\n\n      trigger(self.onDblClick, {row: cell.row, cell: cell.cell}, e)\n      if (e.isImmediatePropagationStopped()) {\n        return\n      }\n\n      if (options.editable) {\n        gotoCell(cell.row, cell.cell, true)\n      }\n    }\n\n    function handleHeaderMouseEnter(e) {\n      trigger(\n        self.onHeaderMouseEnter,\n        {\n          column: $(this).data('column')\n        },\n        e\n      )\n    }\n\n    function handleHeaderMouseLeave(e) {\n      trigger(\n        self.onHeaderMouseLeave,\n        {\n          column: $(this).data('column')\n        },\n        e\n      )\n    }\n\n    function handleHeaderContextMenu(e) {\n      var $header = $(e.target).closest('.slick-header-column', '.slick-header-columns')\n      var column = $header && $header.data('column')\n      trigger(self.onHeaderContextMenu, {column: column}, e)\n    }\n\n    function handleHeaderClick(e) {\n      var $header = $(e.target).closest('.slick-header-column', '.slick-header-columns')\n      var column = $header && $header.data('column')\n      if (column) {\n        trigger(self.onHeaderClick, {column: column}, e)\n      }\n    }\n\n    function handleMouseEnter(e) {\n      trigger(self.onMouseEnter, {}, e)\n    }\n\n    function handleMouseLeave(e) {\n      trigger(self.onMouseLeave, {}, e)\n    }\n\n    function cellExists(row, cell) {\n      return !(row < 0 || row >= getDataLength() || cell < 0 || cell >= columns.length)\n    }\n\n    function getCellFromPoint(x, y) {\n      var row = getRowFromPosition(y)\n      var cell = 0\n\n      var w = 0\n      for (var i = 0; i < columns.length && w < x; i++) {\n        w += columns[i].width\n        cell++\n      }\n\n      if (cell < 0) {\n        cell = 0\n      }\n\n      return {row: row, cell: cell - 1}\n    }\n\n    function getCellFromNode(cellNode) {\n      // read column number from .b<columnNumber> CSS class\n      var cls = /b\\d+/.exec(cellNode.className)\n      if (!cls) {\n        throw 'getCellFromNode: cannot get cell - ' + cellNode.className\n      }\n      return parseInt(cls[0].substr(1, cls[0].length - 1), 10)\n    }\n\n    function getRowFromNode(rowNode) {\n      for (var row in rowsCache) {\n        var rowItem = rowsCache[row].rowNode\n        if (rowItem.frozen === rowNode || rowItem.nonFrozen === rowNode) {\n          return row | 0\n        }\n      }\n\n      return null\n    }\n\n    function getCanvasFromEvent(e) {\n      return jQuery(e.target).closest('.grid-canvas')\n    }\n\n    function getCellFromEvent(e) {\n      var closestCanvas = getCanvasFromEvent(e)\n      var $cell = $(e.target).closest('.slick-cell', closestCanvas)\n      if (!$cell.length) {\n        return null\n      }\n\n      var row = getRowFromNode($cell[0].parentNode)\n      var cell = getCellFromNode($cell[0])\n\n      if (row == null || cell == null) {\n        return null\n      } else {\n        return {\n          row: row,\n          cell: cell\n        }\n      }\n    }\n\n    function getCellNodeBox(row, cell) {\n      if (!cellExists(row, cell)) {\n        return null\n      }\n\n      var y1 = getRowTop(row)\n      var y2 = y1 + options.rowHeight - 1\n      var x1 = 0\n      for (var i = 0; i < cell; i++) {\n        x1 += columns[i].width\n      }\n      var x2 = x1 + columns[cell].width\n\n      return {\n        top: y1,\n        [rear]: x1,\n        bottom: y2,\n        [front]: x2\n      }\n    }\n\n    // ////////////////////////////////////////////////////////////////////////////////////////////\n    // Cell switching\n\n    function resetActiveCell() {\n      setActiveCellInternal(null, false)\n    }\n\n    function setFocus() {\n      if (tabbingDirection == -1) {\n        $focusSink[0].focus()\n      } else {\n        $focusSink2[0].focus()\n      }\n    }\n\n    function scrollCellIntoView(row, cell, doPaging) {\n      scrollRowIntoView(row, doPaging)\n\n      var colspan = getColspan(row, cell)\n      var rearVal = columnPosRear[cell],\n        frontVal = columnPosFront[cell + (colspan > 1 ? colspan - 1 : 0)],\n        scrollRight = scrollLeft + viewportW_1\n\n      if ((rtl ? adjustXToRight(frontVal) : rearVal) < scrollLeft) {\n        // cell is to left of displayed cells\n        setScrollLeft($viewport_1[0], rtl ? Math.max(0, adjustXToRight(frontVal)) : rearVal)\n        handleScroll()\n        render()\n      } else if ((rtl ? adjustXToRight(rearVal) : frontVal) > scrollRight) {\n        // cell is to right of displayed cells\n        setScrollLeft(\n          $viewport_1[0],\n          rtl ? adjustXToRight(frontVal) : Math.min(rearVal, frontVal - $viewport_1[0].clientWidth)\n        )\n        handleScroll()\n        render()\n      }\n    }\n\n    function setActiveCellInternal(newCell, opt_editMode) {\n      if (activeCellNode !== null) {\n        makeActiveCellNormal()\n        $(activeCellNode).removeClass('active')\n        if (rowsCache[activeRow]) {\n          $(rowsCache[activeRow].rowNode.frozen).removeClass('active')\n          $(rowsCache[activeRow].rowNode.nonFrozen).removeClass('active')\n        }\n      }\n\n      var activeCellChanged = activeCellNode !== newCell\n      activeCellNode = newCell\n\n      if (activeCellNode != null) {\n        activeRow = getRowFromNode(activeCellNode.parentNode)\n        activeCell = activePosX = getCellFromNode(activeCellNode)\n\n        if (opt_editMode == null) {\n          opt_editMode = activeRow == getDataLength() || options.autoEdit\n        }\n\n        $(activeCellNode).addClass('active')\n        $(rowsCache[activeRow].rowNode.frozen).addClass('active')\n        $(rowsCache[activeRow].rowNode.nonFrozen).addClass('active')\n\n        if (options.editable && opt_editMode && isCellPotentiallyEditable(activeRow, activeCell)) {\n          clearTimeout(h_editorLoader)\n\n          if (options.asyncEditorLoading) {\n            h_editorLoader = setTimeout(() => {\n              makeActiveCellEditable()\n            }, options.asyncEditorLoadDelay)\n          } else {\n            makeActiveCellEditable()\n          }\n        }\n      } else {\n        activeRow = activeCell = null\n      }\n\n      if (activeCellChanged) {\n        trigger(self.onActiveCellChanged, getActiveCell())\n      }\n    }\n\n    function clearTextSelection() {\n      if (document.selection && document.selection.empty) {\n        try {\n          // IE fails here if selected element is not in dom\n          document.selection.empty()\n        } catch (e) {}\n      } else if (window.getSelection) {\n        var sel = window.getSelection()\n        if (sel && sel.removeAllRanges) {\n          sel.removeAllRanges()\n        }\n      }\n    }\n\n    function isCellPotentiallyEditable(row, cell) {\n      // is the data for this row loaded?\n      if (row < getDataLength() && !getDataItem(row)) {\n        return false\n      }\n\n      // are we in the Add New row?  can we create new from this cell?\n      if (columns[cell].cannotTriggerInsert && row >= getDataLength()) {\n        return false\n      }\n\n      // does this cell have an editor?\n      if (!getEditor(row, cell)) {\n        return false\n      }\n\n      return true\n    }\n\n    function makeActiveCellNormal() {\n      if (!currentEditor) {\n        return\n      }\n      trigger(self.onBeforeCellEditorDestroy, {editor: currentEditor})\n      currentEditor.destroy()\n      currentEditor = null\n\n      if (activeCellNode) {\n        var d = getDataItem(activeRow)\n        $(activeCellNode).removeClass('editable invalid')\n        if (d) {\n          var column = columns[activeCell]\n          var formatter = getFormatter(activeRow, column)\n          activeCellNode.innerHTML = formatter(\n            activeRow,\n            activeCell,\n            getDataItemValueForColumn(d, column),\n            column,\n            d\n          )\n          invalidatePostProcessingResults(activeRow)\n        }\n      }\n\n      // if there previously was text selected on a page (such as selected text in the edit cell just removed),\n      // IE can't set focus to anything else correctly\n      if (navigator.userAgent.toLowerCase().match(/msie/)) {\n        clearTextSelection()\n      }\n\n      getEditorLock().deactivate(editController)\n    }\n\n    function makeActiveCellEditable(editor) {\n      if (!activeCellNode) {\n        return\n      }\n      if (!options.editable) {\n        throw 'Grid : makeActiveCellEditable : should never get called when options.editable is false'\n      }\n\n      // cancel pending async call if there is one\n      clearTimeout(h_editorLoader)\n\n      if (!isCellPotentiallyEditable(activeRow, activeCell)) {\n        return\n      }\n\n      var columnDef = columns[activeCell]\n      var item = getDataItem(activeRow)\n\n      if (\n        trigger(self.onBeforeEditCell, {\n          row: activeRow,\n          cell: activeCell,\n          item: item,\n          column: columnDef\n        }) === false\n      ) {\n        setFocus()\n        return\n      }\n\n      getEditorLock().activate(editController)\n      $(activeCellNode).addClass('editable')\n\n      // don't clear the cell if a custom editor is passed through\n      if (!editor) {\n        activeCellNode.innerHTML = ''\n      }\n\n      currentEditor = new (editor || getEditor(activeRow, activeCell))({\n        grid: self,\n        gridPosition: absBox($outerContainer[0]),\n        position: absBox(activeCellNode),\n        container: activeCellNode,\n        column: columnDef,\n        item: item || {},\n        commitChanges: commitEditAndSetFocus,\n        cancelChanges: cancelEditAndSetFocus,\n        maxLength: columns[activeCell].maxLength\n      })\n\n      if (item) {\n        currentEditor.loadValue(item)\n      }\n\n      serializedEditorValue = currentEditor.serializeValue()\n\n      if (currentEditor.position) {\n        handleActiveCellPositionChange()\n      }\n    }\n\n    function commitEditAndSetFocus() {\n      // if the commit fails, it would do so due to a validation error\n      // if so, do not steal the focus from the editor\n      if (getEditorLock().commitCurrentEdit()) {\n        setFocus()\n        if (options.autoEdit) {\n          navigateDown()\n        }\n      }\n    }\n\n    function cancelEditAndSetFocus() {\n      if (getEditorLock().cancelCurrentEdit()) {\n        setFocus()\n      }\n    }\n\n    function adjustXToRight(x) {\n      return canvasWidth_1 - x\n    }\n\n    function getScrollLeft(elm) {\n      return elm.scrollLeft\n    }\n\n    function setScrollLeft(elm, val) {\n      elm.scrollLeft = val\n    }\n\n    function getOffsetLeft(elm) {\n      return elm.offsetLeft\n    }\n\n    function getOffsetRight(elm) {\n      return document.body.offsetWidth - (elm.offsetLeft + elm.offsetWidth)\n    }\n\n    getOffsetRear = getOffsetLeft\n\n    function absBox(elem) {\n      var box = {\n        top: elem.offsetTop,\n        bottom: 0,\n        width: $(elem).outerWidth(),\n        height: $(elem).outerHeight(),\n        visible: true\n      }\n      box.bottom = box.top + box.height\n      box[rear] = getOffsetRear(elem)\n      box[front] = box[rear] + box.width\n\n      // walk up the tree\n      var offsetParent = elem.offsetParent\n      while ((elem = elem.parentNode) != document.body) {\n        if (\n          box.visible &&\n          elem.scrollHeight != elem.offsetHeight &&\n          $(elem).css('overflowY') != 'visible'\n        ) {\n          box.visible = box.bottom > elem.scrollTop && box.top < elem.scrollTop + elem.clientHeight\n        }\n\n        if (\n          box.visible &&\n          elem.scrollWidth != elem.offsetWidth &&\n          $(elem).css('overflowX') != 'visible'\n        ) {\n          box.visible =\n            box[front] > elem.scrollLeft && box[rear] < elem.scrollLeft + elem.clientWidth\n        }\n\n        box[rear] -= elem.scrollLeft\n        box.top -= elem.scrollTop\n\n        if (elem === offsetParent) {\n          box[rear] += elem.scrollLeft\n          box.top += elem.offsetTop\n          offsetParent = elem.offsetParent\n        }\n\n        box.bottom = box.top + box.height\n        box[front] = box[rear] + box.width\n      }\n\n      return box\n    }\n\n    function getActiveCellPosition() {\n      return absBox(activeCellNode)\n    }\n\n    function getGridPosition() {\n      return absBox($outerContainer[0])\n    }\n\n    function handleActiveCellPositionChange() {\n      if (!activeCellNode) {\n        return\n      }\n\n      trigger(self.onActiveCellPositionChanged, {})\n\n      if (currentEditor) {\n        var cellBox = getActiveCellPosition()\n        if (currentEditor.show && currentEditor.hide) {\n          if (!cellBox.visible) {\n            currentEditor.hide()\n          } else {\n            currentEditor.show()\n          }\n        }\n\n        if (currentEditor.position) {\n          currentEditor.position(cellBox)\n        }\n      }\n    }\n\n    function getCellEditor() {\n      return currentEditor\n    }\n\n    function getActiveCell() {\n      if (!activeCellNode) {\n        return null\n      } else {\n        return {row: activeRow, cell: activeCell}\n      }\n    }\n\n    function getActiveCellNode() {\n      return activeCellNode\n    }\n\n    function scrollRowIntoView(row, doPaging) {\n      var rowAtTop = row * options.rowHeight\n      var rowAtBottom =\n        (row + 1) * options.rowHeight -\n        viewportH_1 +\n        (viewportHasHScroll_1 ? scrollbarDimensions.height : 0)\n\n      // need to page down?\n      if ((row + 1) * options.rowHeight > scrollTop + viewportH_1 + offset) {\n        scrollTo(doPaging ? rowAtTop : rowAtBottom)\n        render()\n      }\n      // or page up?\n      else if (row * options.rowHeight < scrollTop + offset) {\n        scrollTo(doPaging ? rowAtBottom : rowAtTop)\n        render()\n      }\n    }\n\n    function scrollRowToTop(row) {\n      scrollTo(row * options.rowHeight)\n      render()\n    }\n\n    function scrollPage(dir) {\n      var deltaRows = dir * numVisibleRows\n      scrollTo((getRowFromPosition(scrollTop) + deltaRows) * options.rowHeight)\n      render()\n\n      if (options.enableCellNavigation && activeRow != null) {\n        var row = activeRow + deltaRows\n        if (row >= getDataLengthIncludingAddNew()) {\n          row = getDataLengthIncludingAddNew() - 1\n        }\n        if (row < 0) {\n          row = 0\n        }\n\n        var cell = 0,\n          prevCell = null\n        var prevActivePosX = activePosX\n        while (cell <= activePosX) {\n          if (canCellBeActive(row, cell)) {\n            prevCell = cell\n          }\n          cell += getColspan(row, cell)\n        }\n\n        if (prevCell !== null) {\n          setActiveCellInternal(getCellNode(row, prevCell))\n          activePosX = prevActivePosX\n        } else {\n          resetActiveCell()\n        }\n      }\n    }\n\n    function navigatePageDown() {\n      scrollPage(1)\n    }\n\n    function navigatePageUp() {\n      scrollPage(-1)\n    }\n\n    function getColspan(row, cell) {\n      var metadata = data.getItemMetadata && data.getItemMetadata(row)\n      if (!metadata || !metadata.columns) {\n        return 1\n      }\n\n      var columnData = metadata.columns[columns[cell].id] || metadata.columns[cell]\n      var colspan = columnData && columnData.colspan\n      if (colspan === '*') {\n        colspan = columns.length - cell\n      } else {\n        colspan = colspan || 1\n      }\n\n      return colspan\n    }\n\n    function findFirstFocusableCell(row) {\n      var cell = 0\n      while (cell < columns.length) {\n        if (canCellBeActive(row, cell)) {\n          return cell\n        }\n        cell += getColspan(row, cell)\n      }\n      return null\n    }\n\n    function findLastFocusableCell(row) {\n      var cell = 0\n      var lastFocusableCell = null\n      while (cell < columns.length) {\n        if (canCellBeActive(row, cell)) {\n          lastFocusableCell = cell\n        }\n        cell += getColspan(row, cell)\n      }\n      return lastFocusableCell\n    }\n\n    function gotoFront(row, cell, _posX) {\n      if (cell >= columns.length) {\n        return null\n      }\n\n      do {\n        cell += getColspan(row, cell)\n      } while (cell < columns.length && !canCellBeActive(row, cell))\n\n      if (cell < columns.length) {\n        return {\n          row: row,\n          cell: cell,\n          posX: cell\n        }\n      }\n      return null\n    }\n\n    function gotoRear(row, cell, _posX) {\n      if (cell <= 0) {\n        return null\n      }\n\n      var firstFocusableCell = findFirstFocusableCell(row)\n      if (firstFocusableCell === null || firstFocusableCell >= cell) {\n        return null\n      }\n\n      var prev = {\n        row: row,\n        cell: firstFocusableCell,\n        posX: firstFocusableCell\n      }\n      var pos\n      while (true) {\n        pos = gotoFront(prev.row, prev.cell, prev.posX)\n        if (!pos) {\n          return null\n        }\n        if (pos.cell >= cell) {\n          return prev\n        }\n        prev = pos\n      }\n    }\n\n    gotoRight = gotoFront\n    gotoLeft = gotoRear\n\n    function gotoDown(row, cell, posX) {\n      var prevCell\n      while (true) {\n        if (++row >= getDataLengthIncludingAddNew()) {\n          return null\n        }\n\n        prevCell = cell = 0\n        while (cell <= posX) {\n          prevCell = cell\n          cell += getColspan(row, cell)\n        }\n\n        if (canCellBeActive(row, prevCell)) {\n          return {\n            row: row,\n            cell: prevCell,\n            posX: posX\n          }\n        }\n      }\n    }\n\n    function gotoUp(row, cell, posX) {\n      var prevCell\n      while (true) {\n        if (--row < 0) {\n          return null\n        }\n\n        prevCell = cell = 0\n        while (cell <= posX) {\n          prevCell = cell\n          cell += getColspan(row, cell)\n        }\n\n        if (canCellBeActive(row, prevCell)) {\n          return {\n            row: row,\n            cell: prevCell,\n            posX: posX\n          }\n        }\n      }\n    }\n\n    function gotoNext(row, cell, posX) {\n      if (row == null && cell == null) {\n        row = cell = posX = 0\n        if (canCellBeActive(row, cell)) {\n          return {\n            row: row,\n            cell: cell,\n            posX: cell\n          }\n        }\n      }\n\n      var pos = gotoFront(row, cell, posX)\n      if (pos) {\n        return pos\n      }\n\n      var firstFocusableCell = null\n      while (++row < getDataLengthIncludingAddNew()) {\n        firstFocusableCell = findFirstFocusableCell(row)\n        if (firstFocusableCell !== null) {\n          return {\n            row: row,\n            cell: firstFocusableCell,\n            posX: firstFocusableCell\n          }\n        }\n      }\n      return null\n    }\n\n    function gotoPrev(row, cell, posX) {\n      if (row == null && cell == null) {\n        row = getDataLengthIncludingAddNew() - 1\n        cell = posX = columns.length - 1\n        if (canCellBeActive(row, cell)) {\n          return {\n            row: row,\n            cell: cell,\n            posX: cell\n          }\n        }\n      }\n\n      var pos\n      var lastSelectableCell\n      while (!pos) {\n        pos = gotoRear(row, cell, posX)\n        if (pos) {\n          break\n        }\n        if (--row < 0) {\n          return null\n        }\n\n        cell = 0\n        lastSelectableCell = findLastFocusableCell(row)\n        if (lastSelectableCell !== null) {\n          pos = {\n            row: row,\n            cell: lastSelectableCell,\n            posX: lastSelectableCell\n          }\n        }\n      }\n      return pos\n    }\n\n    function navigateRight() {\n      return navigate('right')\n    }\n\n    function navigateLeft() {\n      return navigate('left')\n    }\n\n    function navigateDown() {\n      return navigate('down')\n    }\n\n    function navigateUp() {\n      return navigate('up')\n    }\n\n    function navigateNext() {\n      return navigate('next')\n    }\n\n    function navigatePrev() {\n      return navigate('prev')\n    }\n\n    /**\n     * @param {string} dir Navigation direction.\n     * @return {boolean} Whether navigation resulted in a change of active cell.\n     */\n    function navigate(dir) {\n      if (!options.enableCellNavigation) {\n        return false\n      }\n\n      if (!activeCellNode && dir != 'prev' && dir != 'next') {\n        return false\n      }\n\n      if (!getEditorLock().commitCurrentEdit()) {\n        return true\n      }\n      setFocus()\n\n      var tabbingDirections = {\n        up: -1,\n        down: 1,\n        left: -1,\n        right: 1,\n        prev: -1,\n        next: 1\n      }\n      tabbingDirection = tabbingDirections[dir]\n\n      var stepFunctions = {\n        up: gotoUp,\n        down: gotoDown,\n        left: gotoLeft,\n        right: gotoRight,\n        prev: gotoPrev,\n        next: gotoNext\n      }\n      var stepFn = stepFunctions[dir]\n      var pos = stepFn(activeRow, activeCell, activePosX)\n      if (pos) {\n        var isAddNewRow = pos.row == getDataLength()\n        scrollCellIntoView(pos.row, pos.cell, !isAddNewRow)\n        setActiveCellInternal(getCellNode(pos.row, pos.cell))\n        activePosX = pos.posX\n        return true\n      } else if (activeRow === getDataLength() - 1) {\n        if (activeCell === columns.length - 1) {\n          // When focus is on the last cell in a row\n          // and the last cell in a column.\n          // Move focus outside of SlickGrid.\n          return false\n        }\n        // Otherwise, when focus is on the last cell in a column.\n        // Move focus to the first cell of the next column.\n        setActiveCell(0, activeCell + 1)\n        return true\n      }\n    }\n\n    function getCellNode(row, cell) {\n      if (rowsCache[row]) {\n        ensureCellNodesInRowsCache(row)\n        return rowsCache[row].cellNodesByColumnIdx[cell]\n      }\n      return null\n    }\n\n    function setActiveCell(row, cell) {\n      if (!initialized) {\n        return\n      }\n      if (row > getDataLength() || row < 0 || cell >= columns.length || cell < 0) {\n        return\n      }\n\n      if (!options.enableCellNavigation) {\n        return\n      }\n\n      scrollCellIntoView(row, cell, false)\n      setActiveCellInternal(getCellNode(row, cell), false)\n    }\n\n    function canCellBeActive(row, cell) {\n      if (\n        !options.enableCellNavigation ||\n        row >= getDataLengthIncludingAddNew() ||\n        row < 0 ||\n        cell >= columns.length ||\n        cell < 0\n      ) {\n        return false\n      }\n\n      var rowMetadata = data.getItemMetadata && data.getItemMetadata(row)\n      if (rowMetadata && typeof rowMetadata.focusable === 'boolean') {\n        return rowMetadata.focusable\n      }\n\n      var columnMetadata = rowMetadata && rowMetadata.columns\n      if (\n        columnMetadata &&\n        columnMetadata[columns[cell].id] &&\n        typeof columnMetadata[columns[cell].id].focusable === 'boolean'\n      ) {\n        return columnMetadata[columns[cell].id].focusable\n      }\n      if (\n        columnMetadata &&\n        columnMetadata[cell] &&\n        typeof columnMetadata[cell].focusable === 'boolean'\n      ) {\n        return columnMetadata[cell].focusable\n      }\n\n      return columns[cell].focusable\n    }\n\n    function canCellBeSelected(row, cell) {\n      if (row >= getDataLength() || row < 0 || cell >= columns.length || cell < 0) {\n        return false\n      }\n\n      var rowMetadata = data.getItemMetadata && data.getItemMetadata(row)\n      if (rowMetadata && typeof rowMetadata.selectable === 'boolean') {\n        return rowMetadata.selectable\n      }\n\n      var columnMetadata =\n        rowMetadata &&\n        rowMetadata.columns &&\n        (rowMetadata.columns[columns[cell].id] || rowMetadata.columns[cell])\n      if (columnMetadata && typeof columnMetadata.selectable === 'boolean') {\n        return columnMetadata.selectable\n      }\n\n      return columns[cell].selectable\n    }\n\n    function gotoCell(row, cell, forceEdit) {\n      if (!initialized) {\n        return\n      }\n      if (!canCellBeActive(row, cell)) {\n        return\n      }\n\n      if (!getEditorLock().commitCurrentEdit()) {\n        return\n      }\n\n      scrollCellIntoView(row, cell, false)\n\n      var newCell = getCellNode(row, cell)\n\n      // if selecting the 'add new' row, start editing right away\n      setActiveCellInternal(newCell, forceEdit || row === getDataLength() || options.autoEdit)\n\n      // if no editor was created, set the focus back on the grid\n      if (!currentEditor) {\n        setFocus()\n      }\n    }\n\n    // ////////////////////////////////////////////////////////////////////////////////////////////\n    // IEditor implementation for the editor lock\n\n    function commitCurrentEdit() {\n      var item = getDataItem(activeRow)\n      var column = columns[activeCell]\n\n      if (currentEditor) {\n        if (currentEditor.isValueChanged()) {\n          var validationResults = currentEditor.validate()\n\n          if (validationResults.valid) {\n            if (activeRow < getDataLength()) {\n              var editCommand = {\n                row: activeRow,\n                cell: activeCell,\n                editor: currentEditor,\n                serializedValue: currentEditor.serializeValue(),\n                prevSerializedValue: serializedEditorValue,\n                execute: function() {\n                  this.editor.applyValue(item, this.serializedValue)\n                  updateRow(this.row)\n                },\n                undo: function() {\n                  this.editor.applyValue(item, this.prevSerializedValue)\n                  updateRow(this.row)\n                }\n              }\n\n              if (options.editCommandHandler) {\n                makeActiveCellNormal()\n                options.editCommandHandler(item, column, editCommand)\n              } else {\n                editCommand.execute()\n                makeActiveCellNormal()\n              }\n\n              trigger(self.onCellChange, {\n                row: activeRow,\n                cell: activeCell,\n                column: column,\n                item: item\n              })\n            } else {\n              var newItem = {}\n              currentEditor.applyValue(newItem, currentEditor.serializeValue())\n              makeActiveCellNormal()\n              trigger(self.onAddNewRow, {item: newItem, column: column})\n            }\n\n            // check whether the lock has been re-acquired by event handlers\n            return !getEditorLock().isActive()\n          } else {\n            // Re-add the CSS class to trigger transitions, if any.\n            $(activeCellNode).removeClass('invalid')\n            $(activeCellNode).width() // force layout\n            $(activeCellNode).addClass('invalid')\n\n            trigger(self.onValidationError, {\n              editor: currentEditor,\n              cellNode: activeCellNode,\n              validationResults: validationResults,\n              row: activeRow,\n              cell: activeCell,\n              column: column\n            })\n\n            currentEditor.focus()\n            return false\n          }\n        }\n\n        makeActiveCellNormal()\n      }\n      return true\n    }\n\n    function cancelCurrentEdit() {\n      makeActiveCellNormal()\n      return true\n    }\n\n    function rowsToRanges(rows) {\n      var ranges = []\n      var lastCell = columns.length - 1\n      for (var i = 0; i < rows.length; i++) {\n        ranges.push(new Slick.Range(rows[i], 0, rows[i], lastCell))\n      }\n      return ranges\n    }\n\n    function getSelectedRows() {\n      if (!selectionModel) {\n        throw 'Selection model is not set'\n      }\n      return selectedRows\n    }\n\n    function setSelectedRows(rows) {\n      if (!selectionModel) {\n        throw 'Selection model is not set'\n      }\n      selectionModel.setSelectedRanges(rowsToRanges(rows))\n    }\n\n    // ////////////////////////////////////////////////////////////////////////////////////////////\n    // Debug\n\n    this.debug = function() {\n      var s = ''\n\n      s += '\\n' + 'counter_rows_rendered:  ' + counter_rows_rendered\n      s += '\\n' + 'counter_rows_removed:  ' + counter_rows_removed\n      s += '\\n' + 'renderedRows:  ' + renderedRows\n      s += '\\n' + 'numVisibleRows:  ' + numVisibleRows\n      s += '\\n' + 'maxSupportedCssHeight:  ' + maxSupportedCssHeight\n      s += '\\n' + 'n(umber of pages):  ' + n\n      s += '\\n' + '(current) page:  ' + page\n      s += '\\n' + 'page height (ph):  ' + ph\n      s += '\\n' + 'vScrollDir:  ' + vScrollDir\n\n      alert(s)\n    }\n\n    // a debug helper to be able to access private members\n    this.eval = function(expr) {\n      return eval(expr)\n    }\n\n    // ////////////////////////////////////////////////////////////////////////////////////////////\n    // Public API\n\n    $.extend(this, {\n      slickGridVersion: '2.1',\n\n      // Events\n      onScroll: new Slick.Event(),\n      onSort: new Slick.Event(),\n      onHeaderMouseEnter: new Slick.Event(),\n      onHeaderMouseLeave: new Slick.Event(),\n      onHeaderContextMenu: new Slick.Event(),\n      onHeaderClick: new Slick.Event(),\n      onHeaderCellRendered: new Slick.Event(),\n      onBeforeHeaderCellDestroy: new Slick.Event(),\n      onHeaderRowCellRendered: new Slick.Event(),\n      onBeforeHeaderRowCellDestroy: new Slick.Event(),\n      onMouseEnter: new Slick.Event(),\n      onMouseLeave: new Slick.Event(),\n      onClick: new Slick.Event(),\n      onDblClick: new Slick.Event(),\n      onContextMenu: new Slick.Event(),\n      onKeyDown: new Slick.Event(),\n      onAddNewRow: new Slick.Event(),\n      onValidationError: new Slick.Event(),\n      onViewportChanged: new Slick.Event(),\n      onColumnsReordered: new Slick.Event(),\n      onColumnsResized: new Slick.Event(),\n      onCellChange: new Slick.Event(),\n      onBeforeEditCell: new Slick.Event(),\n      onBeforeCellEditorDestroy: new Slick.Event(),\n      onBeforeDestroy: new Slick.Event(),\n      onActiveCellChanged: new Slick.Event(),\n      onActiveCellPositionChanged: new Slick.Event(),\n      onDragInit: new Slick.Event(),\n      onDragStart: new Slick.Event(),\n      onDrag: new Slick.Event(),\n      onDragEnd: new Slick.Event(),\n      onSelectedRowsChanged: new Slick.Event(),\n      onCellCssStylesChanged: new Slick.Event(),\n\n      // Methods\n      registerPlugin: registerPlugin,\n      unregisterPlugin: unregisterPlugin,\n      getColumns: getColumns,\n      setColumns: setColumns,\n      getColumnIndex: getColumnIndex,\n      updateColumnHeader: updateColumnHeader,\n      setNumberOfColumnsToFreeze: setNumberOfColumnsToFreeze,\n      setSortColumn: setSortColumn,\n      setSortColumns: setSortColumns,\n      getSortColumns: getSortColumns,\n      autosizeColumns: autosizeColumns,\n      getOptions: getOptions,\n      setOptions: setOptions,\n      getData: getData,\n      getDataLength: getDataLength,\n      getDataItem: getDataItem,\n      setData: setData,\n      getSelectionModel: getSelectionModel,\n      setSelectionModel: setSelectionModel,\n      getSelectedRows: getSelectedRows,\n      setSelectedRows: setSelectedRows,\n      getContainerNode: getContainerNode,\n\n      render: render,\n      invalidate: invalidate,\n      invalidateRow: invalidateRow,\n      invalidateRows: invalidateRows,\n      invalidateAllRows: invalidateAllRows,\n      updateCell: updateCell,\n      updateRow: updateRow,\n      getViewport: getVisibleRange,\n      getRenderedRange: getRenderedRange,\n      resizeCanvas: resizeCanvas,\n      updateRowCount: updateRowCount,\n      scrollRowIntoView: scrollRowIntoView,\n      scrollRowToTop: scrollRowToTop,\n      scrollCellIntoView: scrollCellIntoView,\n      getCanvasNode: getCanvasNode,\n      focus: setFocus,\n\n      getCellFromPoint: getCellFromPoint,\n      getCellFromEvent: getCellFromEvent,\n      getActiveCell: getActiveCell,\n      setActiveCell: setActiveCell,\n      getActiveCellNode: getActiveCellNode,\n      getActiveCellPosition: getActiveCellPosition,\n      resetActiveCell: resetActiveCell,\n      editActiveCell: makeActiveCellEditable,\n      getCellEditor: getCellEditor,\n      getCellNode: getCellNode,\n      getCellNodeBox: getCellNodeBox,\n      canCellBeSelected: canCellBeSelected,\n      canCellBeActive: canCellBeActive,\n      navigatePrev: navigatePrev,\n      navigateNext: navigateNext,\n      navigateUp: navigateUp,\n      navigateDown: navigateDown,\n      navigateLeft: navigateLeft,\n      navigateRight: navigateRight,\n      navigatePageUp: navigatePageUp,\n      navigatePageDown: navigatePageDown,\n      gotoCell: gotoCell,\n      getTopPanel: getTopPanel,\n      setTopPanelVisibility: setTopPanelVisibility,\n      setHeaderRowVisibility: setHeaderRowVisibility,\n      getHeaderRow: getHeaderRow,\n      getHeaderRowColumn: getHeaderRowColumn,\n      getColumnHeaderNode: getColumnHeaderNode,\n      getGridPosition: getGridPosition,\n      flashCell: flashCell,\n      addCellCssStyles: addCellCssStyles,\n      setCellCssStyles: setCellCssStyles,\n      removeCellCssStyles: removeCellCssStyles,\n      getCellCssStyles: getCellCssStyles,\n      getUID: getUID,\n\n      init: finishInitialization,\n      destroy: destroy,\n\n      // IEditor implementation\n      getEditorLock: getEditorLock,\n      getEditController: getEditController\n    })\n\n    init()\n  }\n})(jQuery)\n","import $ from 'jquery'\n\n/*!\n * jquery.event.drag - v 2.2\n * Copyright (c) 2010 Three Dub Media - http://threedubmedia.com\n * Open Source MIT License - http://threedubmedia.com/code/license\n */\n// Created: 2008-06-04\n// Updated: 2012-05-21\n// REQUIRES: jquery 1.7.x\n;(function($) {\n  // add the jquery instance method\n  $.fn.drag = function(str, arg, opts) {\n    // figure out the event type\n    var type = typeof str == 'string' ? str : '',\n      // figure out the event handler...\n      fn = $.isFunction(str) ? str : $.isFunction(arg) ? arg : null\n    // fix the event type\n    if (type.indexOf('drag') !== 0) type = 'drag' + type\n    // were options passed\n    opts = (str == fn ? arg : opts) || {}\n    // trigger or bind event handler\n    return fn ? this.bind(type, opts, fn) : this.trigger(type)\n  }\n\n  // local refs (increase compression)\n  var $event = $.event,\n    $special = $event.special,\n    // configure the drag special event\n    drag = ($special.drag = {\n      // these are the default settings\n      defaults: {\n        which: 1, // mouse button pressed to start drag sequence\n        distance: 0, // distance dragged before dragstart\n        not: ':input', // selector to suppress dragging on target elements\n        handle: null, // selector to match handle target elements\n        relative: false, // true to use \"position\", false to use \"offset\"\n        drop: true, // false to suppress drop events, true or selector to allow\n        click: false // false to suppress click events after dragend (no proxy)\n      },\n\n      // the key name for stored drag data\n      datakey: 'dragdata',\n\n      // prevent bubbling for better performance\n      noBubble: true,\n\n      // count bound related events\n      add: function(obj) {\n        // read the interaction data\n        var data = $.data(this, drag.datakey),\n          // read any passed options\n          opts = obj.data || {}\n        // count another realted event\n        data.related += 1\n        // extend data options bound with this event\n        // don't iterate \"opts\" in case it is a node\n        $.each(drag.defaults, function(key, def) {\n          if (opts[key] !== undefined) data[key] = opts[key]\n        })\n      },\n\n      // forget unbound related events\n      remove: function() {\n        $.data(this, drag.datakey).related -= 1\n      },\n\n      // configure interaction, capture settings\n      setup: function() {\n        // check for related events\n        if ($.data(this, drag.datakey)) return\n        // initialize the drag data with copied defaults\n        var data = $.extend({related: 0}, drag.defaults)\n        // store the interaction data\n        $.data(this, drag.datakey, data)\n        // bind the mousedown event, which starts drag interactions\n        $event.add(this, 'touchstart mousedown', drag.init, data)\n        // prevent image dragging in IE...\n        if (this.attachEvent) this.attachEvent('ondragstart', drag.dontstart)\n      },\n\n      // destroy configured interaction\n      teardown: function() {\n        var data = $.data(this, drag.datakey) || {}\n        // check for related events\n        if (data.related) return\n        // remove the stored data\n        $.removeData(this, drag.datakey)\n        // remove the mousedown event\n        $event.remove(this, 'touchstart mousedown', drag.init)\n        // enable text selection\n        drag.textselect(true)\n        // un-prevent image dragging in IE...\n        if (this.detachEvent) this.detachEvent('ondragstart', drag.dontstart)\n      },\n\n      // initialize the interaction\n      init: function(event) {\n        // sorry, only one touch at a time\n        if (drag.touched) return\n        // the drag/drop interaction data\n        var dd = event.data,\n          results\n        // check the which directive\n        if (event.which != 0 && dd.which > 0 && event.which != dd.which) return\n        // check for suppressed selector\n        if ($(event.target).is(dd.not)) return\n        // check for handle selector\n        if (dd.handle && !$(event.target).closest(dd.handle, event.currentTarget).length) return\n\n        drag.touched = event.type == 'touchstart' ? this : null\n        dd.propagates = 1\n        dd.mousedown = this\n        dd.interactions = [drag.interaction(this, dd)]\n        dd.target = event.target\n        dd.pageX = event.pageX\n        dd.pageY = event.pageY\n        dd.dragging = null\n        // handle draginit event...\n        results = drag.hijack(event, 'draginit', dd)\n        // early cancel\n        if (!dd.propagates) return\n        // flatten the result set\n        results = drag.flatten(results)\n        // insert new interaction elements\n        if (results && results.length) {\n          dd.interactions = []\n          $.each(results, function() {\n            dd.interactions.push(drag.interaction(this, dd))\n          })\n        }\n        // remember how many interactions are propagating\n        dd.propagates = dd.interactions.length\n        // locate and init the drop targets\n        if (dd.drop !== false && $special.drop) $special.drop.handler(event, dd)\n        // disable text selection\n        drag.textselect(false)\n        // bind additional events...\n        if (drag.touched) $event.add(drag.touched, 'touchmove touchend', drag.handler, dd)\n        else $event.add(document, 'mousemove mouseup', drag.handler, dd)\n        // helps prevent text selection or scrolling\n        if (!drag.touched || dd.live) return false\n      },\n\n      // returns an interaction object\n      interaction: function(elem, dd) {\n        var offset = $(elem)[dd.relative ? 'position' : 'offset']() || {top: 0, left: 0}\n        return {\n          drag: elem,\n          callback: new drag.callback(),\n          droppable: [],\n          offset: offset\n        }\n      },\n\n      // handle drag-releatd DOM events\n      handler: function(event) {\n        // read the data before hijacking anything\n        var dd = event.data\n        // handle various events\n        switch (event.type) {\n          // mousemove, check distance, start dragging\n          case !dd.dragging && 'touchmove':\n            event.preventDefault()\n          case !dd.dragging && 'mousemove':\n            //  drag tolerance, x≤ + y≤ = distance≤\n            if (\n              Math.pow(event.pageX - dd.pageX, 2) + Math.pow(event.pageY - dd.pageY, 2) <\n              Math.pow(dd.distance, 2)\n            )\n              break // distance tolerance not reached\n            event.target = dd.target // force target from \"mousedown\" event (fix distance issue)\n            drag.hijack(event, 'dragstart', dd) // trigger \"dragstart\"\n            if (dd.propagates)\n              // \"dragstart\" not rejected\n              dd.dragging = true // activate interaction\n          // mousemove, dragging\n          case 'touchmove':\n            event.preventDefault()\n          case 'mousemove':\n            if (dd.dragging) {\n              // trigger \"drag\"\n              drag.hijack(event, 'drag', dd)\n              if (dd.propagates) {\n                // manage drop events\n                if (dd.drop !== false && $special.drop) $special.drop.handler(event, dd) // \"dropstart\", \"dropend\"\n                break // \"drag\" not rejected, stop\n              }\n              event.type = 'mouseup' // helps \"drop\" handler behave\n            }\n          // mouseup, stop dragging\n          case 'touchend':\n          case 'mouseup':\n          default:\n            if (drag.touched) $event.remove(drag.touched, 'touchmove touchend', drag.handler)\n            // remove touch events\n            else $event.remove(document, 'mousemove mouseup', drag.handler) // remove page events\n            if (dd.dragging) {\n              if (dd.drop !== false && $special.drop) $special.drop.handler(event, dd) // \"drop\"\n              drag.hijack(event, 'dragend', dd) // trigger \"dragend\"\n            }\n            drag.textselect(true) // enable text selection\n            // if suppressing click events...\n            if (dd.click === false && dd.dragging)\n              $.data(dd.mousedown, 'suppress.click', new Date().getTime() + 5)\n            dd.dragging = drag.touched = false // deactivate element\n            break\n        }\n      },\n\n      // re-use event object for custom events\n      hijack: function(event, type, dd, x, elem) {\n        // not configured\n        if (!dd) return\n        // remember the original event and type\n        var orig = {event: event.originalEvent, type: event.type},\n          // is the event drag related or drog related?\n          mode = type.indexOf('drop') ? 'drag' : 'drop',\n          // iteration vars\n          result,\n          i = x || 0,\n          ia,\n          $elems,\n          callback,\n          len = !isNaN(x) ? x : dd.interactions.length\n        // modify the event type\n        event.type = type\n        // remove the original event\n        event.originalEvent = null\n        // initialize the results\n        dd.results = []\n        // handle each interacted element\n        do\n          if ((ia = dd.interactions[i])) {\n            // validate the interaction\n            if (type !== 'dragend' && ia.cancelled) continue\n            // set the dragdrop properties on the event object\n            callback = drag.properties(event, dd, ia)\n            // prepare for more results\n            ia.results = []\n            // handle each element\n            $(elem || ia[mode] || dd.droppable).each(function(p, subject) {\n              // identify drag or drop targets individually\n              callback.target = subject\n              // force propagtion of the custom event\n              event.isPropagationStopped = function() {\n                return false\n              }\n              // handle the event\n              result = subject ? $event.dispatch.call(subject, event, callback) : null\n              // stop the drag interaction for this element\n              if (result === false) {\n                if (mode == 'drag') {\n                  ia.cancelled = true\n                  dd.propagates -= 1\n                }\n                if (type == 'drop') {\n                  ia[mode][p] = null\n                }\n              }\n              // assign any dropinit elements\n              else if (type == 'dropinit') ia.droppable.push(drag.element(result) || subject)\n              // accept a returned proxy element\n              if (type == 'dragstart') ia.proxy = $(drag.element(result) || ia.drag)[0]\n              // remember this result\n              ia.results.push(result)\n              // forget the event result, for recycling\n              delete event.result\n              // break on cancelled handler\n              if (type !== 'dropinit') return result\n            })\n            // flatten the results\n            dd.results[i] = drag.flatten(ia.results)\n            // accept a set of valid drop targets\n            if (type == 'dropinit') ia.droppable = drag.flatten(ia.droppable)\n            // locate drop targets\n            if (type == 'dragstart' && !ia.cancelled) callback.update()\n          }\n        while (++i < len)\n        // restore the original event & type\n        event.type = orig.type\n        event.originalEvent = orig.event\n        // return all handler results\n        return drag.flatten(dd.results)\n      },\n\n      // extend the callback object with drag/drop properties...\n      properties: function(event, dd, ia) {\n        var obj = ia.callback\n        // elements\n        obj.drag = ia.drag\n        obj.proxy = ia.proxy || ia.drag\n        // starting mouse position\n        obj.startX = dd.pageX\n        obj.startY = dd.pageY\n        // current distance dragged\n        obj.deltaX = event.pageX - dd.pageX\n        obj.deltaY = event.pageY - dd.pageY\n        // original element position\n        obj.originalX = ia.offset.left\n        obj.originalY = ia.offset.top\n        // adjusted element position\n        obj.offsetX = obj.originalX + obj.deltaX\n        obj.offsetY = obj.originalY + obj.deltaY\n        // assign the drop targets information\n        obj.drop = drag.flatten((ia.drop || []).slice())\n        obj.available = drag.flatten((ia.droppable || []).slice())\n        return obj\n      },\n\n      // determine is the argument is an element or jquery instance\n      element: function(arg) {\n        if (arg && (arg.jquery || arg.nodeType == 1)) return arg\n      },\n\n      // flatten nested jquery objects and arrays into a single dimension array\n      flatten: function(arr) {\n        return $.map(arr, function(member) {\n          return member && member.jquery\n            ? $.makeArray(member)\n            : member && member.length\n            ? drag.flatten(member)\n            : member\n        })\n      },\n\n      // toggles text selection attributes ON (true) or OFF (false)\n      textselect: function(bool) {\n        $(document)\n          [bool ? 'unbind' : 'bind']('selectstart', drag.dontstart)\n          .css('MozUserSelect', bool ? '' : 'none')\n        // .attr(\"unselectable\", bool ? \"off\" : \"on\" )\n        document.unselectable = bool ? 'off' : 'on'\n      },\n\n      // suppress \"selectstart\" and \"ondragstart\" events\n      dontstart: function() {\n        return false\n      },\n\n      // a callback instance contructor\n      callback: function() {}\n    })\n\n  // callback methods\n  drag.callback.prototype = {\n    update: function() {\n      if ($special.drop && this.available.length)\n        $.each(this.available, function(i) {\n          $special.drop.locate(this, i)\n        })\n    }\n  }\n\n  // patch $.event.$dispatch to allow suppressing clicks\n  var $dispatch = $event.dispatch\n  $event.dispatch = function(event) {\n    if ($.data(this, 'suppress.' + event.type) - new Date().getTime() > 0) {\n      $.removeData(this, 'suppress.' + event.type)\n      return\n    }\n    return $dispatch.apply(this, arguments)\n  }\n\n  // event fix hooks for touch events...\n  var touchHooks = ($event.fixHooks.touchstart = $event.fixHooks.touchmove = $event.fixHooks.touchend = $event.fixHooks.touchcancel = {\n    props: 'clientX clientY pageX pageY screenX screenY'.split(' '),\n    filter: function(event, orig) {\n      if (orig) {\n        var touched =\n          (orig.touches && orig.touches[0]) ||\n          (orig.changedTouches && orig.changedTouches[0]) ||\n          null\n        // iOS webkit: touchstart, touchmove, touchend\n        if (touched)\n          $.each(touchHooks.props, function(i, prop) {\n            event[prop] = touched[prop]\n          })\n      }\n      return event\n    }\n  })\n\n  // share the same special event configuration with related events...\n  $special.draginit = $special.dragstart = $special.dragend = drag\n})($)\n"],"sourceRoot":""}