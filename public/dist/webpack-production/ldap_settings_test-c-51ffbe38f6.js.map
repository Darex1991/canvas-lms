{"version":3,"sources":["webpack:///./public/javascripts/ldap_settings_test.js"],"names":["testLDAP","$","each","ENV","LDAP_TESTS","i","test","test_type","html","remove","hide","dialog","title","I18n","t","width","js_function","getJSON","url","data","success","server_error","config","errors","h","show","$server_error","addClass","css","text","append","slice","next_test","document","ready","click","event","preventDefault","submit","attr","username","val","password","post","LOGIN_TEST_URL","authenticity_token","message","ldap_login_test","m","err","msg","testLDAPLogin"],"mappings":"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","file":"ldap_settings_test-c-51ffbe38f6.js","sourcesContent":["/*\n * Copyright (C) 2013 - present Instructure, Inc.\n *\n * This file is part of Canvas.\n *\n * Canvas is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, version 3 of the License.\n *\n * Canvas is distributed in the hope that it will be useful, but WITHOUT ANY\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\n * A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License along\n * with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport I18n from 'i18n!accounts'\nimport $ from 'jquery'\nimport h from './str/htmlEscape'\nimport authenticity_token from 'compiled/behaviors/authenticity_token'\nimport './jquery.ajaxJSON'\nimport 'jqueryui/dialog'\n\nfunction testLDAP() {\n  clearTestLDAP()\n  $('#test_ldap_dialog').dialog({\n    title: I18n.t('test_ldap_dialog_title', 'Test LDAP Settings'),\n    width: 600\n  })\n  ENV.LDAP_TESTS[0].js_function()\n}\nfunction clearTestLDAP() {\n  $.each(ENV.LDAP_TESTS, (i, test) => {\n    $('#ldap_' + test.test_type + '_result').html('')\n    $('#ldap_' + test.test_type + '_help .server_error').remove()\n    $('#ldap_' + test.test_type + '_help').hide()\n  })\n  $('#ldap_login_result').html('')\n  $('#ldap_login_form').hide()\n}\n$.each(ENV.LDAP_TESTS, (i, test) => {\n  test.js_function = function() {\n    $('#ldap_' + test.test_type + '_result').html(\"<img src='/images/ajax-loader.gif'/>\")\n    $.getJSON(test.url, data => {\n      let success = true\n      let server_error = ''\n      $.each(data, (i, config) => {\n        if (!config['ldap_' + test.test_type + '_test']) {\n          success = false\n          if (config.errors[0] && config.errors[0]['ldap_' + test.test_type + '_test']) {\n            server_error = config.errors[0]['ldap_' + test.test_type + '_test']\n          }\n        }\n      })\n      if (success) {\n        $('#ldap_' + test.test_type + '_result').html(\n          \"<h4 style='color:green'>\" + h(I18n.t('test_ldap_result_ok', 'OK')) + '</h4>'\n        )\n        if (ENV.LDAP_TESTS[i + 1]) {\n          // proceed to the next test\n          ENV.LDAP_TESTS[i + 1].js_function()\n        } else {\n          // show login test tool\n          $('#ldap_login_form').show('blind')\n        }\n      } else {\n        $('#ldap_' + test.test_type + '_result').html(\n          \"<h4 style='color:red'>\" + h(I18n.t('test_ldap_result_failed', 'Failed')) + '</h4>'\n        )\n        $('#ldap_' + test.test_type + '_help').show()\n        const $server_error = $('<p></p>')\n          .addClass('server_error')\n          .css('color', 'red')\n          .text(server_error)\n        $('#ldap_' + test.test_type + '_help').append($server_error)\n\n        $.each(ENV.LDAP_TESTS.slice(i + 1), (i, next_test) => {\n          $('#ldap_' + next_test.test_type + '_result').html(\n            \"<h4 style='color:red'>\" + h(I18n.t('test_ldap_result_canceled', 'Canceled')) + '</h4>'\n          )\n        })\n        $('#ldap_login_result').html(\n          \"<h4 style='color:red'>\" + h(I18n.t('test_ldap_result_canceled', 'Canceled')) + '</h4>'\n        )\n      }\n    })\n  }\n})\nfunction testLDAPLogin() {\n  $('#ldap_test_login')\n    .attr('disabled', 'true')\n    .attr('value', I18n.t('testing', 'Testing...'))\n  $('#ldap_login_result').html(\"<img src='/images/ajax-loader.gif'/>\")\n  const username = $('#ldap_test_login_user').val()\n  const password = $('#ldap_test_login_pass').val()\n  $.post(\n    ENV.LOGIN_TEST_URL,\n    {username, password, authenticity_token: authenticity_token()},\n    data => {\n      let success = true\n      let message = ''\n      $.each(data, (i, config) => {\n        if (!config.ldap_login_test) {\n          success = false\n        }\n        if (config.errors) {\n          $.each(config.errors, (i, m) => {\n            $.each(m, (err, msg) => {\n              message += msg\n            })\n          })\n        }\n      })\n      if (success) {\n        $('#ldap_login_help_error').hide()\n        $('#ldap_login_result').html(\n          \"<h4 style='color:green'>\" + h(I18n.t('test_ldap_result_ok', 'OK')) + '</h4>'\n        )\n        $('#ldap_test_login')\n          .attr('disabled', '')\n          .attr('value', I18n.t('test_login', 'Test Login'))\n      } else {\n        $('#ldap_login_result').html(\n          \"<h4 style='color:red'>\" + h(I18n.t('test_ldap_result_failed', 'Failed')) + '</h4>'\n        )\n        $('#ldap_login_help').show()\n        $('#ldap_test_login')\n          .attr('disabled', '')\n          .attr('value', I18n.t('retry_login', 'Retry Login'))\n        $('#ldap_login_help_error').text(message)\n      }\n    }\n  )\n}\n\n$(document).ready(() => {\n  $('.test_ldap_link').click(event => {\n    event.preventDefault()\n    // kick off our test\n    testLDAP()\n  })\n  $('.ldap_test_close').click(event => {\n    event.preventDefault()\n    $('#test_ldap_dialog').dialog('close')\n  })\n  $('#ldap_test_login_form').submit(event => {\n    event.preventDefault()\n    testLDAPLogin()\n  })\n})\n"],"sourceRoot":""}