{"version":3,"sources":["webpack:///./node_modules/apollo-link/lib/bundle.esm.js","webpack:///(webpack)/buildin/harmony-module.js","webpack:///./node_modules/fast-json-stable-stringify/index.js","webpack:///./node_modules/zen-observable/index.js","webpack:///./node_modules/graphql-anywhere/lib/graphql.js","webpack:///./node_modules/apollo-utilities/lib/bundle.esm.js","webpack:///./node_modules/symbol-observable/es/ponyfill.js","webpack:///./node_modules/zen-observable-ts/lib/bundle.esm.js","webpack:///./node_modules/symbol-observable/es/index.js","webpack:///./node_modules/apollo-client/bundle.esm.js","webpack:///./node_modules/graphql-anywhere/lib/async.js","webpack:///./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","webpack:///./node_modules/graphql-tag/src/index.js","webpack:///./node_modules/@apollo/react-common/lib/react-common.esm.js","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///./node_modules/zen-observable/lib/Observable.js","webpack:///./node_modules/ts-invariant/lib/invariant.esm.js","webpack:///./node_modules/@wry/equality/lib/equality.esm.js","webpack:///./node_modules/@apollo/react-hooks/lib/react-hooks.esm.js","webpack:///./node_modules/@apollo/react-components/lib/react-components.esm.js","webpack:///./node_modules/apollo-cache/lib/bundle.esm.js","webpack:///./node_modules/@wry/context/lib/context.esm.js","webpack:///./node_modules/optimism/lib/bundle.esm.js","webpack:///./node_modules/apollo-cache-inmemory/lib/bundle.esm.js","webpack:///./node_modules/apollo-link-http-common/lib/bundle.esm.js","webpack:///./node_modules/apollo-link-http/lib/bundle.esm.js","webpack:///./node_modules/apollo-link-error/lib/bundle.esm.js","webpack:///./node_modules/apollo-link-state/lib/utils.js","webpack:///./node_modules/apollo-link-state/lib/index.js","webpack:///./app/jsx/canvas-apollo.js"],"names":["_super","LinkError","message","link","_this","call","this","Error","isTerminating","request","length","fromError","errorValue","observer","error","createOperation","starting","operation","context","Object","defineProperty","enumerable","value","next","query","variables","operationName","JSON","stringify","getKey","passthrough","op","forward","of","toLink","handler","ApolloLink","empty","from","links","map","reduce","x","y","concat","split","test","left","right","leftLink","rightLink","first","second","firstLink","nextLink","prototype","execute","transformedOperation","extensions","transformOperation","OPERATION_FIELDS","_i","_a","keys","key","indexOf","validateOperation","module","exports","originalModule","webpackPolyfill","create","children","get","l","i","data","opts","cmp","f","cycles","node","a","b","aobj","bobj","seen","toJSON","undefined","isFinite","out","Array","isArray","TypeError","seenIndex","push","sort","splice","Observable","apollo_utilities_1","executeSelectionSet","selectionSet","rootValue","execContext","fragmentMap","contextValue","variableValues","result","selections","forEach","selection","shouldInclude","isField","fieldResult","field","resolver","fieldName","name","args","argumentsObjectFromField","info","isLeaf","resultKey","resultKeyNameFromField","directives","getDirectiveInfoFromField","executeSubSelectedArray","item","executeField","resultFieldKey","merge","fragment","isInlineFragment","typeCondition","fragmentMatcher","fragmentResult","resultMapper","graphql","document","execOptions","mainDefinition","getMainDefinition","fragments","getFragmentDefinitions","createFragmentMap","hasOwn","hasOwnProperty","dest","src","srcVal","isScalarValue","kind","isNumberValue","valueToObjectRepresentation","argObj","isIntValue","isFloatValue","Number","isBooleanValue","isStringValue","isObjectValue","nestedArgObj_1","fields","obj","isVariable","variableValue","isListValue","values","listValue","nestedArgArrayObj","isEnumValue","isNullValue","storeKeyNameFromField","directivesObj","directive","arguments","getStoreKeyName","KNOWN_DIRECTIVES","filterKeys","queryArgs_1","filteredArgs_1","completeFieldName","stringifiedArgs","argObj_1","alias","isIdValue","idObject","type","generated","toIdValue","idConfig","id","typename","isJsonValue","jsonObject","defaultValueFromVariable","valueFromNode","onVariable","parseInt","parseFloat","v","directiveObj_1","getInclusionDirectives","every","ifArgument","evaledValue","getDirectiveNames","doc","names","Directive","hasDirectives","some","hasClientExports","isInclusionDirective","filter","directiveArguments","ifValue","getFragmentQueryDocument","fragmentName","actualFragmentName","definitions","definition","assign","target","sources","source","getMutationDefinition","checkDocument","mutationDef","operations","d","getOperationDefinition","getOperationDefinitionOrDie","def","getOperationName","getQueryDefinition","queryDef","getFragmentDefinition","fragmentDef","queryDoc","fragmentDefinition","symTable","getDefaultValues","variableDefinitions","defaultValues","defaultValue","variable","defaultValueObj","apply","variablesInOperation","Set","add","filterInPlace","array","elem","TYPENAME_FIELD","nullIfDocIsEmpty","isEmpty","getDirectiveMatcher","dir","removeDirectivesFromDocument","variablesInUse","variablesToRemove","fragmentSpreadsInUse","fragmentSpreadsToRemove","modifiedDoc","Variable","enter","_key","parent","Field","remove","arg","getAllFragmentSpreadsFromSelectionSet","allFragments","frag","FragmentSpread","removeArgumentsFromDocument","fs","removeFragmentSpreadFromDocument","addTypenameToDocument","SelectionSet","lastIndexOf","connectionRemoveConfig","willRemove","removeConnectionDirectiveFromDocument","hasDirectivesInSelectionSet","nestedCheck","hasDirectivesInSelection","getDirectivesFromDocument","parentPath","_parent","path","currentPath","join","startsWith","selectionsWithDirectives","config","argMatcher","argument","aConfig","getArgumentMatcher","OperationDefinition","varDef","argConfig","argMatchCount_1","Argument","FragmentDefinition","buildQueryFromSelectionSet","removeClientSetsFromDocument","canUseWeakMap","WeakMap","navigator","product","toString","cloneDeep","cloneDeepHelper","val","has","copy_1","slice","set","child","copy_2","getPrototypeOf","Map","getEnv","process","isEnv","env","isProduction","isDevelopment","isTest","tryFunctionOrLogError","e","console","graphQLResultHasError","errors","maybeDeepFreeze","Symbol","deepFreeze","o","freeze","getOwnPropertyNames","prop","isFrozen","mergeDeep","mergeDeepArray","count","pastCopies","shallowCopyForMerge","mergeHelper","isObject","isExtensible","sourceKey","sourceValue","targetValue","__proto__","haveWarned","warnOnceInDevelopment","msg","warn","stripSymbols","parse","symbolObservablePonyfill","root","observable","self","window","global","NetworkStatus","isNetworkRequestInFlight","networkStatus","isNonEmptyArray","FetchType","ApolloError","err","graphQLErrors","networkError","errorMessage","extraInfo","graphQLError","replace","ObservableQuery","queryManager","options","_b","shouldSubscribe","onSubscribe","observers","subscriptions","isTornDown","queryId","generateQueryId","opDef","queryName","Promise","resolve","reject","delete","size","removeQuery","setTimeout","subscription","unsubscribe","subscribe","currentResult","getCurrentResult","lastResult","lastError","loading","storeValue","policy","getCurrentQueryResult","partial","queryStoreValue","queryStore","fetchPolicy","isNetworkFetchPolicy","errorPolicy","ready","updateLastResult","stale","isDifferentFromLastResult","newResult","snapshot","lastResultSnapshot","getLastResult","getLastError","resetLastResults","resetQueryStoreErrors","refetch","fetchQuery","fetchMore","fetchMoreOptions","updateQuery","combinedOptions","qid","normal","then","fetchMoreResult","previousResult","stopQuery","subscribeToMore","startGraphQLSubscription","subscriptionData","previous","onError","setOptions","oldFetchPolicy","pollInterval","startPolling","stopPolling","setVariables","fetchResults","tryFetch","mapFn","getQueryWithPreviousResult","dataStore","markUpdateQueryResult","broadcastQueries","stopPollingQuery","assertNotCacheFirstOrOnly","startPollingQuery","assumeImmutableResults","subObserver","_subscription","_observer","defaultSubscriptionObserverErrorCallback","setUpQuery","tearDownQuery","addObservableQuery","iterateObserversSafely","observeQuery","previousResult_1","query_1","fetchPolicy_1","transform","getLocalState","addExportedVariables","previousVariables","serverQuery","catch","sub","clear","removeObservableQuery","method","observersWithMethod","obs","obsQuery","MutationStore","store","getStore","mutationId","initMutation","mutation","markMutationError","markMutationResult","reset","QueryStore","initQuery","previousQuery","isSetVariables","storePreviousVariables","isPoll","poll","isRefetch","metadata","fetchMoreForQueryId","markQueryResult","markQueryError","markQueryResultClient","complete","observableQueryIds","LocalState","cache","client","resolvers","addResolvers","setFragmentMatcher","resolverGroup","setResolvers","getResolvers","runResolvers","remoteResult","onlyRunForcedResolvers","_c","resolveDocument","localResult","getFragmentMatcher","clientQuery","prepareContext","getCacheKey","dataIdFromObject","buildRootValueFromCache","exportedVariables","shouldForceResolvers","forceResolvers","diff","returnPartialData","optimistic","definitionOperation","defaultOperationType","str","charAt","toUpperCase","resolveSelectionSet","resultsToMerge","resolveField","all","aliasedFieldName","aliasUsed","defaultResult","resultPromise","resolverType","resolverMap","__typename","resolveSubSelectedArray","multiplex","inner","QueryManager","queryDeduplication","onBroadcast","_d","ssrMode","_e","clientAwareness","localState","mutationStore","idCounter","queries","fetchQueryRejectFns","transformCache","inFlightLinkObservables","pollingInfoByQueryId","getCache","stop","_info","stopQueryNoBroadcast","mutate","optimisticResponse","updateQueriesByName","updateQueries","refetchQueries","awaitRefetchQueries","updateWithProxyFn","update","generateUpdateQueriesInfo","_f","label","setQuery","getVariables","sent","ret","observableQuery","updater","markMutationInit","storeResult","getObservableFromLink","markMutationComplete","refetchQueryPromises","refetchQuery","queryOptions","fetchType","isNetworkOnly","needToFetch","shouldFetch","requestId","cancel","networkResult","updateQueryWatch","lastRequestId","invalidated","invalidate","fetchRequest","getQuery","hasForcedResolvers","newData","queryListenerForObserver","invoke","networkStatusChanged","shouldNotifyIfLoading","notifyOnNetworkStatusChange","hasGraphQLErrors","isMissing","errorStatusChanged","diffResult","resultFromStore","transformed","transformDocument","forLink","transformForLink","cacheEntry_1","defaultVars","watchQuery","transformedOptions","watchedQuery","String","stopQueryInStore","stopQueryInStoreNoBroadcast","addQueryListener","listener","listeners","watch","callback","clearStore","resetIds","resetStore","reFetchObservableQueries","includeStandby","observableQueryPromises","startQuery","makeObservable","markSubscriptionResult","observablePromise_1","queryIdOrObservable","foundObserveableQuery","deduplication","inFlightLinkObservables_1","forceFetch","byVariables_1","varJson_1","cleanup","cleanupSub_1","activeNextCount","completed","asyncMap","errorsFromStore","fqrfId","result_1","prev","newInfo","newContext","checkInFlight","interval","maybeFetch_1","poll_1","clearTimeout","timeout","DataStore","initialCache","ignoreErrors","writeWithErrors","write","dataId","optimistic_1","recordOptimisticTransaction","c","orig","cacheWrites_1","updateQueries_1","currentQueryResult","nextQueryResult","mutationResult","queryVariables","performTransaction","removeOptimistic","ApolloClient","defaultOptions","resetStoreCallbacks","clearStoreCallbacks","ssrForceFetchDelay","connectToDevTools","typeDefs","clientAwarenessName","clientAwarenessVersion","version","disableNetworkFetches","bind","__APOLLO_CLIENT__","devToolsHookCb","action","state","mutations","dataWithOptimisticResults","extract","readQuery","readFragment","writeQuery","writeFragment","writeData","__actionHookForDevTools","cb","__requestRaw","payload","initQueryManager","fn","onResetStore","onClearStore","restore","serializedState","setLocalStateFragmentMatcher","tslib_1","graphql_1","__awaiter","__generator","_taggedTemplateLiteral","strings","raw","defineProperties","normalize","string","trim","docCache","fragmentSourceMap","printFragmentWarnings","experimentalFragmentVariables","parseDocument","cacheKey","parsed","stripLoc","removeLocAtThisLevel","docType","loc","startToken","endToken","valueType","ast","astFragmentMap","body","substring","start","end","processFragments","gql","literals","default","resetCaches","disableFragmentWarnings","enableExperimentalFragmentVariables","disableExperimentalFragmentVariables","apolloContext","getApolloContext","createContext","DocumentType","ApolloProvider","ApolloContext","createElement","Consumer","Provider","ApolloConsumer","props","Query","Mutation","Subscription","parser","cached","extendStatics","setPrototypeOf","p","__extends","__","constructor","__assign","t","s","n","__rest","getOwnPropertySymbols","propertyIsEnumerable","__decorate","decorators","desc","r","getOwnPropertyDescriptor","Reflect","decorate","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","thisArg","_arguments","P","generator","fulfilled","step","rejected","done","g","_","trys","ops","verb","iterator","pop","__exportStar","m","__values","__read","ar","__spread","__spreadArrays","il","k","j","jl","__await","__asyncGenerator","asyncIterator","q","resume","fulfill","settle","shift","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","__importStar","mod","__esModule","__importDefault","__classPrivateFieldGet","receiver","privateMap","__classPrivateFieldSet","_classCallCheck","instance","Constructor","_defineProperties","descriptor","configurable","writable","_createClass","protoProps","staticProps","hasSymbols","hasSymbol","Boolean","getSymbol","SymbolIterator","SymbolObservable","SymbolSpecies","getMethod","getSpecies","ctor","isObservable","hostReportError","log","enqueue","cleanupSubscription","_cleanup","closeSubscription","_queue","_state","notifySubscription","onNotify","queue","flushSubscription","subscriber","subscriptionObserver","SubscriptionObserver","_subscriber","_this2","_this3","_this4","C","hasSeed","hasValue","seed","acc","_this5","_len","index","startNext","_this6","outer","completeIfDone","closed","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","_item","return","_len2","items","_key2","symbol","proto","InvariantError","genericMessage","framesToPop","invariant","condition","wrapConsoleMethod","processStub","Function","atLeastWeTried","previousComparisons","equal","check","aTag","bTag","previouslyCompared","aKeys","bKeys","keyCount","aIterator","entries","isMap","aKey","aValue","bSet","OperationData","isMounted","previousOptions","getOptions","newOptions","storePrevious","unmount","refreshClient","isNew","verifyDocumentType","QueryData","onNewData","previousData","currentObservable","runLazy","runLazyQuery","lazyOptions","getExecuteResult","getQueryResult","startQuerySubscription","obsRefetch","obsFetchMore","obsUpdateQuery","obsStartPolling","obsStopPolling","obsSubscribeToMore","skip","removeQuerySubscription","updateObservableQuery","getExecuteSsrResult","executeLazy","called","fetchData","ssr","afterExecute","lazy","handleErrorOrCompleted","ssrInitiated","renderPromises","ssrDisabled","fetchDisabled","ssrLoading","observableQueryFields","addQueryPromise","prepareObservableQueryOptions","displayName","reactComponent","initializeObservableQuery","getSSRObservable","observableQueryOptions","registerSSRObservable","newObservableQueryOptions","resubscribeToQuery","partialRefetch","onCompleted","useBaseQuery","tick","forceUpdate","updatedOptions","queryDataRef","queryData","current","memoFn","ref","memo","queryResult","useQuery","MutationData","setResult","runMutation","mutationFunctionOptions","onMutationStart","generateNewMutationId","response","onMutationCompleted","onMutationError","mostRecentMutationId","mutationContext","mutateOptions","mutateVariables","ignoreResults","updateResult","isMostRecentMutation","useMutation","mutationDataRef","mutationData","SubscriptionData","initialize","getLoadingResult","shouldResubscribe","startSubscription","endSubscription","updateCurrentData","updateError","completeSubscription","onSubscriptionData","onSubscriptionComplete","useSubscription","subscriptionDataRef","RenderPromises","queryPromises","queryInfoTrie","lookupQueryInfo","queryInstance","finish","hasPromises","consumeAndAwaitPromises","promises","promise","varMap","variablesString","propTypes","object","func","isRequired","bool","number","oneOfType","arrayOf","queryFromPojo","selectionSetFromObj","Cache","justTypenameQuery","ApolloCache","read","rootId","typenameResult","dataToWrite","currentContext","MISSING_VALUE","host","Slot","Date","now","Math","random","context_1","slots","getValue","withValue","saved","noContext","defaultDispose","max","dispose","Infinity","newest","oldest","entry","getEntry","older","newer","clean","parentEntrySlot","reusableEmptyArray","emptySetPool","assert","optionalMessage","valueGet","Entry","parents","childValues","dirtyChildren","dirty","recomputing","recompute","mightBeDirty","reportDirtyChild","reportCleanChild","rememberParent","maybeReportOrphan","originalChildren","forgetChildren","recomputeNewValue","maybeUnsubscribe","setDirty","maybeSubscribe","reportClean","setClean","reallyRecompute","reportDirty","forgetChild","len","childValue","removeDirtyChild","dc","reportOrphan","_value","KeyTrie","weakness","lookup","lookupArray","getChildTrie","isObjRef","weak","strong","keyTrie","defaultMakeCacheKey","caches","wrap","originalFunction","pow","disposable","makeCacheKey","shouldWarn","answer","HeuristicFragmentMatcher","ensureReady","canBypassInit","match","idValue","isRootQuery","IntrospectionFragmentMatcher","introspectionQueryResultData","possibleTypesMap","parseIntrospectionResult","isReady","implementingTypes","introspectionResultData","typeMap","__schema","types","possibleTypes","implementingType","DepTrackingCache","depend","toObject","defaultNormalizedCacheFactory","StoreReader","cacheKeyRoot","freezeResults","executeStoreQuery","readQueryFromStore","diffQueryAgainstStore","fragmentMatcherFunction","queryDefinition","cacheRedirects","execResult","hasMissingFields","missing","tolerable","defaultFragmentMatcher","finalResult","objectsToMerge","handleMissing","fragmentExecResult","readStoreResult","storeKeyName","fieldValue","storeObj","json","readStoreResolver","combineExecResults","assertSelectionSetForIdValue","execResults","childResult","ObjectCache","WriteError","StoreWriter","writeQueryToStore","writeResultToStore","operationDefinition","writeSelectionSetToStore","processedData","enhancedError","stack","enhanceErrorWithDocument","writeFieldToStore","isDefered","isClient","matches","fakeContext","storeObject","storeFieldName","generatedId","processArrayValue","valueDataId","isGeneratedId","semanticId","isDataProcessed","escapedId","hadTypename","hasTypename","typenameChanged","mergeWithGenerated","generatedKey","realKey","real","madeChanges","realValue","newRealValue","itemDataId","defaultConfig","_id","addTypename","resultCaching","hasOwn$1","OptimisticCacheLayer","optimisticId","transaction","InMemoryCache","watches","typenameDocumentCache","silenceBroadcast","customResolvers","cacheResolvers","optimisticData","storeWriter","storeReader","maybeBroadcastWatch","broadcastWatches","evict","idToRemove","toReapply","removedCount","layer","layer_1","fallbackHttpConfig","http","includeQuery","includeExtensions","headers","accept","throwServerError","statusCode","status","serializeFetchParameter","serialized","parseError","createHttpLink","linkOptions","uri","fetcher","fetch","useGETForQueries","requestOptions","checkFetcher","linkConfig","fetchOptions","credentials","chosenURI","fallbackURI","contextURI","getContext","selectURI","clientAwarenessHeaders","name_1","controller","contextHeaders","contextConfig","fallbackConfig","configs","selectHttpOptionsAndBody","signal","AbortController","createSignalIfSupported","_controller","queryParams","addQueryParam","encodeURIComponent","serializedVariables","serializedExtensions","preFragment","fragmentStart","substr","queryParamsPrefix","newURI","rewriteURIForGET","setContext","text","bodyText","abort","HttpLink","errorHandler","retriedSub","retriedResult","ErrorLink","removed","withClientState","clientStateConfig","defaults","StateLink","writeDefaults","definition_1","typeDef","normalizeTypeDefs","schemas","server","docClone","aliasedNode","preAliasingNode","aliasNeeded","handlingNext","observerErrorHandler","nextData","createConsoleErrorReportLink","locations","createClient","stateLink","mockLink","getCookie"],"mappings":"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","file":"43-c-87c8ce5435.js","sourcesContent":["import Observable from 'zen-observable-ts';\nexport { default as Observable } from 'zen-observable-ts';\nimport { invariant, InvariantError } from 'ts-invariant';\nimport { __extends, __assign } from 'tslib';\nimport { getOperationName } from 'apollo-utilities';\nexport { getOperationName } from 'apollo-utilities';\n\nfunction validateOperation(operation) {\n    var OPERATION_FIELDS = [\n        'query',\n        'operationName',\n        'variables',\n        'extensions',\n        'context',\n    ];\n    for (var _i = 0, _a = Object.keys(operation); _i < _a.length; _i++) {\n        var key = _a[_i];\n        if (OPERATION_FIELDS.indexOf(key) < 0) {\n            throw process.env.NODE_ENV === \"production\" ? new InvariantError(2) : new InvariantError(\"illegal argument: \" + key);\n        }\n    }\n    return operation;\n}\nvar LinkError = (function (_super) {\n    __extends(LinkError, _super);\n    function LinkError(message, link) {\n        var _this = _super.call(this, message) || this;\n        _this.link = link;\n        return _this;\n    }\n    return LinkError;\n}(Error));\nfunction isTerminating(link) {\n    return link.request.length <= 1;\n}\nfunction toPromise(observable) {\n    var completed = false;\n    return new Promise(function (resolve, reject) {\n        observable.subscribe({\n            next: function (data) {\n                if (completed) {\n                    process.env.NODE_ENV === \"production\" || invariant.warn(\"Promise Wrapper does not support multiple results from Observable\");\n                }\n                else {\n                    completed = true;\n                    resolve(data);\n                }\n            },\n            error: reject,\n        });\n    });\n}\nvar makePromise = toPromise;\nfunction fromPromise(promise) {\n    return new Observable(function (observer) {\n        promise\n            .then(function (value) {\n            observer.next(value);\n            observer.complete();\n        })\n            .catch(observer.error.bind(observer));\n    });\n}\nfunction fromError(errorValue) {\n    return new Observable(function (observer) {\n        observer.error(errorValue);\n    });\n}\nfunction transformOperation(operation) {\n    var transformedOperation = {\n        variables: operation.variables || {},\n        extensions: operation.extensions || {},\n        operationName: operation.operationName,\n        query: operation.query,\n    };\n    if (!transformedOperation.operationName) {\n        transformedOperation.operationName =\n            typeof transformedOperation.query !== 'string'\n                ? getOperationName(transformedOperation.query)\n                : '';\n    }\n    return transformedOperation;\n}\nfunction createOperation(starting, operation) {\n    var context = __assign({}, starting);\n    var setContext = function (next) {\n        if (typeof next === 'function') {\n            context = __assign({}, context, next(context));\n        }\n        else {\n            context = __assign({}, context, next);\n        }\n    };\n    var getContext = function () { return (__assign({}, context)); };\n    Object.defineProperty(operation, 'setContext', {\n        enumerable: false,\n        value: setContext,\n    });\n    Object.defineProperty(operation, 'getContext', {\n        enumerable: false,\n        value: getContext,\n    });\n    Object.defineProperty(operation, 'toKey', {\n        enumerable: false,\n        value: function () { return getKey(operation); },\n    });\n    return operation;\n}\nfunction getKey(operation) {\n    var query = operation.query, variables = operation.variables, operationName = operation.operationName;\n    return JSON.stringify([operationName, query, variables]);\n}\n\nfunction passthrough(op, forward) {\n    return forward ? forward(op) : Observable.of();\n}\nfunction toLink(handler) {\n    return typeof handler === 'function' ? new ApolloLink(handler) : handler;\n}\nfunction empty() {\n    return new ApolloLink(function () { return Observable.of(); });\n}\nfunction from(links) {\n    if (links.length === 0)\n        return empty();\n    return links.map(toLink).reduce(function (x, y) { return x.concat(y); });\n}\nfunction split(test, left, right) {\n    var leftLink = toLink(left);\n    var rightLink = toLink(right || new ApolloLink(passthrough));\n    if (isTerminating(leftLink) && isTerminating(rightLink)) {\n        return new ApolloLink(function (operation) {\n            return test(operation)\n                ? leftLink.request(operation) || Observable.of()\n                : rightLink.request(operation) || Observable.of();\n        });\n    }\n    else {\n        return new ApolloLink(function (operation, forward) {\n            return test(operation)\n                ? leftLink.request(operation, forward) || Observable.of()\n                : rightLink.request(operation, forward) || Observable.of();\n        });\n    }\n}\nvar concat = function (first, second) {\n    var firstLink = toLink(first);\n    if (isTerminating(firstLink)) {\n        process.env.NODE_ENV === \"production\" || invariant.warn(new LinkError(\"You are calling concat on a terminating link, which will have no effect\", firstLink));\n        return firstLink;\n    }\n    var nextLink = toLink(second);\n    if (isTerminating(nextLink)) {\n        return new ApolloLink(function (operation) {\n            return firstLink.request(operation, function (op) { return nextLink.request(op) || Observable.of(); }) || Observable.of();\n        });\n    }\n    else {\n        return new ApolloLink(function (operation, forward) {\n            return (firstLink.request(operation, function (op) {\n                return nextLink.request(op, forward) || Observable.of();\n            }) || Observable.of());\n        });\n    }\n};\nvar ApolloLink = (function () {\n    function ApolloLink(request) {\n        if (request)\n            this.request = request;\n    }\n    ApolloLink.prototype.split = function (test, left, right) {\n        return this.concat(split(test, left, right || new ApolloLink(passthrough)));\n    };\n    ApolloLink.prototype.concat = function (next) {\n        return concat(this, next);\n    };\n    ApolloLink.prototype.request = function (operation, forward) {\n        throw process.env.NODE_ENV === \"production\" ? new InvariantError(1) : new InvariantError('request is not implemented');\n    };\n    ApolloLink.empty = empty;\n    ApolloLink.from = from;\n    ApolloLink.split = split;\n    ApolloLink.execute = execute;\n    return ApolloLink;\n}());\nfunction execute(link, operation) {\n    return (link.request(createOperation(operation.context, transformOperation(validateOperation(operation)))) || Observable.of());\n}\n\nexport { ApolloLink, concat, createOperation, empty, execute, from, fromError, fromPromise, makePromise, split, toPromise };\n//# sourceMappingURL=bundle.esm.js.map\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","'use strict';\n\nmodule.exports = function (data, opts) {\n    if (!opts) opts = {};\n    if (typeof opts === 'function') opts = { cmp: opts };\n    var cycles = (typeof opts.cycles === 'boolean') ? opts.cycles : false;\n\n    var cmp = opts.cmp && (function (f) {\n        return function (node) {\n            return function (a, b) {\n                var aobj = { key: a, value: node[a] };\n                var bobj = { key: b, value: node[b] };\n                return f(aobj, bobj);\n            };\n        };\n    })(opts.cmp);\n\n    var seen = [];\n    return (function stringify (node) {\n        if (node && node.toJSON && typeof node.toJSON === 'function') {\n            node = node.toJSON();\n        }\n\n        if (node === undefined) return;\n        if (typeof node == 'number') return isFinite(node) ? '' + node : 'null';\n        if (typeof node !== 'object') return JSON.stringify(node);\n\n        var i, out;\n        if (Array.isArray(node)) {\n            out = '[';\n            for (i = 0; i < node.length; i++) {\n                if (i) out += ',';\n                out += stringify(node[i]) || 'null';\n            }\n            return out + ']';\n        }\n\n        if (node === null) return 'null';\n\n        if (seen.indexOf(node) !== -1) {\n            if (cycles) return JSON.stringify('__cycle__');\n            throw new TypeError('Converting circular structure to JSON');\n        }\n\n        var seenIndex = seen.push(node) - 1;\n        var keys = Object.keys(node).sort(cmp && cmp(node));\n        out = '';\n        for (i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            var value = stringify(node[key]);\n\n            if (!value) continue;\n            if (out) out += ',';\n            out += JSON.stringify(key) + ':' + value;\n        }\n        seen.splice(seenIndex, 1);\n        return '{' + out + '}';\n    })(data);\n};\n","module.exports = require('./lib/Observable.js').Observable;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar apollo_utilities_1 = require(\"apollo-utilities\");\nfunction graphql(resolver, document, rootValue, contextValue, variableValues, execOptions) {\n    if (variableValues === void 0) { variableValues = {}; }\n    if (execOptions === void 0) { execOptions = {}; }\n    var mainDefinition = apollo_utilities_1.getMainDefinition(document);\n    var fragments = apollo_utilities_1.getFragmentDefinitions(document);\n    var fragmentMap = apollo_utilities_1.createFragmentMap(fragments);\n    var resultMapper = execOptions.resultMapper;\n    var fragmentMatcher = execOptions.fragmentMatcher || (function () { return true; });\n    var execContext = {\n        fragmentMap: fragmentMap,\n        contextValue: contextValue,\n        variableValues: variableValues,\n        resultMapper: resultMapper,\n        resolver: resolver,\n        fragmentMatcher: fragmentMatcher,\n    };\n    return executeSelectionSet(mainDefinition.selectionSet, rootValue, execContext);\n}\nexports.graphql = graphql;\nfunction executeSelectionSet(selectionSet, rootValue, execContext) {\n    var fragmentMap = execContext.fragmentMap, contextValue = execContext.contextValue, variables = execContext.variableValues;\n    var result = {};\n    selectionSet.selections.forEach(function (selection) {\n        if (variables && !apollo_utilities_1.shouldInclude(selection, variables)) {\n            return;\n        }\n        if (apollo_utilities_1.isField(selection)) {\n            var fieldResult = executeField(selection, rootValue, execContext);\n            var resultFieldKey = apollo_utilities_1.resultKeyNameFromField(selection);\n            if (fieldResult !== undefined) {\n                if (result[resultFieldKey] === undefined) {\n                    result[resultFieldKey] = fieldResult;\n                }\n                else {\n                    merge(result[resultFieldKey], fieldResult);\n                }\n            }\n        }\n        else {\n            var fragment = void 0;\n            if (apollo_utilities_1.isInlineFragment(selection)) {\n                fragment = selection;\n            }\n            else {\n                fragment = fragmentMap[selection.name.value];\n                if (!fragment) {\n                    throw new Error(\"No fragment named \" + selection.name.value);\n                }\n            }\n            var typeCondition = fragment.typeCondition.name.value;\n            if (execContext.fragmentMatcher(rootValue, typeCondition, contextValue)) {\n                var fragmentResult = executeSelectionSet(fragment.selectionSet, rootValue, execContext);\n                merge(result, fragmentResult);\n            }\n        }\n    });\n    if (execContext.resultMapper) {\n        return execContext.resultMapper(result, rootValue);\n    }\n    return result;\n}\nfunction executeField(field, rootValue, execContext) {\n    var variables = execContext.variableValues, contextValue = execContext.contextValue, resolver = execContext.resolver;\n    var fieldName = field.name.value;\n    var args = apollo_utilities_1.argumentsObjectFromField(field, variables);\n    var info = {\n        isLeaf: !field.selectionSet,\n        resultKey: apollo_utilities_1.resultKeyNameFromField(field),\n        directives: apollo_utilities_1.getDirectiveInfoFromField(field, variables),\n        field: field,\n    };\n    var result = resolver(fieldName, rootValue, args, contextValue, info);\n    if (!field.selectionSet) {\n        return result;\n    }\n    if (result == null) {\n        return result;\n    }\n    if (Array.isArray(result)) {\n        return executeSubSelectedArray(field, result, execContext);\n    }\n    return executeSelectionSet(field.selectionSet, result, execContext);\n}\nfunction executeSubSelectedArray(field, result, execContext) {\n    return result.map(function (item) {\n        if (item === null) {\n            return null;\n        }\n        if (Array.isArray(item)) {\n            return executeSubSelectedArray(field, item, execContext);\n        }\n        return executeSelectionSet(field.selectionSet, item, execContext);\n    });\n}\nvar hasOwn = Object.prototype.hasOwnProperty;\nfunction merge(dest, src) {\n    if (src !== null && typeof src === 'object') {\n        Object.keys(src).forEach(function (key) {\n            var srcVal = src[key];\n            if (!hasOwn.call(dest, key)) {\n                dest[key] = srcVal;\n            }\n            else {\n                merge(dest[key], srcVal);\n            }\n        });\n    }\n}\nexports.merge = merge;\n//# sourceMappingURL=graphql.js.map","import { visit } from 'graphql/language/visitor';\nimport { InvariantError, invariant } from 'ts-invariant';\nimport { __assign, __spreadArrays } from 'tslib';\nimport stringify from 'fast-json-stable-stringify';\nexport { equal as isEqual } from '@wry/equality';\n\nfunction isScalarValue(value) {\n    return ['StringValue', 'BooleanValue', 'EnumValue'].indexOf(value.kind) > -1;\n}\nfunction isNumberValue(value) {\n    return ['IntValue', 'FloatValue'].indexOf(value.kind) > -1;\n}\nfunction isStringValue(value) {\n    return value.kind === 'StringValue';\n}\nfunction isBooleanValue(value) {\n    return value.kind === 'BooleanValue';\n}\nfunction isIntValue(value) {\n    return value.kind === 'IntValue';\n}\nfunction isFloatValue(value) {\n    return value.kind === 'FloatValue';\n}\nfunction isVariable(value) {\n    return value.kind === 'Variable';\n}\nfunction isObjectValue(value) {\n    return value.kind === 'ObjectValue';\n}\nfunction isListValue(value) {\n    return value.kind === 'ListValue';\n}\nfunction isEnumValue(value) {\n    return value.kind === 'EnumValue';\n}\nfunction isNullValue(value) {\n    return value.kind === 'NullValue';\n}\nfunction valueToObjectRepresentation(argObj, name, value, variables) {\n    if (isIntValue(value) || isFloatValue(value)) {\n        argObj[name.value] = Number(value.value);\n    }\n    else if (isBooleanValue(value) || isStringValue(value)) {\n        argObj[name.value] = value.value;\n    }\n    else if (isObjectValue(value)) {\n        var nestedArgObj_1 = {};\n        value.fields.map(function (obj) {\n            return valueToObjectRepresentation(nestedArgObj_1, obj.name, obj.value, variables);\n        });\n        argObj[name.value] = nestedArgObj_1;\n    }\n    else if (isVariable(value)) {\n        var variableValue = (variables || {})[value.name.value];\n        argObj[name.value] = variableValue;\n    }\n    else if (isListValue(value)) {\n        argObj[name.value] = value.values.map(function (listValue) {\n            var nestedArgArrayObj = {};\n            valueToObjectRepresentation(nestedArgArrayObj, name, listValue, variables);\n            return nestedArgArrayObj[name.value];\n        });\n    }\n    else if (isEnumValue(value)) {\n        argObj[name.value] = value.value;\n    }\n    else if (isNullValue(value)) {\n        argObj[name.value] = null;\n    }\n    else {\n        throw process.env.NODE_ENV === \"production\" ? new InvariantError(17) : new InvariantError(\"The inline argument \\\"\" + name.value + \"\\\" of kind \\\"\" + value.kind + \"\\\"\" +\n            'is not supported. Use variables instead of inline arguments to ' +\n            'overcome this limitation.');\n    }\n}\nfunction storeKeyNameFromField(field, variables) {\n    var directivesObj = null;\n    if (field.directives) {\n        directivesObj = {};\n        field.directives.forEach(function (directive) {\n            directivesObj[directive.name.value] = {};\n            if (directive.arguments) {\n                directive.arguments.forEach(function (_a) {\n                    var name = _a.name, value = _a.value;\n                    return valueToObjectRepresentation(directivesObj[directive.name.value], name, value, variables);\n                });\n            }\n        });\n    }\n    var argObj = null;\n    if (field.arguments && field.arguments.length) {\n        argObj = {};\n        field.arguments.forEach(function (_a) {\n            var name = _a.name, value = _a.value;\n            return valueToObjectRepresentation(argObj, name, value, variables);\n        });\n    }\n    return getStoreKeyName(field.name.value, argObj, directivesObj);\n}\nvar KNOWN_DIRECTIVES = [\n    'connection',\n    'include',\n    'skip',\n    'client',\n    'rest',\n    'export',\n];\nfunction getStoreKeyName(fieldName, args, directives) {\n    if (directives &&\n        directives['connection'] &&\n        directives['connection']['key']) {\n        if (directives['connection']['filter'] &&\n            directives['connection']['filter'].length > 0) {\n            var filterKeys = directives['connection']['filter']\n                ? directives['connection']['filter']\n                : [];\n            filterKeys.sort();\n            var queryArgs_1 = args;\n            var filteredArgs_1 = {};\n            filterKeys.forEach(function (key) {\n                filteredArgs_1[key] = queryArgs_1[key];\n            });\n            return directives['connection']['key'] + \"(\" + JSON.stringify(filteredArgs_1) + \")\";\n        }\n        else {\n            return directives['connection']['key'];\n        }\n    }\n    var completeFieldName = fieldName;\n    if (args) {\n        var stringifiedArgs = stringify(args);\n        completeFieldName += \"(\" + stringifiedArgs + \")\";\n    }\n    if (directives) {\n        Object.keys(directives).forEach(function (key) {\n            if (KNOWN_DIRECTIVES.indexOf(key) !== -1)\n                return;\n            if (directives[key] && Object.keys(directives[key]).length) {\n                completeFieldName += \"@\" + key + \"(\" + JSON.stringify(directives[key]) + \")\";\n            }\n            else {\n                completeFieldName += \"@\" + key;\n            }\n        });\n    }\n    return completeFieldName;\n}\nfunction argumentsObjectFromField(field, variables) {\n    if (field.arguments && field.arguments.length) {\n        var argObj_1 = {};\n        field.arguments.forEach(function (_a) {\n            var name = _a.name, value = _a.value;\n            return valueToObjectRepresentation(argObj_1, name, value, variables);\n        });\n        return argObj_1;\n    }\n    return null;\n}\nfunction resultKeyNameFromField(field) {\n    return field.alias ? field.alias.value : field.name.value;\n}\nfunction isField(selection) {\n    return selection.kind === 'Field';\n}\nfunction isInlineFragment(selection) {\n    return selection.kind === 'InlineFragment';\n}\nfunction isIdValue(idObject) {\n    return idObject &&\n        idObject.type === 'id' &&\n        typeof idObject.generated === 'boolean';\n}\nfunction toIdValue(idConfig, generated) {\n    if (generated === void 0) { generated = false; }\n    return __assign({ type: 'id', generated: generated }, (typeof idConfig === 'string'\n        ? { id: idConfig, typename: undefined }\n        : idConfig));\n}\nfunction isJsonValue(jsonObject) {\n    return (jsonObject != null &&\n        typeof jsonObject === 'object' &&\n        jsonObject.type === 'json');\n}\nfunction defaultValueFromVariable(node) {\n    throw process.env.NODE_ENV === \"production\" ? new InvariantError(18) : new InvariantError(\"Variable nodes are not supported by valueFromNode\");\n}\nfunction valueFromNode(node, onVariable) {\n    if (onVariable === void 0) { onVariable = defaultValueFromVariable; }\n    switch (node.kind) {\n        case 'Variable':\n            return onVariable(node);\n        case 'NullValue':\n            return null;\n        case 'IntValue':\n            return parseInt(node.value, 10);\n        case 'FloatValue':\n            return parseFloat(node.value);\n        case 'ListValue':\n            return node.values.map(function (v) { return valueFromNode(v, onVariable); });\n        case 'ObjectValue': {\n            var value = {};\n            for (var _i = 0, _a = node.fields; _i < _a.length; _i++) {\n                var field = _a[_i];\n                value[field.name.value] = valueFromNode(field.value, onVariable);\n            }\n            return value;\n        }\n        default:\n            return node.value;\n    }\n}\n\nfunction getDirectiveInfoFromField(field, variables) {\n    if (field.directives && field.directives.length) {\n        var directiveObj_1 = {};\n        field.directives.forEach(function (directive) {\n            directiveObj_1[directive.name.value] = argumentsObjectFromField(directive, variables);\n        });\n        return directiveObj_1;\n    }\n    return null;\n}\nfunction shouldInclude(selection, variables) {\n    if (variables === void 0) { variables = {}; }\n    return getInclusionDirectives(selection.directives).every(function (_a) {\n        var directive = _a.directive, ifArgument = _a.ifArgument;\n        var evaledValue = false;\n        if (ifArgument.value.kind === 'Variable') {\n            evaledValue = variables[ifArgument.value.name.value];\n            process.env.NODE_ENV === \"production\" ? invariant(evaledValue !== void 0, 1) : invariant(evaledValue !== void 0, \"Invalid variable referenced in @\" + directive.name.value + \" directive.\");\n        }\n        else {\n            evaledValue = ifArgument.value.value;\n        }\n        return directive.name.value === 'skip' ? !evaledValue : evaledValue;\n    });\n}\nfunction getDirectiveNames(doc) {\n    var names = [];\n    visit(doc, {\n        Directive: function (node) {\n            names.push(node.name.value);\n        },\n    });\n    return names;\n}\nfunction hasDirectives(names, doc) {\n    return getDirectiveNames(doc).some(function (name) { return names.indexOf(name) > -1; });\n}\nfunction hasClientExports(document) {\n    return (document &&\n        hasDirectives(['client'], document) &&\n        hasDirectives(['export'], document));\n}\nfunction isInclusionDirective(_a) {\n    var value = _a.name.value;\n    return value === 'skip' || value === 'include';\n}\nfunction getInclusionDirectives(directives) {\n    return directives ? directives.filter(isInclusionDirective).map(function (directive) {\n        var directiveArguments = directive.arguments;\n        var directiveName = directive.name.value;\n        process.env.NODE_ENV === \"production\" ? invariant(directiveArguments && directiveArguments.length === 1, 2) : invariant(directiveArguments && directiveArguments.length === 1, \"Incorrect number of arguments for the @\" + directiveName + \" directive.\");\n        var ifArgument = directiveArguments[0];\n        process.env.NODE_ENV === \"production\" ? invariant(ifArgument.name && ifArgument.name.value === 'if', 3) : invariant(ifArgument.name && ifArgument.name.value === 'if', \"Invalid argument for the @\" + directiveName + \" directive.\");\n        var ifValue = ifArgument.value;\n        process.env.NODE_ENV === \"production\" ? invariant(ifValue &&\n            (ifValue.kind === 'Variable' || ifValue.kind === 'BooleanValue'), 4) : invariant(ifValue &&\n            (ifValue.kind === 'Variable' || ifValue.kind === 'BooleanValue'), \"Argument for the @\" + directiveName + \" directive must be a variable or a boolean value.\");\n        return { directive: directive, ifArgument: ifArgument };\n    }) : [];\n}\n\nfunction getFragmentQueryDocument(document, fragmentName) {\n    var actualFragmentName = fragmentName;\n    var fragments = [];\n    document.definitions.forEach(function (definition) {\n        if (definition.kind === 'OperationDefinition') {\n            throw process.env.NODE_ENV === \"production\" ? new InvariantError(5) : new InvariantError(\"Found a \" + definition.operation + \" operation\" + (definition.name ? \" named '\" + definition.name.value + \"'\" : '') + \". \" +\n                'No operations are allowed when using a fragment as a query. Only fragments are allowed.');\n        }\n        if (definition.kind === 'FragmentDefinition') {\n            fragments.push(definition);\n        }\n    });\n    if (typeof actualFragmentName === 'undefined') {\n        process.env.NODE_ENV === \"production\" ? invariant(fragments.length === 1, 6) : invariant(fragments.length === 1, \"Found \" + fragments.length + \" fragments. `fragmentName` must be provided when there is not exactly 1 fragment.\");\n        actualFragmentName = fragments[0].name.value;\n    }\n    var query = __assign(__assign({}, document), { definitions: __spreadArrays([\n            {\n                kind: 'OperationDefinition',\n                operation: 'query',\n                selectionSet: {\n                    kind: 'SelectionSet',\n                    selections: [\n                        {\n                            kind: 'FragmentSpread',\n                            name: {\n                                kind: 'Name',\n                                value: actualFragmentName,\n                            },\n                        },\n                    ],\n                },\n            }\n        ], document.definitions) });\n    return query;\n}\n\nfunction assign(target) {\n    var sources = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        sources[_i - 1] = arguments[_i];\n    }\n    sources.forEach(function (source) {\n        if (typeof source === 'undefined' || source === null) {\n            return;\n        }\n        Object.keys(source).forEach(function (key) {\n            target[key] = source[key];\n        });\n    });\n    return target;\n}\n\nfunction getMutationDefinition(doc) {\n    checkDocument(doc);\n    var mutationDef = doc.definitions.filter(function (definition) {\n        return definition.kind === 'OperationDefinition' &&\n            definition.operation === 'mutation';\n    })[0];\n    process.env.NODE_ENV === \"production\" ? invariant(mutationDef, 7) : invariant(mutationDef, 'Must contain a mutation definition.');\n    return mutationDef;\n}\nfunction checkDocument(doc) {\n    process.env.NODE_ENV === \"production\" ? invariant(doc && doc.kind === 'Document', 8) : invariant(doc && doc.kind === 'Document', \"Expecting a parsed GraphQL document. Perhaps you need to wrap the query string in a \\\"gql\\\" tag? http://docs.apollostack.com/apollo-client/core.html#gql\");\n    var operations = doc.definitions\n        .filter(function (d) { return d.kind !== 'FragmentDefinition'; })\n        .map(function (definition) {\n        if (definition.kind !== 'OperationDefinition') {\n            throw process.env.NODE_ENV === \"production\" ? new InvariantError(9) : new InvariantError(\"Schema type definitions not allowed in queries. Found: \\\"\" + definition.kind + \"\\\"\");\n        }\n        return definition;\n    });\n    process.env.NODE_ENV === \"production\" ? invariant(operations.length <= 1, 10) : invariant(operations.length <= 1, \"Ambiguous GraphQL document: contains \" + operations.length + \" operations\");\n    return doc;\n}\nfunction getOperationDefinition(doc) {\n    checkDocument(doc);\n    return doc.definitions.filter(function (definition) { return definition.kind === 'OperationDefinition'; })[0];\n}\nfunction getOperationDefinitionOrDie(document) {\n    var def = getOperationDefinition(document);\n    process.env.NODE_ENV === \"production\" ? invariant(def, 11) : invariant(def, \"GraphQL document is missing an operation\");\n    return def;\n}\nfunction getOperationName(doc) {\n    return (doc.definitions\n        .filter(function (definition) {\n        return definition.kind === 'OperationDefinition' && definition.name;\n    })\n        .map(function (x) { return x.name.value; })[0] || null);\n}\nfunction getFragmentDefinitions(doc) {\n    return doc.definitions.filter(function (definition) { return definition.kind === 'FragmentDefinition'; });\n}\nfunction getQueryDefinition(doc) {\n    var queryDef = getOperationDefinition(doc);\n    process.env.NODE_ENV === \"production\" ? invariant(queryDef && queryDef.operation === 'query', 12) : invariant(queryDef && queryDef.operation === 'query', 'Must contain a query definition.');\n    return queryDef;\n}\nfunction getFragmentDefinition(doc) {\n    process.env.NODE_ENV === \"production\" ? invariant(doc.kind === 'Document', 13) : invariant(doc.kind === 'Document', \"Expecting a parsed GraphQL document. Perhaps you need to wrap the query string in a \\\"gql\\\" tag? http://docs.apollostack.com/apollo-client/core.html#gql\");\n    process.env.NODE_ENV === \"production\" ? invariant(doc.definitions.length <= 1, 14) : invariant(doc.definitions.length <= 1, 'Fragment must have exactly one definition.');\n    var fragmentDef = doc.definitions[0];\n    process.env.NODE_ENV === \"production\" ? invariant(fragmentDef.kind === 'FragmentDefinition', 15) : invariant(fragmentDef.kind === 'FragmentDefinition', 'Must be a fragment definition.');\n    return fragmentDef;\n}\nfunction getMainDefinition(queryDoc) {\n    checkDocument(queryDoc);\n    var fragmentDefinition;\n    for (var _i = 0, _a = queryDoc.definitions; _i < _a.length; _i++) {\n        var definition = _a[_i];\n        if (definition.kind === 'OperationDefinition') {\n            var operation = definition.operation;\n            if (operation === 'query' ||\n                operation === 'mutation' ||\n                operation === 'subscription') {\n                return definition;\n            }\n        }\n        if (definition.kind === 'FragmentDefinition' && !fragmentDefinition) {\n            fragmentDefinition = definition;\n        }\n    }\n    if (fragmentDefinition) {\n        return fragmentDefinition;\n    }\n    throw process.env.NODE_ENV === \"production\" ? new InvariantError(16) : new InvariantError('Expected a parsed GraphQL query with a query, mutation, subscription, or a fragment.');\n}\nfunction createFragmentMap(fragments) {\n    if (fragments === void 0) { fragments = []; }\n    var symTable = {};\n    fragments.forEach(function (fragment) {\n        symTable[fragment.name.value] = fragment;\n    });\n    return symTable;\n}\nfunction getDefaultValues(definition) {\n    if (definition &&\n        definition.variableDefinitions &&\n        definition.variableDefinitions.length) {\n        var defaultValues = definition.variableDefinitions\n            .filter(function (_a) {\n            var defaultValue = _a.defaultValue;\n            return defaultValue;\n        })\n            .map(function (_a) {\n            var variable = _a.variable, defaultValue = _a.defaultValue;\n            var defaultValueObj = {};\n            valueToObjectRepresentation(defaultValueObj, variable.name, defaultValue);\n            return defaultValueObj;\n        });\n        return assign.apply(void 0, __spreadArrays([{}], defaultValues));\n    }\n    return {};\n}\nfunction variablesInOperation(operation) {\n    var names = new Set();\n    if (operation.variableDefinitions) {\n        for (var _i = 0, _a = operation.variableDefinitions; _i < _a.length; _i++) {\n            var definition = _a[_i];\n            names.add(definition.variable.name.value);\n        }\n    }\n    return names;\n}\n\nfunction filterInPlace(array, test, context) {\n    var target = 0;\n    array.forEach(function (elem, i) {\n        if (test.call(this, elem, i, array)) {\n            array[target++] = elem;\n        }\n    }, context);\n    array.length = target;\n    return array;\n}\n\nvar TYPENAME_FIELD = {\n    kind: 'Field',\n    name: {\n        kind: 'Name',\n        value: '__typename',\n    },\n};\nfunction isEmpty(op, fragments) {\n    return op.selectionSet.selections.every(function (selection) {\n        return selection.kind === 'FragmentSpread' &&\n            isEmpty(fragments[selection.name.value], fragments);\n    });\n}\nfunction nullIfDocIsEmpty(doc) {\n    return isEmpty(getOperationDefinition(doc) || getFragmentDefinition(doc), createFragmentMap(getFragmentDefinitions(doc)))\n        ? null\n        : doc;\n}\nfunction getDirectiveMatcher(directives) {\n    return function directiveMatcher(directive) {\n        return directives.some(function (dir) {\n            return (dir.name && dir.name === directive.name.value) ||\n                (dir.test && dir.test(directive));\n        });\n    };\n}\nfunction removeDirectivesFromDocument(directives, doc) {\n    var variablesInUse = Object.create(null);\n    var variablesToRemove = [];\n    var fragmentSpreadsInUse = Object.create(null);\n    var fragmentSpreadsToRemove = [];\n    var modifiedDoc = nullIfDocIsEmpty(visit(doc, {\n        Variable: {\n            enter: function (node, _key, parent) {\n                if (parent.kind !== 'VariableDefinition') {\n                    variablesInUse[node.name.value] = true;\n                }\n            },\n        },\n        Field: {\n            enter: function (node) {\n                if (directives && node.directives) {\n                    var shouldRemoveField = directives.some(function (directive) { return directive.remove; });\n                    if (shouldRemoveField &&\n                        node.directives &&\n                        node.directives.some(getDirectiveMatcher(directives))) {\n                        if (node.arguments) {\n                            node.arguments.forEach(function (arg) {\n                                if (arg.value.kind === 'Variable') {\n                                    variablesToRemove.push({\n                                        name: arg.value.name.value,\n                                    });\n                                }\n                            });\n                        }\n                        if (node.selectionSet) {\n                            getAllFragmentSpreadsFromSelectionSet(node.selectionSet).forEach(function (frag) {\n                                fragmentSpreadsToRemove.push({\n                                    name: frag.name.value,\n                                });\n                            });\n                        }\n                        return null;\n                    }\n                }\n            },\n        },\n        FragmentSpread: {\n            enter: function (node) {\n                fragmentSpreadsInUse[node.name.value] = true;\n            },\n        },\n        Directive: {\n            enter: function (node) {\n                if (getDirectiveMatcher(directives)(node)) {\n                    return null;\n                }\n            },\n        },\n    }));\n    if (modifiedDoc &&\n        filterInPlace(variablesToRemove, function (v) { return !variablesInUse[v.name]; }).length) {\n        modifiedDoc = removeArgumentsFromDocument(variablesToRemove, modifiedDoc);\n    }\n    if (modifiedDoc &&\n        filterInPlace(fragmentSpreadsToRemove, function (fs) { return !fragmentSpreadsInUse[fs.name]; })\n            .length) {\n        modifiedDoc = removeFragmentSpreadFromDocument(fragmentSpreadsToRemove, modifiedDoc);\n    }\n    return modifiedDoc;\n}\nfunction addTypenameToDocument(doc) {\n    return visit(checkDocument(doc), {\n        SelectionSet: {\n            enter: function (node, _key, parent) {\n                if (parent &&\n                    parent.kind === 'OperationDefinition') {\n                    return;\n                }\n                var selections = node.selections;\n                if (!selections) {\n                    return;\n                }\n                var skip = selections.some(function (selection) {\n                    return (isField(selection) &&\n                        (selection.name.value === '__typename' ||\n                            selection.name.value.lastIndexOf('__', 0) === 0));\n                });\n                if (skip) {\n                    return;\n                }\n                var field = parent;\n                if (isField(field) &&\n                    field.directives &&\n                    field.directives.some(function (d) { return d.name.value === 'export'; })) {\n                    return;\n                }\n                return __assign(__assign({}, node), { selections: __spreadArrays(selections, [TYPENAME_FIELD]) });\n            },\n        },\n    });\n}\nvar connectionRemoveConfig = {\n    test: function (directive) {\n        var willRemove = directive.name.value === 'connection';\n        if (willRemove) {\n            if (!directive.arguments ||\n                !directive.arguments.some(function (arg) { return arg.name.value === 'key'; })) {\n                process.env.NODE_ENV === \"production\" || invariant.warn('Removing an @connection directive even though it does not have a key. ' +\n                    'You may want to use the key parameter to specify a store key.');\n            }\n        }\n        return willRemove;\n    },\n};\nfunction removeConnectionDirectiveFromDocument(doc) {\n    return removeDirectivesFromDocument([connectionRemoveConfig], checkDocument(doc));\n}\nfunction hasDirectivesInSelectionSet(directives, selectionSet, nestedCheck) {\n    if (nestedCheck === void 0) { nestedCheck = true; }\n    return (selectionSet &&\n        selectionSet.selections &&\n        selectionSet.selections.some(function (selection) {\n            return hasDirectivesInSelection(directives, selection, nestedCheck);\n        }));\n}\nfunction hasDirectivesInSelection(directives, selection, nestedCheck) {\n    if (nestedCheck === void 0) { nestedCheck = true; }\n    if (!isField(selection)) {\n        return true;\n    }\n    if (!selection.directives) {\n        return false;\n    }\n    return (selection.directives.some(getDirectiveMatcher(directives)) ||\n        (nestedCheck &&\n            hasDirectivesInSelectionSet(directives, selection.selectionSet, nestedCheck)));\n}\nfunction getDirectivesFromDocument(directives, doc) {\n    checkDocument(doc);\n    var parentPath;\n    return nullIfDocIsEmpty(visit(doc, {\n        SelectionSet: {\n            enter: function (node, _key, _parent, path) {\n                var currentPath = path.join('-');\n                if (!parentPath ||\n                    currentPath === parentPath ||\n                    !currentPath.startsWith(parentPath)) {\n                    if (node.selections) {\n                        var selectionsWithDirectives = node.selections.filter(function (selection) { return hasDirectivesInSelection(directives, selection); });\n                        if (hasDirectivesInSelectionSet(directives, node, false)) {\n                            parentPath = currentPath;\n                        }\n                        return __assign(__assign({}, node), { selections: selectionsWithDirectives });\n                    }\n                    else {\n                        return null;\n                    }\n                }\n            },\n        },\n    }));\n}\nfunction getArgumentMatcher(config) {\n    return function argumentMatcher(argument) {\n        return config.some(function (aConfig) {\n            return argument.value &&\n                argument.value.kind === 'Variable' &&\n                argument.value.name &&\n                (aConfig.name === argument.value.name.value ||\n                    (aConfig.test && aConfig.test(argument)));\n        });\n    };\n}\nfunction removeArgumentsFromDocument(config, doc) {\n    var argMatcher = getArgumentMatcher(config);\n    return nullIfDocIsEmpty(visit(doc, {\n        OperationDefinition: {\n            enter: function (node) {\n                return __assign(__assign({}, node), { variableDefinitions: node.variableDefinitions.filter(function (varDef) {\n                        return !config.some(function (arg) { return arg.name === varDef.variable.name.value; });\n                    }) });\n            },\n        },\n        Field: {\n            enter: function (node) {\n                var shouldRemoveField = config.some(function (argConfig) { return argConfig.remove; });\n                if (shouldRemoveField) {\n                    var argMatchCount_1 = 0;\n                    node.arguments.forEach(function (arg) {\n                        if (argMatcher(arg)) {\n                            argMatchCount_1 += 1;\n                        }\n                    });\n                    if (argMatchCount_1 === 1) {\n                        return null;\n                    }\n                }\n            },\n        },\n        Argument: {\n            enter: function (node) {\n                if (argMatcher(node)) {\n                    return null;\n                }\n            },\n        },\n    }));\n}\nfunction removeFragmentSpreadFromDocument(config, doc) {\n    function enter(node) {\n        if (config.some(function (def) { return def.name === node.name.value; })) {\n            return null;\n        }\n    }\n    return nullIfDocIsEmpty(visit(doc, {\n        FragmentSpread: { enter: enter },\n        FragmentDefinition: { enter: enter },\n    }));\n}\nfunction getAllFragmentSpreadsFromSelectionSet(selectionSet) {\n    var allFragments = [];\n    selectionSet.selections.forEach(function (selection) {\n        if ((isField(selection) || isInlineFragment(selection)) &&\n            selection.selectionSet) {\n            getAllFragmentSpreadsFromSelectionSet(selection.selectionSet).forEach(function (frag) { return allFragments.push(frag); });\n        }\n        else if (selection.kind === 'FragmentSpread') {\n            allFragments.push(selection);\n        }\n    });\n    return allFragments;\n}\nfunction buildQueryFromSelectionSet(document) {\n    var definition = getMainDefinition(document);\n    var definitionOperation = definition.operation;\n    if (definitionOperation === 'query') {\n        return document;\n    }\n    var modifiedDoc = visit(document, {\n        OperationDefinition: {\n            enter: function (node) {\n                return __assign(__assign({}, node), { operation: 'query' });\n            },\n        },\n    });\n    return modifiedDoc;\n}\nfunction removeClientSetsFromDocument(document) {\n    checkDocument(document);\n    var modifiedDoc = removeDirectivesFromDocument([\n        {\n            test: function (directive) { return directive.name.value === 'client'; },\n            remove: true,\n        },\n    ], document);\n    if (modifiedDoc) {\n        modifiedDoc = visit(modifiedDoc, {\n            FragmentDefinition: {\n                enter: function (node) {\n                    if (node.selectionSet) {\n                        var isTypenameOnly = node.selectionSet.selections.every(function (selection) {\n                            return isField(selection) && selection.name.value === '__typename';\n                        });\n                        if (isTypenameOnly) {\n                            return null;\n                        }\n                    }\n                },\n            },\n        });\n    }\n    return modifiedDoc;\n}\n\nvar canUseWeakMap = typeof WeakMap === 'function' && !(typeof navigator === 'object' &&\n    navigator.product === 'ReactNative');\n\nvar toString = Object.prototype.toString;\nfunction cloneDeep(value) {\n    return cloneDeepHelper(value, new Map());\n}\nfunction cloneDeepHelper(val, seen) {\n    switch (toString.call(val)) {\n        case \"[object Array]\": {\n            if (seen.has(val))\n                return seen.get(val);\n            var copy_1 = val.slice(0);\n            seen.set(val, copy_1);\n            copy_1.forEach(function (child, i) {\n                copy_1[i] = cloneDeepHelper(child, seen);\n            });\n            return copy_1;\n        }\n        case \"[object Object]\": {\n            if (seen.has(val))\n                return seen.get(val);\n            var copy_2 = Object.create(Object.getPrototypeOf(val));\n            seen.set(val, copy_2);\n            Object.keys(val).forEach(function (key) {\n                copy_2[key] = cloneDeepHelper(val[key], seen);\n            });\n            return copy_2;\n        }\n        default:\n            return val;\n    }\n}\n\nfunction getEnv() {\n    if (typeof process !== 'undefined' && process.env.NODE_ENV) {\n        return process.env.NODE_ENV;\n    }\n    return 'development';\n}\nfunction isEnv(env) {\n    return getEnv() === env;\n}\nfunction isProduction() {\n    return isEnv('production') === true;\n}\nfunction isDevelopment() {\n    return isEnv('development') === true;\n}\nfunction isTest() {\n    return isEnv('test') === true;\n}\n\nfunction tryFunctionOrLogError(f) {\n    try {\n        return f();\n    }\n    catch (e) {\n        if (console.error) {\n            console.error(e);\n        }\n    }\n}\nfunction graphQLResultHasError(result) {\n    return result.errors && result.errors.length;\n}\n\nfunction deepFreeze(o) {\n    Object.freeze(o);\n    Object.getOwnPropertyNames(o).forEach(function (prop) {\n        if (o[prop] !== null &&\n            (typeof o[prop] === 'object' || typeof o[prop] === 'function') &&\n            !Object.isFrozen(o[prop])) {\n            deepFreeze(o[prop]);\n        }\n    });\n    return o;\n}\nfunction maybeDeepFreeze(obj) {\n    if (isDevelopment() || isTest()) {\n        var symbolIsPolyfilled = typeof Symbol === 'function' && typeof Symbol('') === 'string';\n        if (!symbolIsPolyfilled) {\n            return deepFreeze(obj);\n        }\n    }\n    return obj;\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction mergeDeep() {\n    var sources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        sources[_i] = arguments[_i];\n    }\n    return mergeDeepArray(sources);\n}\nfunction mergeDeepArray(sources) {\n    var target = sources[0] || {};\n    var count = sources.length;\n    if (count > 1) {\n        var pastCopies = [];\n        target = shallowCopyForMerge(target, pastCopies);\n        for (var i = 1; i < count; ++i) {\n            target = mergeHelper(target, sources[i], pastCopies);\n        }\n    }\n    return target;\n}\nfunction isObject(obj) {\n    return obj !== null && typeof obj === 'object';\n}\nfunction mergeHelper(target, source, pastCopies) {\n    if (isObject(source) && isObject(target)) {\n        if (Object.isExtensible && !Object.isExtensible(target)) {\n            target = shallowCopyForMerge(target, pastCopies);\n        }\n        Object.keys(source).forEach(function (sourceKey) {\n            var sourceValue = source[sourceKey];\n            if (hasOwnProperty.call(target, sourceKey)) {\n                var targetValue = target[sourceKey];\n                if (sourceValue !== targetValue) {\n                    target[sourceKey] = mergeHelper(shallowCopyForMerge(targetValue, pastCopies), sourceValue, pastCopies);\n                }\n            }\n            else {\n                target[sourceKey] = sourceValue;\n            }\n        });\n        return target;\n    }\n    return source;\n}\nfunction shallowCopyForMerge(value, pastCopies) {\n    if (value !== null &&\n        typeof value === 'object' &&\n        pastCopies.indexOf(value) < 0) {\n        if (Array.isArray(value)) {\n            value = value.slice(0);\n        }\n        else {\n            value = __assign({ __proto__: Object.getPrototypeOf(value) }, value);\n        }\n        pastCopies.push(value);\n    }\n    return value;\n}\n\nvar haveWarned = Object.create({});\nfunction warnOnceInDevelopment(msg, type) {\n    if (type === void 0) { type = 'warn'; }\n    if (!isProduction() && !haveWarned[msg]) {\n        if (!isTest()) {\n            haveWarned[msg] = true;\n        }\n        if (type === 'error') {\n            console.error(msg);\n        }\n        else {\n            console.warn(msg);\n        }\n    }\n}\n\nfunction stripSymbols(data) {\n    return JSON.parse(JSON.stringify(data));\n}\n\nexport { addTypenameToDocument, argumentsObjectFromField, assign, buildQueryFromSelectionSet, canUseWeakMap, checkDocument, cloneDeep, createFragmentMap, getDefaultValues, getDirectiveInfoFromField, getDirectiveNames, getDirectivesFromDocument, getEnv, getFragmentDefinition, getFragmentDefinitions, getFragmentQueryDocument, getInclusionDirectives, getMainDefinition, getMutationDefinition, getOperationDefinition, getOperationDefinitionOrDie, getOperationName, getQueryDefinition, getStoreKeyName, graphQLResultHasError, hasClientExports, hasDirectives, isDevelopment, isEnv, isField, isIdValue, isInlineFragment, isJsonValue, isNumberValue, isProduction, isScalarValue, isTest, maybeDeepFreeze, mergeDeep, mergeDeepArray, removeArgumentsFromDocument, removeClientSetsFromDocument, removeConnectionDirectiveFromDocument, removeDirectivesFromDocument, removeFragmentSpreadFromDocument, resultKeyNameFromField, shouldInclude, storeKeyNameFromField, stripSymbols, toIdValue, tryFunctionOrLogError, valueFromNode, valueToObjectRepresentation, variablesInOperation, warnOnceInDevelopment };\n//# sourceMappingURL=bundle.esm.js.map\n","export default function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n","import zenObservable from 'zen-observable';\n\nvar Observable = zenObservable;\n\nexport default Observable;\nexport { Observable };\n//# sourceMappingURL=bundle.esm.js.map\n","/* global window */\nimport ponyfill from './ponyfill.js';\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;\n","import { __extends, __assign, __awaiter, __generator } from 'tslib';\nimport { getOperationDefinition, isEqual, tryFunctionOrLogError, cloneDeep, mergeDeep, hasDirectives, removeClientSetsFromDocument, buildQueryFromSelectionSet, getMainDefinition, getFragmentDefinitions, createFragmentMap, mergeDeepArray, resultKeyNameFromField, argumentsObjectFromField, shouldInclude, isField, isInlineFragment, canUseWeakMap, graphQLResultHasError, removeConnectionDirectiveFromDocument, hasClientExports, getDefaultValues, getOperationName } from 'apollo-utilities';\nimport { Observable as Observable$1, execute, ApolloLink } from 'apollo-link';\nimport $$observable from 'symbol-observable';\nimport { InvariantError, invariant } from 'ts-invariant';\nimport { visit, BREAK } from 'graphql/language/visitor';\n\nvar NetworkStatus;\n(function (NetworkStatus) {\n    NetworkStatus[NetworkStatus[\"loading\"] = 1] = \"loading\";\n    NetworkStatus[NetworkStatus[\"setVariables\"] = 2] = \"setVariables\";\n    NetworkStatus[NetworkStatus[\"fetchMore\"] = 3] = \"fetchMore\";\n    NetworkStatus[NetworkStatus[\"refetch\"] = 4] = \"refetch\";\n    NetworkStatus[NetworkStatus[\"poll\"] = 6] = \"poll\";\n    NetworkStatus[NetworkStatus[\"ready\"] = 7] = \"ready\";\n    NetworkStatus[NetworkStatus[\"error\"] = 8] = \"error\";\n})(NetworkStatus || (NetworkStatus = {}));\nfunction isNetworkRequestInFlight(networkStatus) {\n    return networkStatus < 7;\n}\n\nvar Observable = (function (_super) {\n    __extends(Observable, _super);\n    function Observable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Observable.prototype[$$observable] = function () {\n        return this;\n    };\n    Observable.prototype['@@observable'] = function () {\n        return this;\n    };\n    return Observable;\n}(Observable$1));\n\nfunction isNonEmptyArray(value) {\n    return Array.isArray(value) && value.length > 0;\n}\n\nfunction isApolloError(err) {\n    return err.hasOwnProperty('graphQLErrors');\n}\nvar generateErrorMessage = function (err) {\n    var message = '';\n    if (isNonEmptyArray(err.graphQLErrors)) {\n        err.graphQLErrors.forEach(function (graphQLError) {\n            var errorMessage = graphQLError\n                ? graphQLError.message\n                : 'Error message not found.';\n            message += \"GraphQL error: \" + errorMessage + \"\\n\";\n        });\n    }\n    if (err.networkError) {\n        message += 'Network error: ' + err.networkError.message + '\\n';\n    }\n    message = message.replace(/\\n$/, '');\n    return message;\n};\nvar ApolloError = (function (_super) {\n    __extends(ApolloError, _super);\n    function ApolloError(_a) {\n        var graphQLErrors = _a.graphQLErrors, networkError = _a.networkError, errorMessage = _a.errorMessage, extraInfo = _a.extraInfo;\n        var _this = _super.call(this, errorMessage) || this;\n        _this.graphQLErrors = graphQLErrors || [];\n        _this.networkError = networkError || null;\n        if (!errorMessage) {\n            _this.message = generateErrorMessage(_this);\n        }\n        else {\n            _this.message = errorMessage;\n        }\n        _this.extraInfo = extraInfo;\n        _this.__proto__ = ApolloError.prototype;\n        return _this;\n    }\n    return ApolloError;\n}(Error));\n\nvar FetchType;\n(function (FetchType) {\n    FetchType[FetchType[\"normal\"] = 1] = \"normal\";\n    FetchType[FetchType[\"refetch\"] = 2] = \"refetch\";\n    FetchType[FetchType[\"poll\"] = 3] = \"poll\";\n})(FetchType || (FetchType = {}));\n\nvar hasError = function (storeValue, policy) {\n    if (policy === void 0) { policy = 'none'; }\n    return storeValue && (storeValue.networkError ||\n        (policy === 'none' && isNonEmptyArray(storeValue.graphQLErrors)));\n};\nvar ObservableQuery = (function (_super) {\n    __extends(ObservableQuery, _super);\n    function ObservableQuery(_a) {\n        var queryManager = _a.queryManager, options = _a.options, _b = _a.shouldSubscribe, shouldSubscribe = _b === void 0 ? true : _b;\n        var _this = _super.call(this, function (observer) {\n            return _this.onSubscribe(observer);\n        }) || this;\n        _this.observers = new Set();\n        _this.subscriptions = new Set();\n        _this.isTornDown = false;\n        _this.options = options;\n        _this.variables = options.variables || {};\n        _this.queryId = queryManager.generateQueryId();\n        _this.shouldSubscribe = shouldSubscribe;\n        var opDef = getOperationDefinition(options.query);\n        _this.queryName = opDef && opDef.name && opDef.name.value;\n        _this.queryManager = queryManager;\n        return _this;\n    }\n    ObservableQuery.prototype.result = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var observer = {\n                next: function (result) {\n                    resolve(result);\n                    _this.observers.delete(observer);\n                    if (!_this.observers.size) {\n                        _this.queryManager.removeQuery(_this.queryId);\n                    }\n                    setTimeout(function () {\n                        subscription.unsubscribe();\n                    }, 0);\n                },\n                error: reject,\n            };\n            var subscription = _this.subscribe(observer);\n        });\n    };\n    ObservableQuery.prototype.currentResult = function () {\n        var result = this.getCurrentResult();\n        if (result.data === undefined) {\n            result.data = {};\n        }\n        return result;\n    };\n    ObservableQuery.prototype.getCurrentResult = function () {\n        if (this.isTornDown) {\n            var lastResult = this.lastResult;\n            return {\n                data: !this.lastError && lastResult && lastResult.data || void 0,\n                error: this.lastError,\n                loading: false,\n                networkStatus: NetworkStatus.error,\n            };\n        }\n        var _a = this.queryManager.getCurrentQueryResult(this), data = _a.data, partial = _a.partial;\n        var queryStoreValue = this.queryManager.queryStore.get(this.queryId);\n        var result;\n        var fetchPolicy = this.options.fetchPolicy;\n        var isNetworkFetchPolicy = fetchPolicy === 'network-only' ||\n            fetchPolicy === 'no-cache';\n        if (queryStoreValue) {\n            var networkStatus = queryStoreValue.networkStatus;\n            if (hasError(queryStoreValue, this.options.errorPolicy)) {\n                return {\n                    data: void 0,\n                    loading: false,\n                    networkStatus: networkStatus,\n                    error: new ApolloError({\n                        graphQLErrors: queryStoreValue.graphQLErrors,\n                        networkError: queryStoreValue.networkError,\n                    }),\n                };\n            }\n            if (queryStoreValue.variables) {\n                this.options.variables = __assign(__assign({}, this.options.variables), queryStoreValue.variables);\n                this.variables = this.options.variables;\n            }\n            result = {\n                data: data,\n                loading: isNetworkRequestInFlight(networkStatus),\n                networkStatus: networkStatus,\n            };\n            if (queryStoreValue.graphQLErrors && this.options.errorPolicy === 'all') {\n                result.errors = queryStoreValue.graphQLErrors;\n            }\n        }\n        else {\n            var loading = isNetworkFetchPolicy ||\n                (partial && fetchPolicy !== 'cache-only');\n            result = {\n                data: data,\n                loading: loading,\n                networkStatus: loading ? NetworkStatus.loading : NetworkStatus.ready,\n            };\n        }\n        if (!partial) {\n            this.updateLastResult(__assign(__assign({}, result), { stale: false }));\n        }\n        return __assign(__assign({}, result), { partial: partial });\n    };\n    ObservableQuery.prototype.isDifferentFromLastResult = function (newResult) {\n        var snapshot = this.lastResultSnapshot;\n        return !(snapshot &&\n            newResult &&\n            snapshot.networkStatus === newResult.networkStatus &&\n            snapshot.stale === newResult.stale &&\n            isEqual(snapshot.data, newResult.data));\n    };\n    ObservableQuery.prototype.getLastResult = function () {\n        return this.lastResult;\n    };\n    ObservableQuery.prototype.getLastError = function () {\n        return this.lastError;\n    };\n    ObservableQuery.prototype.resetLastResults = function () {\n        delete this.lastResult;\n        delete this.lastResultSnapshot;\n        delete this.lastError;\n        this.isTornDown = false;\n    };\n    ObservableQuery.prototype.resetQueryStoreErrors = function () {\n        var queryStore = this.queryManager.queryStore.get(this.queryId);\n        if (queryStore) {\n            queryStore.networkError = null;\n            queryStore.graphQLErrors = [];\n        }\n    };\n    ObservableQuery.prototype.refetch = function (variables) {\n        var fetchPolicy = this.options.fetchPolicy;\n        if (fetchPolicy === 'cache-only') {\n            return Promise.reject(process.env.NODE_ENV === \"production\" ? new InvariantError(3) : new InvariantError('cache-only fetchPolicy option should not be used together with query refetch.'));\n        }\n        if (fetchPolicy !== 'no-cache' &&\n            fetchPolicy !== 'cache-and-network') {\n            fetchPolicy = 'network-only';\n        }\n        if (!isEqual(this.variables, variables)) {\n            this.variables = __assign(__assign({}, this.variables), variables);\n        }\n        if (!isEqual(this.options.variables, this.variables)) {\n            this.options.variables = __assign(__assign({}, this.options.variables), this.variables);\n        }\n        return this.queryManager.fetchQuery(this.queryId, __assign(__assign({}, this.options), { fetchPolicy: fetchPolicy }), FetchType.refetch);\n    };\n    ObservableQuery.prototype.fetchMore = function (fetchMoreOptions) {\n        var _this = this;\n        process.env.NODE_ENV === \"production\" ? invariant(fetchMoreOptions.updateQuery, 4) : invariant(fetchMoreOptions.updateQuery, 'updateQuery option is required. This function defines how to update the query data with the new results.');\n        var combinedOptions = __assign(__assign({}, (fetchMoreOptions.query ? fetchMoreOptions : __assign(__assign(__assign({}, this.options), fetchMoreOptions), { variables: __assign(__assign({}, this.variables), fetchMoreOptions.variables) }))), { fetchPolicy: 'network-only' });\n        var qid = this.queryManager.generateQueryId();\n        return this.queryManager\n            .fetchQuery(qid, combinedOptions, FetchType.normal, this.queryId)\n            .then(function (fetchMoreResult) {\n            _this.updateQuery(function (previousResult) {\n                return fetchMoreOptions.updateQuery(previousResult, {\n                    fetchMoreResult: fetchMoreResult.data,\n                    variables: combinedOptions.variables,\n                });\n            });\n            _this.queryManager.stopQuery(qid);\n            return fetchMoreResult;\n        }, function (error) {\n            _this.queryManager.stopQuery(qid);\n            throw error;\n        });\n    };\n    ObservableQuery.prototype.subscribeToMore = function (options) {\n        var _this = this;\n        var subscription = this.queryManager\n            .startGraphQLSubscription({\n            query: options.document,\n            variables: options.variables,\n        })\n            .subscribe({\n            next: function (subscriptionData) {\n                var updateQuery = options.updateQuery;\n                if (updateQuery) {\n                    _this.updateQuery(function (previous, _a) {\n                        var variables = _a.variables;\n                        return updateQuery(previous, {\n                            subscriptionData: subscriptionData,\n                            variables: variables,\n                        });\n                    });\n                }\n            },\n            error: function (err) {\n                if (options.onError) {\n                    options.onError(err);\n                    return;\n                }\n                process.env.NODE_ENV === \"production\" || invariant.error('Unhandled GraphQL subscription error', err);\n            },\n        });\n        this.subscriptions.add(subscription);\n        return function () {\n            if (_this.subscriptions.delete(subscription)) {\n                subscription.unsubscribe();\n            }\n        };\n    };\n    ObservableQuery.prototype.setOptions = function (opts) {\n        var oldFetchPolicy = this.options.fetchPolicy;\n        this.options = __assign(__assign({}, this.options), opts);\n        if (opts.pollInterval) {\n            this.startPolling(opts.pollInterval);\n        }\n        else if (opts.pollInterval === 0) {\n            this.stopPolling();\n        }\n        var fetchPolicy = opts.fetchPolicy;\n        return this.setVariables(this.options.variables, oldFetchPolicy !== fetchPolicy && (oldFetchPolicy === 'cache-only' ||\n            oldFetchPolicy === 'standby' ||\n            fetchPolicy === 'network-only'), opts.fetchResults);\n    };\n    ObservableQuery.prototype.setVariables = function (variables, tryFetch, fetchResults) {\n        if (tryFetch === void 0) { tryFetch = false; }\n        if (fetchResults === void 0) { fetchResults = true; }\n        this.isTornDown = false;\n        variables = variables || this.variables;\n        if (!tryFetch && isEqual(variables, this.variables)) {\n            return this.observers.size && fetchResults\n                ? this.result()\n                : Promise.resolve();\n        }\n        this.variables = this.options.variables = variables;\n        if (!this.observers.size) {\n            return Promise.resolve();\n        }\n        return this.queryManager.fetchQuery(this.queryId, this.options);\n    };\n    ObservableQuery.prototype.updateQuery = function (mapFn) {\n        var queryManager = this.queryManager;\n        var _a = queryManager.getQueryWithPreviousResult(this.queryId), previousResult = _a.previousResult, variables = _a.variables, document = _a.document;\n        var newResult = tryFunctionOrLogError(function () {\n            return mapFn(previousResult, { variables: variables });\n        });\n        if (newResult) {\n            queryManager.dataStore.markUpdateQueryResult(document, variables, newResult);\n            queryManager.broadcastQueries();\n        }\n    };\n    ObservableQuery.prototype.stopPolling = function () {\n        this.queryManager.stopPollingQuery(this.queryId);\n        this.options.pollInterval = undefined;\n    };\n    ObservableQuery.prototype.startPolling = function (pollInterval) {\n        assertNotCacheFirstOrOnly(this);\n        this.options.pollInterval = pollInterval;\n        this.queryManager.startPollingQuery(this.options, this.queryId);\n    };\n    ObservableQuery.prototype.updateLastResult = function (newResult) {\n        var previousResult = this.lastResult;\n        this.lastResult = newResult;\n        this.lastResultSnapshot = this.queryManager.assumeImmutableResults\n            ? newResult\n            : cloneDeep(newResult);\n        return previousResult;\n    };\n    ObservableQuery.prototype.onSubscribe = function (observer) {\n        var _this = this;\n        try {\n            var subObserver = observer._subscription._observer;\n            if (subObserver && !subObserver.error) {\n                subObserver.error = defaultSubscriptionObserverErrorCallback;\n            }\n        }\n        catch (_a) { }\n        var first = !this.observers.size;\n        this.observers.add(observer);\n        if (observer.next && this.lastResult)\n            observer.next(this.lastResult);\n        if (observer.error && this.lastError)\n            observer.error(this.lastError);\n        if (first) {\n            this.setUpQuery();\n        }\n        return function () {\n            if (_this.observers.delete(observer) && !_this.observers.size) {\n                _this.tearDownQuery();\n            }\n        };\n    };\n    ObservableQuery.prototype.setUpQuery = function () {\n        var _this = this;\n        var _a = this, queryManager = _a.queryManager, queryId = _a.queryId;\n        if (this.shouldSubscribe) {\n            queryManager.addObservableQuery(queryId, this);\n        }\n        if (this.options.pollInterval) {\n            assertNotCacheFirstOrOnly(this);\n            queryManager.startPollingQuery(this.options, queryId);\n        }\n        var onError = function (error) {\n            _this.updateLastResult(__assign(__assign({}, _this.lastResult), { errors: error.graphQLErrors, networkStatus: NetworkStatus.error, loading: false }));\n            iterateObserversSafely(_this.observers, 'error', _this.lastError = error);\n        };\n        queryManager.observeQuery(queryId, this.options, {\n            next: function (result) {\n                if (_this.lastError || _this.isDifferentFromLastResult(result)) {\n                    var previousResult_1 = _this.updateLastResult(result);\n                    var _a = _this.options, query_1 = _a.query, variables = _a.variables, fetchPolicy_1 = _a.fetchPolicy;\n                    if (queryManager.transform(query_1).hasClientExports) {\n                        queryManager.getLocalState().addExportedVariables(query_1, variables).then(function (variables) {\n                            var previousVariables = _this.variables;\n                            _this.variables = _this.options.variables = variables;\n                            if (!result.loading &&\n                                previousResult_1 &&\n                                fetchPolicy_1 !== 'cache-only' &&\n                                queryManager.transform(query_1).serverQuery &&\n                                !isEqual(previousVariables, variables)) {\n                                _this.refetch();\n                            }\n                            else {\n                                iterateObserversSafely(_this.observers, 'next', result);\n                            }\n                        });\n                    }\n                    else {\n                        iterateObserversSafely(_this.observers, 'next', result);\n                    }\n                }\n            },\n            error: onError,\n        }).catch(onError);\n    };\n    ObservableQuery.prototype.tearDownQuery = function () {\n        var queryManager = this.queryManager;\n        this.isTornDown = true;\n        queryManager.stopPollingQuery(this.queryId);\n        this.subscriptions.forEach(function (sub) { return sub.unsubscribe(); });\n        this.subscriptions.clear();\n        queryManager.removeObservableQuery(this.queryId);\n        queryManager.stopQuery(this.queryId);\n        this.observers.clear();\n    };\n    return ObservableQuery;\n}(Observable));\nfunction defaultSubscriptionObserverErrorCallback(error) {\n    process.env.NODE_ENV === \"production\" || invariant.error('Unhandled error', error.message, error.stack);\n}\nfunction iterateObserversSafely(observers, method, argument) {\n    var observersWithMethod = [];\n    observers.forEach(function (obs) { return obs[method] && observersWithMethod.push(obs); });\n    observersWithMethod.forEach(function (obs) { return obs[method](argument); });\n}\nfunction assertNotCacheFirstOrOnly(obsQuery) {\n    var fetchPolicy = obsQuery.options.fetchPolicy;\n    process.env.NODE_ENV === \"production\" ? invariant(fetchPolicy !== 'cache-first' && fetchPolicy !== 'cache-only', 5) : invariant(fetchPolicy !== 'cache-first' && fetchPolicy !== 'cache-only', 'Queries that specify the cache-first and cache-only fetchPolicies cannot also be polling queries.');\n}\n\nvar MutationStore = (function () {\n    function MutationStore() {\n        this.store = {};\n    }\n    MutationStore.prototype.getStore = function () {\n        return this.store;\n    };\n    MutationStore.prototype.get = function (mutationId) {\n        return this.store[mutationId];\n    };\n    MutationStore.prototype.initMutation = function (mutationId, mutation, variables) {\n        this.store[mutationId] = {\n            mutation: mutation,\n            variables: variables || {},\n            loading: true,\n            error: null,\n        };\n    };\n    MutationStore.prototype.markMutationError = function (mutationId, error) {\n        var mutation = this.store[mutationId];\n        if (mutation) {\n            mutation.loading = false;\n            mutation.error = error;\n        }\n    };\n    MutationStore.prototype.markMutationResult = function (mutationId) {\n        var mutation = this.store[mutationId];\n        if (mutation) {\n            mutation.loading = false;\n            mutation.error = null;\n        }\n    };\n    MutationStore.prototype.reset = function () {\n        this.store = {};\n    };\n    return MutationStore;\n}());\n\nvar QueryStore = (function () {\n    function QueryStore() {\n        this.store = {};\n    }\n    QueryStore.prototype.getStore = function () {\n        return this.store;\n    };\n    QueryStore.prototype.get = function (queryId) {\n        return this.store[queryId];\n    };\n    QueryStore.prototype.initQuery = function (query) {\n        var previousQuery = this.store[query.queryId];\n        process.env.NODE_ENV === \"production\" ? invariant(!previousQuery ||\n            previousQuery.document === query.document ||\n            isEqual(previousQuery.document, query.document), 19) : invariant(!previousQuery ||\n            previousQuery.document === query.document ||\n            isEqual(previousQuery.document, query.document), 'Internal Error: may not update existing query string in store');\n        var isSetVariables = false;\n        var previousVariables = null;\n        if (query.storePreviousVariables &&\n            previousQuery &&\n            previousQuery.networkStatus !== NetworkStatus.loading) {\n            if (!isEqual(previousQuery.variables, query.variables)) {\n                isSetVariables = true;\n                previousVariables = previousQuery.variables;\n            }\n        }\n        var networkStatus;\n        if (isSetVariables) {\n            networkStatus = NetworkStatus.setVariables;\n        }\n        else if (query.isPoll) {\n            networkStatus = NetworkStatus.poll;\n        }\n        else if (query.isRefetch) {\n            networkStatus = NetworkStatus.refetch;\n        }\n        else {\n            networkStatus = NetworkStatus.loading;\n        }\n        var graphQLErrors = [];\n        if (previousQuery && previousQuery.graphQLErrors) {\n            graphQLErrors = previousQuery.graphQLErrors;\n        }\n        this.store[query.queryId] = {\n            document: query.document,\n            variables: query.variables,\n            previousVariables: previousVariables,\n            networkError: null,\n            graphQLErrors: graphQLErrors,\n            networkStatus: networkStatus,\n            metadata: query.metadata,\n        };\n        if (typeof query.fetchMoreForQueryId === 'string' &&\n            this.store[query.fetchMoreForQueryId]) {\n            this.store[query.fetchMoreForQueryId].networkStatus =\n                NetworkStatus.fetchMore;\n        }\n    };\n    QueryStore.prototype.markQueryResult = function (queryId, result, fetchMoreForQueryId) {\n        if (!this.store || !this.store[queryId])\n            return;\n        this.store[queryId].networkError = null;\n        this.store[queryId].graphQLErrors = isNonEmptyArray(result.errors) ? result.errors : [];\n        this.store[queryId].previousVariables = null;\n        this.store[queryId].networkStatus = NetworkStatus.ready;\n        if (typeof fetchMoreForQueryId === 'string' &&\n            this.store[fetchMoreForQueryId]) {\n            this.store[fetchMoreForQueryId].networkStatus = NetworkStatus.ready;\n        }\n    };\n    QueryStore.prototype.markQueryError = function (queryId, error, fetchMoreForQueryId) {\n        if (!this.store || !this.store[queryId])\n            return;\n        this.store[queryId].networkError = error;\n        this.store[queryId].networkStatus = NetworkStatus.error;\n        if (typeof fetchMoreForQueryId === 'string') {\n            this.markQueryResultClient(fetchMoreForQueryId, true);\n        }\n    };\n    QueryStore.prototype.markQueryResultClient = function (queryId, complete) {\n        var storeValue = this.store && this.store[queryId];\n        if (storeValue) {\n            storeValue.networkError = null;\n            storeValue.previousVariables = null;\n            if (complete) {\n                storeValue.networkStatus = NetworkStatus.ready;\n            }\n        }\n    };\n    QueryStore.prototype.stopQuery = function (queryId) {\n        delete this.store[queryId];\n    };\n    QueryStore.prototype.reset = function (observableQueryIds) {\n        var _this = this;\n        Object.keys(this.store).forEach(function (queryId) {\n            if (observableQueryIds.indexOf(queryId) < 0) {\n                _this.stopQuery(queryId);\n            }\n            else {\n                _this.store[queryId].networkStatus = NetworkStatus.loading;\n            }\n        });\n    };\n    return QueryStore;\n}());\n\nfunction capitalizeFirstLetter(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nvar LocalState = (function () {\n    function LocalState(_a) {\n        var cache = _a.cache, client = _a.client, resolvers = _a.resolvers, fragmentMatcher = _a.fragmentMatcher;\n        this.cache = cache;\n        if (client) {\n            this.client = client;\n        }\n        if (resolvers) {\n            this.addResolvers(resolvers);\n        }\n        if (fragmentMatcher) {\n            this.setFragmentMatcher(fragmentMatcher);\n        }\n    }\n    LocalState.prototype.addResolvers = function (resolvers) {\n        var _this = this;\n        this.resolvers = this.resolvers || {};\n        if (Array.isArray(resolvers)) {\n            resolvers.forEach(function (resolverGroup) {\n                _this.resolvers = mergeDeep(_this.resolvers, resolverGroup);\n            });\n        }\n        else {\n            this.resolvers = mergeDeep(this.resolvers, resolvers);\n        }\n    };\n    LocalState.prototype.setResolvers = function (resolvers) {\n        this.resolvers = {};\n        this.addResolvers(resolvers);\n    };\n    LocalState.prototype.getResolvers = function () {\n        return this.resolvers || {};\n    };\n    LocalState.prototype.runResolvers = function (_a) {\n        var document = _a.document, remoteResult = _a.remoteResult, context = _a.context, variables = _a.variables, _b = _a.onlyRunForcedResolvers, onlyRunForcedResolvers = _b === void 0 ? false : _b;\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_c) {\n                if (document) {\n                    return [2, this.resolveDocument(document, remoteResult.data, context, variables, this.fragmentMatcher, onlyRunForcedResolvers).then(function (localResult) { return (__assign(__assign({}, remoteResult), { data: localResult.result })); })];\n                }\n                return [2, remoteResult];\n            });\n        });\n    };\n    LocalState.prototype.setFragmentMatcher = function (fragmentMatcher) {\n        this.fragmentMatcher = fragmentMatcher;\n    };\n    LocalState.prototype.getFragmentMatcher = function () {\n        return this.fragmentMatcher;\n    };\n    LocalState.prototype.clientQuery = function (document) {\n        if (hasDirectives(['client'], document)) {\n            if (this.resolvers) {\n                return document;\n            }\n            process.env.NODE_ENV === \"production\" || invariant.warn('Found @client directives in a query but no ApolloClient resolvers ' +\n                'were specified. This means ApolloClient local resolver handling ' +\n                'has been disabled, and @client directives will be passed through ' +\n                'to your link chain.');\n        }\n        return null;\n    };\n    LocalState.prototype.serverQuery = function (document) {\n        return this.resolvers ? removeClientSetsFromDocument(document) : document;\n    };\n    LocalState.prototype.prepareContext = function (context) {\n        if (context === void 0) { context = {}; }\n        var cache = this.cache;\n        var newContext = __assign(__assign({}, context), { cache: cache, getCacheKey: function (obj) {\n                if (cache.config) {\n                    return cache.config.dataIdFromObject(obj);\n                }\n                else {\n                    process.env.NODE_ENV === \"production\" ? invariant(false, 6) : invariant(false, 'To use context.getCacheKey, you need to use a cache that has ' +\n                        'a configurable dataIdFromObject, like apollo-cache-inmemory.');\n                }\n            } });\n        return newContext;\n    };\n    LocalState.prototype.addExportedVariables = function (document, variables, context) {\n        if (variables === void 0) { variables = {}; }\n        if (context === void 0) { context = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                if (document) {\n                    return [2, this.resolveDocument(document, this.buildRootValueFromCache(document, variables) || {}, this.prepareContext(context), variables).then(function (data) { return (__assign(__assign({}, variables), data.exportedVariables)); })];\n                }\n                return [2, __assign({}, variables)];\n            });\n        });\n    };\n    LocalState.prototype.shouldForceResolvers = function (document) {\n        var forceResolvers = false;\n        visit(document, {\n            Directive: {\n                enter: function (node) {\n                    if (node.name.value === 'client' && node.arguments) {\n                        forceResolvers = node.arguments.some(function (arg) {\n                            return arg.name.value === 'always' &&\n                                arg.value.kind === 'BooleanValue' &&\n                                arg.value.value === true;\n                        });\n                        if (forceResolvers) {\n                            return BREAK;\n                        }\n                    }\n                },\n            },\n        });\n        return forceResolvers;\n    };\n    LocalState.prototype.buildRootValueFromCache = function (document, variables) {\n        return this.cache.diff({\n            query: buildQueryFromSelectionSet(document),\n            variables: variables,\n            returnPartialData: true,\n            optimistic: false,\n        }).result;\n    };\n    LocalState.prototype.resolveDocument = function (document, rootValue, context, variables, fragmentMatcher, onlyRunForcedResolvers) {\n        if (context === void 0) { context = {}; }\n        if (variables === void 0) { variables = {}; }\n        if (fragmentMatcher === void 0) { fragmentMatcher = function () { return true; }; }\n        if (onlyRunForcedResolvers === void 0) { onlyRunForcedResolvers = false; }\n        return __awaiter(this, void 0, void 0, function () {\n            var mainDefinition, fragments, fragmentMap, definitionOperation, defaultOperationType, _a, cache, client, execContext;\n            return __generator(this, function (_b) {\n                mainDefinition = getMainDefinition(document);\n                fragments = getFragmentDefinitions(document);\n                fragmentMap = createFragmentMap(fragments);\n                definitionOperation = mainDefinition\n                    .operation;\n                defaultOperationType = definitionOperation\n                    ? capitalizeFirstLetter(definitionOperation)\n                    : 'Query';\n                _a = this, cache = _a.cache, client = _a.client;\n                execContext = {\n                    fragmentMap: fragmentMap,\n                    context: __assign(__assign({}, context), { cache: cache,\n                        client: client }),\n                    variables: variables,\n                    fragmentMatcher: fragmentMatcher,\n                    defaultOperationType: defaultOperationType,\n                    exportedVariables: {},\n                    onlyRunForcedResolvers: onlyRunForcedResolvers,\n                };\n                return [2, this.resolveSelectionSet(mainDefinition.selectionSet, rootValue, execContext).then(function (result) { return ({\n                        result: result,\n                        exportedVariables: execContext.exportedVariables,\n                    }); })];\n            });\n        });\n    };\n    LocalState.prototype.resolveSelectionSet = function (selectionSet, rootValue, execContext) {\n        return __awaiter(this, void 0, void 0, function () {\n            var fragmentMap, context, variables, resultsToMerge, execute;\n            var _this = this;\n            return __generator(this, function (_a) {\n                fragmentMap = execContext.fragmentMap, context = execContext.context, variables = execContext.variables;\n                resultsToMerge = [rootValue];\n                execute = function (selection) { return __awaiter(_this, void 0, void 0, function () {\n                    var fragment, typeCondition;\n                    return __generator(this, function (_a) {\n                        if (!shouldInclude(selection, variables)) {\n                            return [2];\n                        }\n                        if (isField(selection)) {\n                            return [2, this.resolveField(selection, rootValue, execContext).then(function (fieldResult) {\n                                    var _a;\n                                    if (typeof fieldResult !== 'undefined') {\n                                        resultsToMerge.push((_a = {},\n                                            _a[resultKeyNameFromField(selection)] = fieldResult,\n                                            _a));\n                                    }\n                                })];\n                        }\n                        if (isInlineFragment(selection)) {\n                            fragment = selection;\n                        }\n                        else {\n                            fragment = fragmentMap[selection.name.value];\n                            process.env.NODE_ENV === \"production\" ? invariant(fragment, 7) : invariant(fragment, \"No fragment named \" + selection.name.value);\n                        }\n                        if (fragment && fragment.typeCondition) {\n                            typeCondition = fragment.typeCondition.name.value;\n                            if (execContext.fragmentMatcher(rootValue, typeCondition, context)) {\n                                return [2, this.resolveSelectionSet(fragment.selectionSet, rootValue, execContext).then(function (fragmentResult) {\n                                        resultsToMerge.push(fragmentResult);\n                                    })];\n                            }\n                        }\n                        return [2];\n                    });\n                }); };\n                return [2, Promise.all(selectionSet.selections.map(execute)).then(function () {\n                        return mergeDeepArray(resultsToMerge);\n                    })];\n            });\n        });\n    };\n    LocalState.prototype.resolveField = function (field, rootValue, execContext) {\n        return __awaiter(this, void 0, void 0, function () {\n            var variables, fieldName, aliasedFieldName, aliasUsed, defaultResult, resultPromise, resolverType, resolverMap, resolve;\n            var _this = this;\n            return __generator(this, function (_a) {\n                variables = execContext.variables;\n                fieldName = field.name.value;\n                aliasedFieldName = resultKeyNameFromField(field);\n                aliasUsed = fieldName !== aliasedFieldName;\n                defaultResult = rootValue[aliasedFieldName] || rootValue[fieldName];\n                resultPromise = Promise.resolve(defaultResult);\n                if (!execContext.onlyRunForcedResolvers ||\n                    this.shouldForceResolvers(field)) {\n                    resolverType = rootValue.__typename || execContext.defaultOperationType;\n                    resolverMap = this.resolvers && this.resolvers[resolverType];\n                    if (resolverMap) {\n                        resolve = resolverMap[aliasUsed ? fieldName : aliasedFieldName];\n                        if (resolve) {\n                            resultPromise = Promise.resolve(resolve(rootValue, argumentsObjectFromField(field, variables), execContext.context, { field: field, fragmentMap: execContext.fragmentMap }));\n                        }\n                    }\n                }\n                return [2, resultPromise.then(function (result) {\n                        if (result === void 0) { result = defaultResult; }\n                        if (field.directives) {\n                            field.directives.forEach(function (directive) {\n                                if (directive.name.value === 'export' && directive.arguments) {\n                                    directive.arguments.forEach(function (arg) {\n                                        if (arg.name.value === 'as' && arg.value.kind === 'StringValue') {\n                                            execContext.exportedVariables[arg.value.value] = result;\n                                        }\n                                    });\n                                }\n                            });\n                        }\n                        if (!field.selectionSet) {\n                            return result;\n                        }\n                        if (result == null) {\n                            return result;\n                        }\n                        if (Array.isArray(result)) {\n                            return _this.resolveSubSelectedArray(field, result, execContext);\n                        }\n                        if (field.selectionSet) {\n                            return _this.resolveSelectionSet(field.selectionSet, result, execContext);\n                        }\n                    })];\n            });\n        });\n    };\n    LocalState.prototype.resolveSubSelectedArray = function (field, result, execContext) {\n        var _this = this;\n        return Promise.all(result.map(function (item) {\n            if (item === null) {\n                return null;\n            }\n            if (Array.isArray(item)) {\n                return _this.resolveSubSelectedArray(field, item, execContext);\n            }\n            if (field.selectionSet) {\n                return _this.resolveSelectionSet(field.selectionSet, item, execContext);\n            }\n        }));\n    };\n    return LocalState;\n}());\n\nfunction multiplex(inner) {\n    var observers = new Set();\n    var sub = null;\n    return new Observable(function (observer) {\n        observers.add(observer);\n        sub = sub || inner.subscribe({\n            next: function (value) {\n                observers.forEach(function (obs) { return obs.next && obs.next(value); });\n            },\n            error: function (error) {\n                observers.forEach(function (obs) { return obs.error && obs.error(error); });\n            },\n            complete: function () {\n                observers.forEach(function (obs) { return obs.complete && obs.complete(); });\n            },\n        });\n        return function () {\n            if (observers.delete(observer) && !observers.size && sub) {\n                sub.unsubscribe();\n                sub = null;\n            }\n        };\n    });\n}\nfunction asyncMap(observable, mapFn) {\n    return new Observable(function (observer) {\n        var next = observer.next, error = observer.error, complete = observer.complete;\n        var activeNextCount = 0;\n        var completed = false;\n        var handler = {\n            next: function (value) {\n                ++activeNextCount;\n                new Promise(function (resolve) {\n                    resolve(mapFn(value));\n                }).then(function (result) {\n                    --activeNextCount;\n                    next && next.call(observer, result);\n                    completed && handler.complete();\n                }, function (e) {\n                    --activeNextCount;\n                    error && error.call(observer, e);\n                });\n            },\n            error: function (e) {\n                error && error.call(observer, e);\n            },\n            complete: function () {\n                completed = true;\n                if (!activeNextCount) {\n                    complete && complete.call(observer);\n                }\n            },\n        };\n        var sub = observable.subscribe(handler);\n        return function () { return sub.unsubscribe(); };\n    });\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar QueryManager = (function () {\n    function QueryManager(_a) {\n        var link = _a.link, _b = _a.queryDeduplication, queryDeduplication = _b === void 0 ? false : _b, store = _a.store, _c = _a.onBroadcast, onBroadcast = _c === void 0 ? function () { return undefined; } : _c, _d = _a.ssrMode, ssrMode = _d === void 0 ? false : _d, _e = _a.clientAwareness, clientAwareness = _e === void 0 ? {} : _e, localState = _a.localState, assumeImmutableResults = _a.assumeImmutableResults;\n        this.mutationStore = new MutationStore();\n        this.queryStore = new QueryStore();\n        this.clientAwareness = {};\n        this.idCounter = 1;\n        this.queries = new Map();\n        this.fetchQueryRejectFns = new Map();\n        this.transformCache = new (canUseWeakMap ? WeakMap : Map)();\n        this.inFlightLinkObservables = new Map();\n        this.pollingInfoByQueryId = new Map();\n        this.link = link;\n        this.queryDeduplication = queryDeduplication;\n        this.dataStore = store;\n        this.onBroadcast = onBroadcast;\n        this.clientAwareness = clientAwareness;\n        this.localState = localState || new LocalState({ cache: store.getCache() });\n        this.ssrMode = ssrMode;\n        this.assumeImmutableResults = !!assumeImmutableResults;\n    }\n    QueryManager.prototype.stop = function () {\n        var _this = this;\n        this.queries.forEach(function (_info, queryId) {\n            _this.stopQueryNoBroadcast(queryId);\n        });\n        this.fetchQueryRejectFns.forEach(function (reject) {\n            reject(process.env.NODE_ENV === \"production\" ? new InvariantError(8) : new InvariantError('QueryManager stopped while query was in flight'));\n        });\n    };\n    QueryManager.prototype.mutate = function (_a) {\n        var mutation = _a.mutation, variables = _a.variables, optimisticResponse = _a.optimisticResponse, updateQueriesByName = _a.updateQueries, _b = _a.refetchQueries, refetchQueries = _b === void 0 ? [] : _b, _c = _a.awaitRefetchQueries, awaitRefetchQueries = _c === void 0 ? false : _c, updateWithProxyFn = _a.update, _d = _a.errorPolicy, errorPolicy = _d === void 0 ? 'none' : _d, fetchPolicy = _a.fetchPolicy, _e = _a.context, context = _e === void 0 ? {} : _e;\n        return __awaiter(this, void 0, void 0, function () {\n            var mutationId, generateUpdateQueriesInfo, self;\n            var _this = this;\n            return __generator(this, function (_f) {\n                switch (_f.label) {\n                    case 0:\n                        process.env.NODE_ENV === \"production\" ? invariant(mutation, 9) : invariant(mutation, 'mutation option is required. You must specify your GraphQL document in the mutation option.');\n                        process.env.NODE_ENV === \"production\" ? invariant(!fetchPolicy || fetchPolicy === 'no-cache', 10) : invariant(!fetchPolicy || fetchPolicy === 'no-cache', \"Mutations only support a 'no-cache' fetchPolicy. If you don't want to disable the cache, remove your fetchPolicy setting to proceed with the default mutation behavior.\");\n                        mutationId = this.generateQueryId();\n                        mutation = this.transform(mutation).document;\n                        this.setQuery(mutationId, function () { return ({ document: mutation }); });\n                        variables = this.getVariables(mutation, variables);\n                        if (!this.transform(mutation).hasClientExports) return [3, 2];\n                        return [4, this.localState.addExportedVariables(mutation, variables, context)];\n                    case 1:\n                        variables = _f.sent();\n                        _f.label = 2;\n                    case 2:\n                        generateUpdateQueriesInfo = function () {\n                            var ret = {};\n                            if (updateQueriesByName) {\n                                _this.queries.forEach(function (_a, queryId) {\n                                    var observableQuery = _a.observableQuery;\n                                    if (observableQuery) {\n                                        var queryName = observableQuery.queryName;\n                                        if (queryName &&\n                                            hasOwnProperty.call(updateQueriesByName, queryName)) {\n                                            ret[queryId] = {\n                                                updater: updateQueriesByName[queryName],\n                                                query: _this.queryStore.get(queryId),\n                                            };\n                                        }\n                                    }\n                                });\n                            }\n                            return ret;\n                        };\n                        this.mutationStore.initMutation(mutationId, mutation, variables);\n                        this.dataStore.markMutationInit({\n                            mutationId: mutationId,\n                            document: mutation,\n                            variables: variables,\n                            updateQueries: generateUpdateQueriesInfo(),\n                            update: updateWithProxyFn,\n                            optimisticResponse: optimisticResponse,\n                        });\n                        this.broadcastQueries();\n                        self = this;\n                        return [2, new Promise(function (resolve, reject) {\n                                var storeResult;\n                                var error;\n                                self.getObservableFromLink(mutation, __assign(__assign({}, context), { optimisticResponse: optimisticResponse }), variables, false).subscribe({\n                                    next: function (result) {\n                                        if (graphQLResultHasError(result) && errorPolicy === 'none') {\n                                            error = new ApolloError({\n                                                graphQLErrors: result.errors,\n                                            });\n                                            return;\n                                        }\n                                        self.mutationStore.markMutationResult(mutationId);\n                                        if (fetchPolicy !== 'no-cache') {\n                                            self.dataStore.markMutationResult({\n                                                mutationId: mutationId,\n                                                result: result,\n                                                document: mutation,\n                                                variables: variables,\n                                                updateQueries: generateUpdateQueriesInfo(),\n                                                update: updateWithProxyFn,\n                                            });\n                                        }\n                                        storeResult = result;\n                                    },\n                                    error: function (err) {\n                                        self.mutationStore.markMutationError(mutationId, err);\n                                        self.dataStore.markMutationComplete({\n                                            mutationId: mutationId,\n                                            optimisticResponse: optimisticResponse,\n                                        });\n                                        self.broadcastQueries();\n                                        self.setQuery(mutationId, function () { return ({ document: null }); });\n                                        reject(new ApolloError({\n                                            networkError: err,\n                                        }));\n                                    },\n                                    complete: function () {\n                                        if (error) {\n                                            self.mutationStore.markMutationError(mutationId, error);\n                                        }\n                                        self.dataStore.markMutationComplete({\n                                            mutationId: mutationId,\n                                            optimisticResponse: optimisticResponse,\n                                        });\n                                        self.broadcastQueries();\n                                        if (error) {\n                                            reject(error);\n                                            return;\n                                        }\n                                        if (typeof refetchQueries === 'function') {\n                                            refetchQueries = refetchQueries(storeResult);\n                                        }\n                                        var refetchQueryPromises = [];\n                                        if (isNonEmptyArray(refetchQueries)) {\n                                            refetchQueries.forEach(function (refetchQuery) {\n                                                if (typeof refetchQuery === 'string') {\n                                                    self.queries.forEach(function (_a) {\n                                                        var observableQuery = _a.observableQuery;\n                                                        if (observableQuery &&\n                                                            observableQuery.queryName === refetchQuery) {\n                                                            refetchQueryPromises.push(observableQuery.refetch());\n                                                        }\n                                                    });\n                                                }\n                                                else {\n                                                    var queryOptions = {\n                                                        query: refetchQuery.query,\n                                                        variables: refetchQuery.variables,\n                                                        fetchPolicy: 'network-only',\n                                                    };\n                                                    if (refetchQuery.context) {\n                                                        queryOptions.context = refetchQuery.context;\n                                                    }\n                                                    refetchQueryPromises.push(self.query(queryOptions));\n                                                }\n                                            });\n                                        }\n                                        Promise.all(awaitRefetchQueries ? refetchQueryPromises : []).then(function () {\n                                            self.setQuery(mutationId, function () { return ({ document: null }); });\n                                            if (errorPolicy === 'ignore' &&\n                                                storeResult &&\n                                                graphQLResultHasError(storeResult)) {\n                                                delete storeResult.errors;\n                                            }\n                                            resolve(storeResult);\n                                        });\n                                    },\n                                });\n                            })];\n                }\n            });\n        });\n    };\n    QueryManager.prototype.fetchQuery = function (queryId, options, fetchType, fetchMoreForQueryId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, metadata, _b, fetchPolicy, _c, context, query, variables, storeResult, isNetworkOnly, needToFetch, _d, complete, result, shouldFetch, requestId, cancel, networkResult;\n            var _this = this;\n            return __generator(this, function (_e) {\n                switch (_e.label) {\n                    case 0:\n                        _a = options.metadata, metadata = _a === void 0 ? null : _a, _b = options.fetchPolicy, fetchPolicy = _b === void 0 ? 'cache-first' : _b, _c = options.context, context = _c === void 0 ? {} : _c;\n                        query = this.transform(options.query).document;\n                        variables = this.getVariables(query, options.variables);\n                        if (!this.transform(query).hasClientExports) return [3, 2];\n                        return [4, this.localState.addExportedVariables(query, variables, context)];\n                    case 1:\n                        variables = _e.sent();\n                        _e.label = 2;\n                    case 2:\n                        options = __assign(__assign({}, options), { variables: variables });\n                        isNetworkOnly = fetchPolicy === 'network-only' || fetchPolicy === 'no-cache';\n                        needToFetch = isNetworkOnly;\n                        if (!isNetworkOnly) {\n                            _d = this.dataStore.getCache().diff({\n                                query: query,\n                                variables: variables,\n                                returnPartialData: true,\n                                optimistic: false,\n                            }), complete = _d.complete, result = _d.result;\n                            needToFetch = !complete || fetchPolicy === 'cache-and-network';\n                            storeResult = result;\n                        }\n                        shouldFetch = needToFetch && fetchPolicy !== 'cache-only' && fetchPolicy !== 'standby';\n                        if (hasDirectives(['live'], query))\n                            shouldFetch = true;\n                        requestId = this.idCounter++;\n                        cancel = fetchPolicy !== 'no-cache'\n                            ? this.updateQueryWatch(queryId, query, options)\n                            : undefined;\n                        this.setQuery(queryId, function () { return ({\n                            document: query,\n                            lastRequestId: requestId,\n                            invalidated: true,\n                            cancel: cancel,\n                        }); });\n                        this.invalidate(fetchMoreForQueryId);\n                        this.queryStore.initQuery({\n                            queryId: queryId,\n                            document: query,\n                            storePreviousVariables: shouldFetch,\n                            variables: variables,\n                            isPoll: fetchType === FetchType.poll,\n                            isRefetch: fetchType === FetchType.refetch,\n                            metadata: metadata,\n                            fetchMoreForQueryId: fetchMoreForQueryId,\n                        });\n                        this.broadcastQueries();\n                        if (shouldFetch) {\n                            networkResult = this.fetchRequest({\n                                requestId: requestId,\n                                queryId: queryId,\n                                document: query,\n                                options: options,\n                                fetchMoreForQueryId: fetchMoreForQueryId,\n                            }).catch(function (error) {\n                                if (isApolloError(error)) {\n                                    throw error;\n                                }\n                                else {\n                                    if (requestId >= _this.getQuery(queryId).lastRequestId) {\n                                        _this.queryStore.markQueryError(queryId, error, fetchMoreForQueryId);\n                                        _this.invalidate(queryId);\n                                        _this.invalidate(fetchMoreForQueryId);\n                                        _this.broadcastQueries();\n                                    }\n                                    throw new ApolloError({ networkError: error });\n                                }\n                            });\n                            if (fetchPolicy !== 'cache-and-network') {\n                                return [2, networkResult];\n                            }\n                            networkResult.catch(function () { });\n                        }\n                        this.queryStore.markQueryResultClient(queryId, !shouldFetch);\n                        this.invalidate(queryId);\n                        this.invalidate(fetchMoreForQueryId);\n                        if (this.transform(query).hasForcedResolvers) {\n                            return [2, this.localState.runResolvers({\n                                    document: query,\n                                    remoteResult: { data: storeResult },\n                                    context: context,\n                                    variables: variables,\n                                    onlyRunForcedResolvers: true,\n                                }).then(function (result) {\n                                    _this.markQueryResult(queryId, result, options, fetchMoreForQueryId);\n                                    _this.broadcastQueries();\n                                    return result;\n                                })];\n                        }\n                        this.broadcastQueries();\n                        return [2, { data: storeResult }];\n                }\n            });\n        });\n    };\n    QueryManager.prototype.markQueryResult = function (queryId, result, _a, fetchMoreForQueryId) {\n        var fetchPolicy = _a.fetchPolicy, variables = _a.variables, errorPolicy = _a.errorPolicy;\n        if (fetchPolicy === 'no-cache') {\n            this.setQuery(queryId, function () { return ({\n                newData: { result: result.data, complete: true },\n            }); });\n        }\n        else {\n            this.dataStore.markQueryResult(result, this.getQuery(queryId).document, variables, fetchMoreForQueryId, errorPolicy === 'ignore' || errorPolicy === 'all');\n        }\n    };\n    QueryManager.prototype.queryListenerForObserver = function (queryId, options, observer) {\n        var _this = this;\n        function invoke(method, argument) {\n            if (observer[method]) {\n                try {\n                    observer[method](argument);\n                }\n                catch (e) {\n                    process.env.NODE_ENV === \"production\" || invariant.error(e);\n                }\n            }\n            else if (method === 'error') {\n                process.env.NODE_ENV === \"production\" || invariant.error(argument);\n            }\n        }\n        return function (queryStoreValue, newData) {\n            _this.invalidate(queryId, false);\n            if (!queryStoreValue)\n                return;\n            var _a = _this.getQuery(queryId), observableQuery = _a.observableQuery, document = _a.document;\n            var fetchPolicy = observableQuery\n                ? observableQuery.options.fetchPolicy\n                : options.fetchPolicy;\n            if (fetchPolicy === 'standby')\n                return;\n            var loading = isNetworkRequestInFlight(queryStoreValue.networkStatus);\n            var lastResult = observableQuery && observableQuery.getLastResult();\n            var networkStatusChanged = !!(lastResult &&\n                lastResult.networkStatus !== queryStoreValue.networkStatus);\n            var shouldNotifyIfLoading = options.returnPartialData ||\n                (!newData && queryStoreValue.previousVariables) ||\n                (networkStatusChanged && options.notifyOnNetworkStatusChange) ||\n                fetchPolicy === 'cache-only' ||\n                fetchPolicy === 'cache-and-network';\n            if (loading && !shouldNotifyIfLoading) {\n                return;\n            }\n            var hasGraphQLErrors = isNonEmptyArray(queryStoreValue.graphQLErrors);\n            var errorPolicy = observableQuery\n                && observableQuery.options.errorPolicy\n                || options.errorPolicy\n                || 'none';\n            if (errorPolicy === 'none' && hasGraphQLErrors || queryStoreValue.networkError) {\n                return invoke('error', new ApolloError({\n                    graphQLErrors: queryStoreValue.graphQLErrors,\n                    networkError: queryStoreValue.networkError,\n                }));\n            }\n            try {\n                var data = void 0;\n                var isMissing = void 0;\n                if (newData) {\n                    if (fetchPolicy !== 'no-cache' && fetchPolicy !== 'network-only') {\n                        _this.setQuery(queryId, function () { return ({ newData: null }); });\n                    }\n                    data = newData.result;\n                    isMissing = !newData.complete;\n                }\n                else {\n                    var lastError = observableQuery && observableQuery.getLastError();\n                    var errorStatusChanged = errorPolicy !== 'none' &&\n                        (lastError && lastError.graphQLErrors) !==\n                            queryStoreValue.graphQLErrors;\n                    if (lastResult && lastResult.data && !errorStatusChanged) {\n                        data = lastResult.data;\n                        isMissing = false;\n                    }\n                    else {\n                        var diffResult = _this.dataStore.getCache().diff({\n                            query: document,\n                            variables: queryStoreValue.previousVariables ||\n                                queryStoreValue.variables,\n                            returnPartialData: true,\n                            optimistic: true,\n                        });\n                        data = diffResult.result;\n                        isMissing = !diffResult.complete;\n                    }\n                }\n                var stale = isMissing && !(options.returnPartialData ||\n                    fetchPolicy === 'cache-only');\n                var resultFromStore = {\n                    data: stale ? lastResult && lastResult.data : data,\n                    loading: loading,\n                    networkStatus: queryStoreValue.networkStatus,\n                    stale: stale,\n                };\n                if (errorPolicy === 'all' && hasGraphQLErrors) {\n                    resultFromStore.errors = queryStoreValue.graphQLErrors;\n                }\n                invoke('next', resultFromStore);\n            }\n            catch (networkError) {\n                invoke('error', new ApolloError({ networkError: networkError }));\n            }\n        };\n    };\n    QueryManager.prototype.transform = function (document) {\n        var transformCache = this.transformCache;\n        if (!transformCache.has(document)) {\n            var cache = this.dataStore.getCache();\n            var transformed = cache.transformDocument(document);\n            var forLink = removeConnectionDirectiveFromDocument(cache.transformForLink(transformed));\n            var clientQuery = this.localState.clientQuery(transformed);\n            var serverQuery = this.localState.serverQuery(forLink);\n            var cacheEntry_1 = {\n                document: transformed,\n                hasClientExports: hasClientExports(transformed),\n                hasForcedResolvers: this.localState.shouldForceResolvers(transformed),\n                clientQuery: clientQuery,\n                serverQuery: serverQuery,\n                defaultVars: getDefaultValues(getOperationDefinition(transformed)),\n            };\n            var add = function (doc) {\n                if (doc && !transformCache.has(doc)) {\n                    transformCache.set(doc, cacheEntry_1);\n                }\n            };\n            add(document);\n            add(transformed);\n            add(clientQuery);\n            add(serverQuery);\n        }\n        return transformCache.get(document);\n    };\n    QueryManager.prototype.getVariables = function (document, variables) {\n        return __assign(__assign({}, this.transform(document).defaultVars), variables);\n    };\n    QueryManager.prototype.watchQuery = function (options, shouldSubscribe) {\n        if (shouldSubscribe === void 0) { shouldSubscribe = true; }\n        process.env.NODE_ENV === \"production\" ? invariant(options.fetchPolicy !== 'standby', 11) : invariant(options.fetchPolicy !== 'standby', 'client.watchQuery cannot be called with fetchPolicy set to \"standby\"');\n        options.variables = this.getVariables(options.query, options.variables);\n        if (typeof options.notifyOnNetworkStatusChange === 'undefined') {\n            options.notifyOnNetworkStatusChange = false;\n        }\n        var transformedOptions = __assign({}, options);\n        return new ObservableQuery({\n            queryManager: this,\n            options: transformedOptions,\n            shouldSubscribe: shouldSubscribe,\n        });\n    };\n    QueryManager.prototype.query = function (options) {\n        var _this = this;\n        process.env.NODE_ENV === \"production\" ? invariant(options.query, 12) : invariant(options.query, 'query option is required. You must specify your GraphQL document ' +\n            'in the query option.');\n        process.env.NODE_ENV === \"production\" ? invariant(options.query.kind === 'Document', 13) : invariant(options.query.kind === 'Document', 'You must wrap the query string in a \"gql\" tag.');\n        process.env.NODE_ENV === \"production\" ? invariant(!options.returnPartialData, 14) : invariant(!options.returnPartialData, 'returnPartialData option only supported on watchQuery.');\n        process.env.NODE_ENV === \"production\" ? invariant(!options.pollInterval, 15) : invariant(!options.pollInterval, 'pollInterval option only supported on watchQuery.');\n        return new Promise(function (resolve, reject) {\n            var watchedQuery = _this.watchQuery(options, false);\n            _this.fetchQueryRejectFns.set(\"query:\" + watchedQuery.queryId, reject);\n            watchedQuery\n                .result()\n                .then(resolve, reject)\n                .then(function () {\n                return _this.fetchQueryRejectFns.delete(\"query:\" + watchedQuery.queryId);\n            });\n        });\n    };\n    QueryManager.prototype.generateQueryId = function () {\n        return String(this.idCounter++);\n    };\n    QueryManager.prototype.stopQueryInStore = function (queryId) {\n        this.stopQueryInStoreNoBroadcast(queryId);\n        this.broadcastQueries();\n    };\n    QueryManager.prototype.stopQueryInStoreNoBroadcast = function (queryId) {\n        this.stopPollingQuery(queryId);\n        this.queryStore.stopQuery(queryId);\n        this.invalidate(queryId);\n    };\n    QueryManager.prototype.addQueryListener = function (queryId, listener) {\n        this.setQuery(queryId, function (_a) {\n            var listeners = _a.listeners;\n            listeners.add(listener);\n            return { invalidated: false };\n        });\n    };\n    QueryManager.prototype.updateQueryWatch = function (queryId, document, options) {\n        var _this = this;\n        var cancel = this.getQuery(queryId).cancel;\n        if (cancel)\n            cancel();\n        var previousResult = function () {\n            var previousResult = null;\n            var observableQuery = _this.getQuery(queryId).observableQuery;\n            if (observableQuery) {\n                var lastResult = observableQuery.getLastResult();\n                if (lastResult) {\n                    previousResult = lastResult.data;\n                }\n            }\n            return previousResult;\n        };\n        return this.dataStore.getCache().watch({\n            query: document,\n            variables: options.variables,\n            optimistic: true,\n            previousResult: previousResult,\n            callback: function (newData) {\n                _this.setQuery(queryId, function () { return ({ invalidated: true, newData: newData }); });\n            },\n        });\n    };\n    QueryManager.prototype.addObservableQuery = function (queryId, observableQuery) {\n        this.setQuery(queryId, function () { return ({ observableQuery: observableQuery }); });\n    };\n    QueryManager.prototype.removeObservableQuery = function (queryId) {\n        var cancel = this.getQuery(queryId).cancel;\n        this.setQuery(queryId, function () { return ({ observableQuery: null }); });\n        if (cancel)\n            cancel();\n    };\n    QueryManager.prototype.clearStore = function () {\n        this.fetchQueryRejectFns.forEach(function (reject) {\n            reject(process.env.NODE_ENV === \"production\" ? new InvariantError(16) : new InvariantError('Store reset while query was in flight (not completed in link chain)'));\n        });\n        var resetIds = [];\n        this.queries.forEach(function (_a, queryId) {\n            var observableQuery = _a.observableQuery;\n            if (observableQuery)\n                resetIds.push(queryId);\n        });\n        this.queryStore.reset(resetIds);\n        this.mutationStore.reset();\n        return this.dataStore.reset();\n    };\n    QueryManager.prototype.resetStore = function () {\n        var _this = this;\n        return this.clearStore().then(function () {\n            return _this.reFetchObservableQueries();\n        });\n    };\n    QueryManager.prototype.reFetchObservableQueries = function (includeStandby) {\n        var _this = this;\n        if (includeStandby === void 0) { includeStandby = false; }\n        var observableQueryPromises = [];\n        this.queries.forEach(function (_a, queryId) {\n            var observableQuery = _a.observableQuery;\n            if (observableQuery) {\n                var fetchPolicy = observableQuery.options.fetchPolicy;\n                observableQuery.resetLastResults();\n                if (fetchPolicy !== 'cache-only' &&\n                    (includeStandby || fetchPolicy !== 'standby')) {\n                    observableQueryPromises.push(observableQuery.refetch());\n                }\n                _this.setQuery(queryId, function () { return ({ newData: null }); });\n                _this.invalidate(queryId);\n            }\n        });\n        this.broadcastQueries();\n        return Promise.all(observableQueryPromises);\n    };\n    QueryManager.prototype.observeQuery = function (queryId, options, observer) {\n        this.addQueryListener(queryId, this.queryListenerForObserver(queryId, options, observer));\n        return this.fetchQuery(queryId, options);\n    };\n    QueryManager.prototype.startQuery = function (queryId, options, listener) {\n        process.env.NODE_ENV === \"production\" || invariant.warn(\"The QueryManager.startQuery method has been deprecated\");\n        this.addQueryListener(queryId, listener);\n        this.fetchQuery(queryId, options)\n            .catch(function () { return undefined; });\n        return queryId;\n    };\n    QueryManager.prototype.startGraphQLSubscription = function (_a) {\n        var _this = this;\n        var query = _a.query, fetchPolicy = _a.fetchPolicy, variables = _a.variables;\n        query = this.transform(query).document;\n        variables = this.getVariables(query, variables);\n        var makeObservable = function (variables) {\n            return _this.getObservableFromLink(query, {}, variables, false).map(function (result) {\n                if (!fetchPolicy || fetchPolicy !== 'no-cache') {\n                    _this.dataStore.markSubscriptionResult(result, query, variables);\n                    _this.broadcastQueries();\n                }\n                if (graphQLResultHasError(result)) {\n                    throw new ApolloError({\n                        graphQLErrors: result.errors,\n                    });\n                }\n                return result;\n            });\n        };\n        if (this.transform(query).hasClientExports) {\n            var observablePromise_1 = this.localState.addExportedVariables(query, variables).then(makeObservable);\n            return new Observable(function (observer) {\n                var sub = null;\n                observablePromise_1.then(function (observable) { return sub = observable.subscribe(observer); }, observer.error);\n                return function () { return sub && sub.unsubscribe(); };\n            });\n        }\n        return makeObservable(variables);\n    };\n    QueryManager.prototype.stopQuery = function (queryId) {\n        this.stopQueryNoBroadcast(queryId);\n        this.broadcastQueries();\n    };\n    QueryManager.prototype.stopQueryNoBroadcast = function (queryId) {\n        this.stopQueryInStoreNoBroadcast(queryId);\n        this.removeQuery(queryId);\n    };\n    QueryManager.prototype.removeQuery = function (queryId) {\n        this.fetchQueryRejectFns.delete(\"query:\" + queryId);\n        this.fetchQueryRejectFns.delete(\"fetchRequest:\" + queryId);\n        this.getQuery(queryId).subscriptions.forEach(function (x) { return x.unsubscribe(); });\n        this.queries.delete(queryId);\n    };\n    QueryManager.prototype.getCurrentQueryResult = function (observableQuery, optimistic) {\n        if (optimistic === void 0) { optimistic = true; }\n        var _a = observableQuery.options, variables = _a.variables, query = _a.query, fetchPolicy = _a.fetchPolicy, returnPartialData = _a.returnPartialData;\n        var lastResult = observableQuery.getLastResult();\n        var newData = this.getQuery(observableQuery.queryId).newData;\n        if (newData && newData.complete) {\n            return { data: newData.result, partial: false };\n        }\n        if (fetchPolicy === 'no-cache' || fetchPolicy === 'network-only') {\n            return { data: undefined, partial: false };\n        }\n        var _b = this.dataStore.getCache().diff({\n            query: query,\n            variables: variables,\n            previousResult: lastResult ? lastResult.data : undefined,\n            returnPartialData: true,\n            optimistic: optimistic,\n        }), result = _b.result, complete = _b.complete;\n        return {\n            data: (complete || returnPartialData) ? result : void 0,\n            partial: !complete,\n        };\n    };\n    QueryManager.prototype.getQueryWithPreviousResult = function (queryIdOrObservable) {\n        var observableQuery;\n        if (typeof queryIdOrObservable === 'string') {\n            var foundObserveableQuery = this.getQuery(queryIdOrObservable).observableQuery;\n            process.env.NODE_ENV === \"production\" ? invariant(foundObserveableQuery, 17) : invariant(foundObserveableQuery, \"ObservableQuery with this id doesn't exist: \" + queryIdOrObservable);\n            observableQuery = foundObserveableQuery;\n        }\n        else {\n            observableQuery = queryIdOrObservable;\n        }\n        var _a = observableQuery.options, variables = _a.variables, query = _a.query;\n        return {\n            previousResult: this.getCurrentQueryResult(observableQuery, false).data,\n            variables: variables,\n            document: query,\n        };\n    };\n    QueryManager.prototype.broadcastQueries = function () {\n        var _this = this;\n        this.onBroadcast();\n        this.queries.forEach(function (info, id) {\n            if (info.invalidated) {\n                info.listeners.forEach(function (listener) {\n                    if (listener) {\n                        listener(_this.queryStore.get(id), info.newData);\n                    }\n                });\n            }\n        });\n    };\n    QueryManager.prototype.getLocalState = function () {\n        return this.localState;\n    };\n    QueryManager.prototype.getObservableFromLink = function (query, context, variables, deduplication) {\n        var _this = this;\n        if (deduplication === void 0) { deduplication = this.queryDeduplication; }\n        var observable;\n        var serverQuery = this.transform(query).serverQuery;\n        if (serverQuery) {\n            var _a = this, inFlightLinkObservables_1 = _a.inFlightLinkObservables, link = _a.link;\n            var operation = {\n                query: serverQuery,\n                variables: variables,\n                operationName: getOperationName(serverQuery) || void 0,\n                context: this.prepareContext(__assign(__assign({}, context), { forceFetch: !deduplication })),\n            };\n            context = operation.context;\n            if (deduplication) {\n                var byVariables_1 = inFlightLinkObservables_1.get(serverQuery) || new Map();\n                inFlightLinkObservables_1.set(serverQuery, byVariables_1);\n                var varJson_1 = JSON.stringify(variables);\n                observable = byVariables_1.get(varJson_1);\n                if (!observable) {\n                    byVariables_1.set(varJson_1, observable = multiplex(execute(link, operation)));\n                    var cleanup = function () {\n                        byVariables_1.delete(varJson_1);\n                        if (!byVariables_1.size)\n                            inFlightLinkObservables_1.delete(serverQuery);\n                        cleanupSub_1.unsubscribe();\n                    };\n                    var cleanupSub_1 = observable.subscribe({\n                        next: cleanup,\n                        error: cleanup,\n                        complete: cleanup,\n                    });\n                }\n            }\n            else {\n                observable = multiplex(execute(link, operation));\n            }\n        }\n        else {\n            observable = Observable.of({ data: {} });\n            context = this.prepareContext(context);\n        }\n        var clientQuery = this.transform(query).clientQuery;\n        if (clientQuery) {\n            observable = asyncMap(observable, function (result) {\n                return _this.localState.runResolvers({\n                    document: clientQuery,\n                    remoteResult: result,\n                    context: context,\n                    variables: variables,\n                });\n            });\n        }\n        return observable;\n    };\n    QueryManager.prototype.fetchRequest = function (_a) {\n        var _this = this;\n        var requestId = _a.requestId, queryId = _a.queryId, document = _a.document, options = _a.options, fetchMoreForQueryId = _a.fetchMoreForQueryId;\n        var variables = options.variables, _b = options.errorPolicy, errorPolicy = _b === void 0 ? 'none' : _b, fetchPolicy = options.fetchPolicy;\n        var resultFromStore;\n        var errorsFromStore;\n        return new Promise(function (resolve, reject) {\n            var observable = _this.getObservableFromLink(document, options.context, variables);\n            var fqrfId = \"fetchRequest:\" + queryId;\n            _this.fetchQueryRejectFns.set(fqrfId, reject);\n            var cleanup = function () {\n                _this.fetchQueryRejectFns.delete(fqrfId);\n                _this.setQuery(queryId, function (_a) {\n                    var subscriptions = _a.subscriptions;\n                    subscriptions.delete(subscription);\n                });\n            };\n            var subscription = observable.map(function (result) {\n                if (requestId >= _this.getQuery(queryId).lastRequestId) {\n                    _this.markQueryResult(queryId, result, options, fetchMoreForQueryId);\n                    _this.queryStore.markQueryResult(queryId, result, fetchMoreForQueryId);\n                    _this.invalidate(queryId);\n                    _this.invalidate(fetchMoreForQueryId);\n                    _this.broadcastQueries();\n                }\n                if (errorPolicy === 'none' && isNonEmptyArray(result.errors)) {\n                    return reject(new ApolloError({\n                        graphQLErrors: result.errors,\n                    }));\n                }\n                if (errorPolicy === 'all') {\n                    errorsFromStore = result.errors;\n                }\n                if (fetchMoreForQueryId || fetchPolicy === 'no-cache') {\n                    resultFromStore = result.data;\n                }\n                else {\n                    var _a = _this.dataStore.getCache().diff({\n                        variables: variables,\n                        query: document,\n                        optimistic: false,\n                        returnPartialData: true,\n                    }), result_1 = _a.result, complete = _a.complete;\n                    if (complete || options.returnPartialData) {\n                        resultFromStore = result_1;\n                    }\n                }\n            }).subscribe({\n                error: function (error) {\n                    cleanup();\n                    reject(error);\n                },\n                complete: function () {\n                    cleanup();\n                    resolve({\n                        data: resultFromStore,\n                        errors: errorsFromStore,\n                        loading: false,\n                        networkStatus: NetworkStatus.ready,\n                        stale: false,\n                    });\n                },\n            });\n            _this.setQuery(queryId, function (_a) {\n                var subscriptions = _a.subscriptions;\n                subscriptions.add(subscription);\n            });\n        });\n    };\n    QueryManager.prototype.getQuery = function (queryId) {\n        return (this.queries.get(queryId) || {\n            listeners: new Set(),\n            invalidated: false,\n            document: null,\n            newData: null,\n            lastRequestId: 1,\n            observableQuery: null,\n            subscriptions: new Set(),\n        });\n    };\n    QueryManager.prototype.setQuery = function (queryId, updater) {\n        var prev = this.getQuery(queryId);\n        var newInfo = __assign(__assign({}, prev), updater(prev));\n        this.queries.set(queryId, newInfo);\n    };\n    QueryManager.prototype.invalidate = function (queryId, invalidated) {\n        if (invalidated === void 0) { invalidated = true; }\n        if (queryId) {\n            this.setQuery(queryId, function () { return ({ invalidated: invalidated }); });\n        }\n    };\n    QueryManager.prototype.prepareContext = function (context) {\n        if (context === void 0) { context = {}; }\n        var newContext = this.localState.prepareContext(context);\n        return __assign(__assign({}, newContext), { clientAwareness: this.clientAwareness });\n    };\n    QueryManager.prototype.checkInFlight = function (queryId) {\n        var query = this.queryStore.get(queryId);\n        return (query &&\n            query.networkStatus !== NetworkStatus.ready &&\n            query.networkStatus !== NetworkStatus.error);\n    };\n    QueryManager.prototype.startPollingQuery = function (options, queryId, listener) {\n        var _this = this;\n        var pollInterval = options.pollInterval;\n        process.env.NODE_ENV === \"production\" ? invariant(pollInterval, 18) : invariant(pollInterval, 'Attempted to start a polling query without a polling interval.');\n        if (!this.ssrMode) {\n            var info = this.pollingInfoByQueryId.get(queryId);\n            if (!info) {\n                this.pollingInfoByQueryId.set(queryId, (info = {}));\n            }\n            info.interval = pollInterval;\n            info.options = __assign(__assign({}, options), { fetchPolicy: 'network-only' });\n            var maybeFetch_1 = function () {\n                var info = _this.pollingInfoByQueryId.get(queryId);\n                if (info) {\n                    if (_this.checkInFlight(queryId)) {\n                        poll_1();\n                    }\n                    else {\n                        _this.fetchQuery(queryId, info.options, FetchType.poll).then(poll_1, poll_1);\n                    }\n                }\n            };\n            var poll_1 = function () {\n                var info = _this.pollingInfoByQueryId.get(queryId);\n                if (info) {\n                    clearTimeout(info.timeout);\n                    info.timeout = setTimeout(maybeFetch_1, info.interval);\n                }\n            };\n            if (listener) {\n                this.addQueryListener(queryId, listener);\n            }\n            poll_1();\n        }\n        return queryId;\n    };\n    QueryManager.prototype.stopPollingQuery = function (queryId) {\n        this.pollingInfoByQueryId.delete(queryId);\n    };\n    return QueryManager;\n}());\n\nvar DataStore = (function () {\n    function DataStore(initialCache) {\n        this.cache = initialCache;\n    }\n    DataStore.prototype.getCache = function () {\n        return this.cache;\n    };\n    DataStore.prototype.markQueryResult = function (result, document, variables, fetchMoreForQueryId, ignoreErrors) {\n        if (ignoreErrors === void 0) { ignoreErrors = false; }\n        var writeWithErrors = !graphQLResultHasError(result);\n        if (ignoreErrors && graphQLResultHasError(result) && result.data) {\n            writeWithErrors = true;\n        }\n        if (!fetchMoreForQueryId && writeWithErrors) {\n            this.cache.write({\n                result: result.data,\n                dataId: 'ROOT_QUERY',\n                query: document,\n                variables: variables,\n            });\n        }\n    };\n    DataStore.prototype.markSubscriptionResult = function (result, document, variables) {\n        if (!graphQLResultHasError(result)) {\n            this.cache.write({\n                result: result.data,\n                dataId: 'ROOT_SUBSCRIPTION',\n                query: document,\n                variables: variables,\n            });\n        }\n    };\n    DataStore.prototype.markMutationInit = function (mutation) {\n        var _this = this;\n        if (mutation.optimisticResponse) {\n            var optimistic_1;\n            if (typeof mutation.optimisticResponse === 'function') {\n                optimistic_1 = mutation.optimisticResponse(mutation.variables);\n            }\n            else {\n                optimistic_1 = mutation.optimisticResponse;\n            }\n            this.cache.recordOptimisticTransaction(function (c) {\n                var orig = _this.cache;\n                _this.cache = c;\n                try {\n                    _this.markMutationResult({\n                        mutationId: mutation.mutationId,\n                        result: { data: optimistic_1 },\n                        document: mutation.document,\n                        variables: mutation.variables,\n                        updateQueries: mutation.updateQueries,\n                        update: mutation.update,\n                    });\n                }\n                finally {\n                    _this.cache = orig;\n                }\n            }, mutation.mutationId);\n        }\n    };\n    DataStore.prototype.markMutationResult = function (mutation) {\n        var _this = this;\n        if (!graphQLResultHasError(mutation.result)) {\n            var cacheWrites_1 = [{\n                    result: mutation.result.data,\n                    dataId: 'ROOT_MUTATION',\n                    query: mutation.document,\n                    variables: mutation.variables,\n                }];\n            var updateQueries_1 = mutation.updateQueries;\n            if (updateQueries_1) {\n                Object.keys(updateQueries_1).forEach(function (id) {\n                    var _a = updateQueries_1[id], query = _a.query, updater = _a.updater;\n                    var _b = _this.cache.diff({\n                        query: query.document,\n                        variables: query.variables,\n                        returnPartialData: true,\n                        optimistic: false,\n                    }), currentQueryResult = _b.result, complete = _b.complete;\n                    if (complete) {\n                        var nextQueryResult = tryFunctionOrLogError(function () {\n                            return updater(currentQueryResult, {\n                                mutationResult: mutation.result,\n                                queryName: getOperationName(query.document) || undefined,\n                                queryVariables: query.variables,\n                            });\n                        });\n                        if (nextQueryResult) {\n                            cacheWrites_1.push({\n                                result: nextQueryResult,\n                                dataId: 'ROOT_QUERY',\n                                query: query.document,\n                                variables: query.variables,\n                            });\n                        }\n                    }\n                });\n            }\n            this.cache.performTransaction(function (c) {\n                cacheWrites_1.forEach(function (write) { return c.write(write); });\n                var update = mutation.update;\n                if (update) {\n                    tryFunctionOrLogError(function () { return update(c, mutation.result); });\n                }\n            });\n        }\n    };\n    DataStore.prototype.markMutationComplete = function (_a) {\n        var mutationId = _a.mutationId, optimisticResponse = _a.optimisticResponse;\n        if (optimisticResponse) {\n            this.cache.removeOptimistic(mutationId);\n        }\n    };\n    DataStore.prototype.markUpdateQueryResult = function (document, variables, newResult) {\n        this.cache.write({\n            result: newResult,\n            dataId: 'ROOT_QUERY',\n            variables: variables,\n            query: document,\n        });\n    };\n    DataStore.prototype.reset = function () {\n        return this.cache.reset();\n    };\n    return DataStore;\n}());\n\nvar version = \"2.6.8\";\n\nvar hasSuggestedDevtools = false;\nvar ApolloClient = (function () {\n    function ApolloClient(options) {\n        var _this = this;\n        this.defaultOptions = {};\n        this.resetStoreCallbacks = [];\n        this.clearStoreCallbacks = [];\n        var cache = options.cache, _a = options.ssrMode, ssrMode = _a === void 0 ? false : _a, _b = options.ssrForceFetchDelay, ssrForceFetchDelay = _b === void 0 ? 0 : _b, connectToDevTools = options.connectToDevTools, _c = options.queryDeduplication, queryDeduplication = _c === void 0 ? true : _c, defaultOptions = options.defaultOptions, _d = options.assumeImmutableResults, assumeImmutableResults = _d === void 0 ? false : _d, resolvers = options.resolvers, typeDefs = options.typeDefs, fragmentMatcher = options.fragmentMatcher, clientAwarenessName = options.name, clientAwarenessVersion = options.version;\n        var link = options.link;\n        if (!link && resolvers) {\n            link = ApolloLink.empty();\n        }\n        if (!link || !cache) {\n            throw process.env.NODE_ENV === \"production\" ? new InvariantError(1) : new InvariantError(\"In order to initialize Apollo Client, you must specify 'link' and 'cache' properties in the options object.\\n\" +\n                \"These options are part of the upgrade requirements when migrating from Apollo Client 1.x to Apollo Client 2.x.\\n\" +\n                \"For more information, please visit: https://www.apollographql.com/docs/tutorial/client.html#apollo-client-setup\");\n        }\n        this.link = link;\n        this.cache = cache;\n        this.store = new DataStore(cache);\n        this.disableNetworkFetches = ssrMode || ssrForceFetchDelay > 0;\n        this.queryDeduplication = queryDeduplication;\n        this.defaultOptions = defaultOptions || {};\n        this.typeDefs = typeDefs;\n        if (ssrForceFetchDelay) {\n            setTimeout(function () { return (_this.disableNetworkFetches = false); }, ssrForceFetchDelay);\n        }\n        this.watchQuery = this.watchQuery.bind(this);\n        this.query = this.query.bind(this);\n        this.mutate = this.mutate.bind(this);\n        this.resetStore = this.resetStore.bind(this);\n        this.reFetchObservableQueries = this.reFetchObservableQueries.bind(this);\n        var defaultConnectToDevTools = process.env.NODE_ENV !== 'production' &&\n            typeof window !== 'undefined' &&\n            !window.__APOLLO_CLIENT__;\n        if (typeof connectToDevTools === 'undefined'\n            ? defaultConnectToDevTools\n            : connectToDevTools && typeof window !== 'undefined') {\n            window.__APOLLO_CLIENT__ = this;\n        }\n        if (!hasSuggestedDevtools && process.env.NODE_ENV !== 'production') {\n            hasSuggestedDevtools = true;\n            if (typeof window !== 'undefined' &&\n                window.document &&\n                window.top === window.self) {\n                if (typeof window.__APOLLO_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n                    if (window.navigator &&\n                        window.navigator.userAgent &&\n                        window.navigator.userAgent.indexOf('Chrome') > -1) {\n                        console.debug('Download the Apollo DevTools ' +\n                            'for a better development experience: ' +\n                            'https://chrome.google.com/webstore/detail/apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm');\n                    }\n                }\n            }\n        }\n        this.version = version;\n        this.localState = new LocalState({\n            cache: cache,\n            client: this,\n            resolvers: resolvers,\n            fragmentMatcher: fragmentMatcher,\n        });\n        this.queryManager = new QueryManager({\n            link: this.link,\n            store: this.store,\n            queryDeduplication: queryDeduplication,\n            ssrMode: ssrMode,\n            clientAwareness: {\n                name: clientAwarenessName,\n                version: clientAwarenessVersion,\n            },\n            localState: this.localState,\n            assumeImmutableResults: assumeImmutableResults,\n            onBroadcast: function () {\n                if (_this.devToolsHookCb) {\n                    _this.devToolsHookCb({\n                        action: {},\n                        state: {\n                            queries: _this.queryManager.queryStore.getStore(),\n                            mutations: _this.queryManager.mutationStore.getStore(),\n                        },\n                        dataWithOptimisticResults: _this.cache.extract(true),\n                    });\n                }\n            },\n        });\n    }\n    ApolloClient.prototype.stop = function () {\n        this.queryManager.stop();\n    };\n    ApolloClient.prototype.watchQuery = function (options) {\n        if (this.defaultOptions.watchQuery) {\n            options = __assign(__assign({}, this.defaultOptions.watchQuery), options);\n        }\n        if (this.disableNetworkFetches &&\n            (options.fetchPolicy === 'network-only' ||\n                options.fetchPolicy === 'cache-and-network')) {\n            options = __assign(__assign({}, options), { fetchPolicy: 'cache-first' });\n        }\n        return this.queryManager.watchQuery(options);\n    };\n    ApolloClient.prototype.query = function (options) {\n        if (this.defaultOptions.query) {\n            options = __assign(__assign({}, this.defaultOptions.query), options);\n        }\n        process.env.NODE_ENV === \"production\" ? invariant(options.fetchPolicy !== 'cache-and-network', 2) : invariant(options.fetchPolicy !== 'cache-and-network', 'The cache-and-network fetchPolicy does not work with client.query, because ' +\n            'client.query can only return a single result. Please use client.watchQuery ' +\n            'to receive multiple results from the cache and the network, or consider ' +\n            'using a different fetchPolicy, such as cache-first or network-only.');\n        if (this.disableNetworkFetches && options.fetchPolicy === 'network-only') {\n            options = __assign(__assign({}, options), { fetchPolicy: 'cache-first' });\n        }\n        return this.queryManager.query(options);\n    };\n    ApolloClient.prototype.mutate = function (options) {\n        if (this.defaultOptions.mutate) {\n            options = __assign(__assign({}, this.defaultOptions.mutate), options);\n        }\n        return this.queryManager.mutate(options);\n    };\n    ApolloClient.prototype.subscribe = function (options) {\n        return this.queryManager.startGraphQLSubscription(options);\n    };\n    ApolloClient.prototype.readQuery = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.cache.readQuery(options, optimistic);\n    };\n    ApolloClient.prototype.readFragment = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.cache.readFragment(options, optimistic);\n    };\n    ApolloClient.prototype.writeQuery = function (options) {\n        var result = this.cache.writeQuery(options);\n        this.queryManager.broadcastQueries();\n        return result;\n    };\n    ApolloClient.prototype.writeFragment = function (options) {\n        var result = this.cache.writeFragment(options);\n        this.queryManager.broadcastQueries();\n        return result;\n    };\n    ApolloClient.prototype.writeData = function (options) {\n        var result = this.cache.writeData(options);\n        this.queryManager.broadcastQueries();\n        return result;\n    };\n    ApolloClient.prototype.__actionHookForDevTools = function (cb) {\n        this.devToolsHookCb = cb;\n    };\n    ApolloClient.prototype.__requestRaw = function (payload) {\n        return execute(this.link, payload);\n    };\n    ApolloClient.prototype.initQueryManager = function () {\n        process.env.NODE_ENV === \"production\" || invariant.warn('Calling the initQueryManager method is no longer necessary, ' +\n            'and it will be removed from ApolloClient in version 3.0.');\n        return this.queryManager;\n    };\n    ApolloClient.prototype.resetStore = function () {\n        var _this = this;\n        return Promise.resolve()\n            .then(function () { return _this.queryManager.clearStore(); })\n            .then(function () { return Promise.all(_this.resetStoreCallbacks.map(function (fn) { return fn(); })); })\n            .then(function () { return _this.reFetchObservableQueries(); });\n    };\n    ApolloClient.prototype.clearStore = function () {\n        var _this = this;\n        return Promise.resolve()\n            .then(function () { return _this.queryManager.clearStore(); })\n            .then(function () { return Promise.all(_this.clearStoreCallbacks.map(function (fn) { return fn(); })); });\n    };\n    ApolloClient.prototype.onResetStore = function (cb) {\n        var _this = this;\n        this.resetStoreCallbacks.push(cb);\n        return function () {\n            _this.resetStoreCallbacks = _this.resetStoreCallbacks.filter(function (c) { return c !== cb; });\n        };\n    };\n    ApolloClient.prototype.onClearStore = function (cb) {\n        var _this = this;\n        this.clearStoreCallbacks.push(cb);\n        return function () {\n            _this.clearStoreCallbacks = _this.clearStoreCallbacks.filter(function (c) { return c !== cb; });\n        };\n    };\n    ApolloClient.prototype.reFetchObservableQueries = function (includeStandby) {\n        return this.queryManager.reFetchObservableQueries(includeStandby);\n    };\n    ApolloClient.prototype.extract = function (optimistic) {\n        return this.cache.extract(optimistic);\n    };\n    ApolloClient.prototype.restore = function (serializedState) {\n        return this.cache.restore(serializedState);\n    };\n    ApolloClient.prototype.addResolvers = function (resolvers) {\n        this.localState.addResolvers(resolvers);\n    };\n    ApolloClient.prototype.setResolvers = function (resolvers) {\n        this.localState.setResolvers(resolvers);\n    };\n    ApolloClient.prototype.getResolvers = function () {\n        return this.localState.getResolvers();\n    };\n    ApolloClient.prototype.setLocalStateFragmentMatcher = function (fragmentMatcher) {\n        this.localState.setFragmentMatcher(fragmentMatcher);\n    };\n    return ApolloClient;\n}());\n\nexport default ApolloClient;\nexport { ApolloClient, ApolloError, FetchType, NetworkStatus, ObservableQuery, isApolloError };\n//# sourceMappingURL=bundle.esm.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar apollo_utilities_1 = require(\"apollo-utilities\");\nvar graphql_1 = require(\"./graphql\");\nfunction graphql(resolver, document, rootValue, contextValue, variableValues, execOptions) {\n    if (execOptions === void 0) { execOptions = {}; }\n    var mainDefinition = apollo_utilities_1.getMainDefinition(document);\n    var fragments = apollo_utilities_1.getFragmentDefinitions(document);\n    var fragmentMap = apollo_utilities_1.createFragmentMap(fragments);\n    var resultMapper = execOptions.resultMapper;\n    var fragmentMatcher = execOptions.fragmentMatcher || (function () { return true; });\n    var execContext = {\n        fragmentMap: fragmentMap,\n        contextValue: contextValue,\n        variableValues: variableValues,\n        resultMapper: resultMapper,\n        resolver: resolver,\n        fragmentMatcher: fragmentMatcher,\n    };\n    return executeSelectionSet(mainDefinition.selectionSet, rootValue, execContext);\n}\nexports.graphql = graphql;\nfunction executeSelectionSet(selectionSet, rootValue, execContext) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n        var fragmentMap, contextValue, variables, result, execute;\n        var _this = this;\n        return tslib_1.__generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    fragmentMap = execContext.fragmentMap, contextValue = execContext.contextValue, variables = execContext.variableValues;\n                    result = {};\n                    execute = function (selection) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n                        var fieldResult, resultFieldKey, fragment, typeCondition, fragmentResult;\n                        return tslib_1.__generator(this, function (_a) {\n                            switch (_a.label) {\n                                case 0:\n                                    if (!apollo_utilities_1.shouldInclude(selection, variables)) {\n                                        return [2];\n                                    }\n                                    if (!apollo_utilities_1.isField(selection)) return [3, 2];\n                                    return [4, executeField(selection, rootValue, execContext)];\n                                case 1:\n                                    fieldResult = _a.sent();\n                                    resultFieldKey = apollo_utilities_1.resultKeyNameFromField(selection);\n                                    if (fieldResult !== undefined) {\n                                        if (result[resultFieldKey] === undefined) {\n                                            result[resultFieldKey] = fieldResult;\n                                        }\n                                        else {\n                                            graphql_1.merge(result[resultFieldKey], fieldResult);\n                                        }\n                                    }\n                                    return [2];\n                                case 2:\n                                    if (apollo_utilities_1.isInlineFragment(selection)) {\n                                        fragment = selection;\n                                    }\n                                    else {\n                                        fragment = fragmentMap[selection.name.value];\n                                        if (!fragment) {\n                                            throw new Error(\"No fragment named \" + selection.name.value);\n                                        }\n                                    }\n                                    typeCondition = fragment.typeCondition.name.value;\n                                    if (!execContext.fragmentMatcher(rootValue, typeCondition, contextValue)) return [3, 4];\n                                    return [4, executeSelectionSet(fragment.selectionSet, rootValue, execContext)];\n                                case 3:\n                                    fragmentResult = _a.sent();\n                                    graphql_1.merge(result, fragmentResult);\n                                    _a.label = 4;\n                                case 4: return [2];\n                            }\n                        });\n                    }); };\n                    return [4, Promise.all(selectionSet.selections.map(execute))];\n                case 1:\n                    _a.sent();\n                    if (execContext.resultMapper) {\n                        return [2, execContext.resultMapper(result, rootValue)];\n                    }\n                    return [2, result];\n            }\n        });\n    });\n}\nfunction executeField(field, rootValue, execContext) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n        var variables, contextValue, resolver, fieldName, args, info, result;\n        return tslib_1.__generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    variables = execContext.variableValues, contextValue = execContext.contextValue, resolver = execContext.resolver;\n                    fieldName = field.name.value;\n                    args = apollo_utilities_1.argumentsObjectFromField(field, variables);\n                    info = {\n                        isLeaf: !field.selectionSet,\n                        resultKey: apollo_utilities_1.resultKeyNameFromField(field),\n                        directives: apollo_utilities_1.getDirectiveInfoFromField(field, variables),\n                        field: field,\n                    };\n                    return [4, resolver(fieldName, rootValue, args, contextValue, info)];\n                case 1:\n                    result = _a.sent();\n                    if (!field.selectionSet) {\n                        return [2, result];\n                    }\n                    if (result == null) {\n                        return [2, result];\n                    }\n                    if (Array.isArray(result)) {\n                        return [2, executeSubSelectedArray(field, result, execContext)];\n                    }\n                    return [2, executeSelectionSet(field.selectionSet, result, execContext)];\n            }\n        });\n    });\n}\nfunction executeSubSelectedArray(field, result, execContext) {\n    return Promise.all(result.map(function (item) {\n        if (item === null) {\n            return null;\n        }\n        if (Array.isArray(item)) {\n            return executeSubSelectedArray(field, item, execContext);\n        }\n        return executeSelectionSet(field.selectionSet, item, execContext);\n    }));\n}\n//# sourceMappingURL=async.js.map","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","var parser = require('graphql/language/parser');\n\nvar parse = parser.parse;\n\n// Strip insignificant whitespace\n// Note that this could do a lot more, such as reorder fields etc.\nfunction normalize(string) {\n  return string.replace(/[\\s,]+/g, ' ').trim();\n}\n\n// A map docString -> graphql document\nvar docCache = {};\n\n// A map fragmentName -> [normalized source]\nvar fragmentSourceMap = {};\n\nfunction cacheKeyFromLoc(loc) {\n  return normalize(loc.source.body.substring(loc.start, loc.end));\n}\n\n// For testing.\nfunction resetCaches() {\n  docCache = {};\n  fragmentSourceMap = {};\n}\n\n// Take a unstripped parsed document (query/mutation or even fragment), and\n// check all fragment definitions, checking for name->source uniqueness.\n// We also want to make sure only unique fragments exist in the document.\nvar printFragmentWarnings = true;\nfunction processFragments(ast) {\n  var astFragmentMap = {};\n  var definitions = [];\n\n  for (var i = 0; i < ast.definitions.length; i++) {\n    var fragmentDefinition = ast.definitions[i];\n\n    if (fragmentDefinition.kind === 'FragmentDefinition') {\n      var fragmentName = fragmentDefinition.name.value;\n      var sourceKey = cacheKeyFromLoc(fragmentDefinition.loc);\n\n      // We know something about this fragment\n      if (fragmentSourceMap.hasOwnProperty(fragmentName) && !fragmentSourceMap[fragmentName][sourceKey]) {\n\n        // this is a problem because the app developer is trying to register another fragment with\n        // the same name as one previously registered. So, we tell them about it.\n        if (printFragmentWarnings) {\n          console.warn(\"Warning: fragment with name \" + fragmentName + \" already exists.\\n\"\n            + \"graphql-tag enforces all fragment names across your application to be unique; read more about\\n\"\n            + \"this in the docs: http://dev.apollodata.com/core/fragments.html#unique-names\");\n        }\n\n        fragmentSourceMap[fragmentName][sourceKey] = true;\n\n      } else if (!fragmentSourceMap.hasOwnProperty(fragmentName)) {\n        fragmentSourceMap[fragmentName] = {};\n        fragmentSourceMap[fragmentName][sourceKey] = true;\n      }\n\n      if (!astFragmentMap[sourceKey]) {\n        astFragmentMap[sourceKey] = true;\n        definitions.push(fragmentDefinition);\n      }\n    } else {\n      definitions.push(fragmentDefinition);\n    }\n  }\n\n  ast.definitions = definitions;\n  return ast;\n}\n\nfunction disableFragmentWarnings() {\n  printFragmentWarnings = false;\n}\n\nfunction stripLoc(doc, removeLocAtThisLevel) {\n  var docType = Object.prototype.toString.call(doc);\n\n  if (docType === '[object Array]') {\n    return doc.map(function (d) {\n      return stripLoc(d, removeLocAtThisLevel);\n    });\n  }\n\n  if (docType !== '[object Object]') {\n    throw new Error('Unexpected input.');\n  }\n\n  // We don't want to remove the root loc field so we can use it\n  // for fragment substitution (see below)\n  if (removeLocAtThisLevel && doc.loc) {\n    delete doc.loc;\n  }\n\n  // https://github.com/apollographql/graphql-tag/issues/40\n  if (doc.loc) {\n    delete doc.loc.startToken;\n    delete doc.loc.endToken;\n  }\n\n  var keys = Object.keys(doc);\n  var key;\n  var value;\n  var valueType;\n\n  for (key in keys) {\n    if (keys.hasOwnProperty(key)) {\n      value = doc[keys[key]];\n      valueType = Object.prototype.toString.call(value);\n\n      if (valueType === '[object Object]' || valueType === '[object Array]') {\n        doc[keys[key]] = stripLoc(value, true);\n      }\n    }\n  }\n\n  return doc;\n}\n\nvar experimentalFragmentVariables = false;\nfunction parseDocument(doc) {\n  var cacheKey = normalize(doc);\n\n  if (docCache[cacheKey]) {\n    return docCache[cacheKey];\n  }\n\n  var parsed = parse(doc, { experimentalFragmentVariables: experimentalFragmentVariables });\n  if (!parsed || parsed.kind !== 'Document') {\n    throw new Error('Not a valid GraphQL document.');\n  }\n\n  // check that all \"new\" fragments inside the documents are consistent with\n  // existing fragments of the same name\n  parsed = processFragments(parsed);\n  parsed = stripLoc(parsed, false);\n  docCache[cacheKey] = parsed;\n\n  return parsed;\n}\n\nfunction enableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = true;\n}\n\nfunction disableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = false;\n}\n\n// XXX This should eventually disallow arbitrary string interpolation, like Relay does\nfunction gql(/* arguments */) {\n  var args = Array.prototype.slice.call(arguments);\n\n  var literals = args[0];\n\n  // We always get literals[0] and then matching post literals for each arg given\n  var result = (typeof(literals) === \"string\") ? literals : literals[0];\n\n  for (var i = 1; i < args.length; i++) {\n    if (args[i] && args[i].kind && args[i].kind === 'Document') {\n      result += args[i].loc.source.body;\n    } else {\n      result += args[i];\n    }\n\n    result += literals[i];\n  }\n\n  return parseDocument(result);\n}\n\n// Support typescript, which isn't as nice as Babel about default exports\ngql.default = gql;\ngql.resetCaches = resetCaches;\ngql.disableFragmentWarnings = disableFragmentWarnings;\ngql.enableExperimentalFragmentVariables = enableExperimentalFragmentVariables;\ngql.disableExperimentalFragmentVariables = disableExperimentalFragmentVariables;\n\nmodule.exports = gql;\n","import React from 'react';\nimport { invariant } from 'ts-invariant';\n\nvar apolloContext;\nfunction getApolloContext() {\n    if (!apolloContext) {\n        apolloContext = React.createContext({});\n    }\n    return apolloContext;\n}\nfunction resetApolloContext() {\n    apolloContext = React.createContext({});\n}\n\nvar ApolloProvider = function (_a) {\n    var client = _a.client, children = _a.children;\n    var ApolloContext = getApolloContext();\n    return React.createElement(ApolloContext.Consumer, null, function (context) {\n        if (context === void 0) { context = {}; }\n        if (client && context.client !== client) {\n            context = Object.assign({}, context, { client: client });\n        }\n        process.env.NODE_ENV === \"production\" ? invariant(context.client, 5) : invariant(context.client, 'ApolloProvider was not passed a client instance. Make ' +\n            'sure you pass in your client via the \"client\" prop.');\n        return (React.createElement(ApolloContext.Provider, { value: context }, children));\n    });\n};\n\nvar ApolloConsumer = function (props) {\n    var ApolloContext = getApolloContext();\n    return React.createElement(ApolloContext.Consumer, null, function (context) {\n        process.env.NODE_ENV === \"production\" ? invariant(context && context.client, 6) : invariant(context && context.client, 'Could not find \"client\" in the context of ApolloConsumer. ' +\n            'Wrap the root component in an <ApolloProvider>.');\n        return props.children(context.client);\n    });\n};\n\nvar DocumentType;\n(function (DocumentType) {\n    DocumentType[DocumentType[\"Query\"] = 0] = \"Query\";\n    DocumentType[DocumentType[\"Mutation\"] = 1] = \"Mutation\";\n    DocumentType[DocumentType[\"Subscription\"] = 2] = \"Subscription\";\n})(DocumentType || (DocumentType = {}));\nvar cache = new Map();\nfunction operationName(type) {\n    var name;\n    switch (type) {\n        case DocumentType.Query:\n            name = 'Query';\n            break;\n        case DocumentType.Mutation:\n            name = 'Mutation';\n            break;\n        case DocumentType.Subscription:\n            name = 'Subscription';\n            break;\n    }\n    return name;\n}\nfunction parser(document) {\n    var cached = cache.get(document);\n    if (cached)\n        return cached;\n    var variables, type, name;\n    process.env.NODE_ENV === \"production\" ? invariant(!!document && !!document.kind, 1) : invariant(!!document && !!document.kind, \"Argument of \" + document + \" passed to parser was not a valid GraphQL \" +\n        \"DocumentNode. You may need to use 'graphql-tag' or another method \" +\n        \"to convert your operation into a document\");\n    var fragments = document.definitions.filter(function (x) { return x.kind === 'FragmentDefinition'; });\n    var queries = document.definitions.filter(function (x) {\n        return x.kind === 'OperationDefinition' && x.operation === 'query';\n    });\n    var mutations = document.definitions.filter(function (x) {\n        return x.kind === 'OperationDefinition' && x.operation === 'mutation';\n    });\n    var subscriptions = document.definitions.filter(function (x) {\n        return x.kind === 'OperationDefinition' && x.operation === 'subscription';\n    });\n    process.env.NODE_ENV === \"production\" ? invariant(!fragments.length ||\n        (queries.length || mutations.length || subscriptions.length), 2) : invariant(!fragments.length ||\n        (queries.length || mutations.length || subscriptions.length), \"Passing only a fragment to 'graphql' is not yet supported. \" +\n        \"You must include a query, subscription or mutation as well\");\n    process.env.NODE_ENV === \"production\" ? invariant(queries.length + mutations.length + subscriptions.length <= 1, 3) : invariant(queries.length + mutations.length + subscriptions.length <= 1, \"react-apollo only supports a query, subscription, or a mutation per HOC. \" +\n        (document + \" had \" + queries.length + \" queries, \" + subscriptions.length + \" \") +\n        (\"subscriptions and \" + mutations.length + \" mutations. \") +\n        \"You can use 'compose' to join multiple operation types to a component\");\n    type = queries.length ? DocumentType.Query : DocumentType.Mutation;\n    if (!queries.length && !mutations.length)\n        type = DocumentType.Subscription;\n    var definitions = queries.length\n        ? queries\n        : mutations.length\n            ? mutations\n            : subscriptions;\n    process.env.NODE_ENV === \"production\" ? invariant(definitions.length === 1, 4) : invariant(definitions.length === 1, \"react-apollo only supports one definition per HOC. \" + document + \" had \" +\n        (definitions.length + \" definitions. \") +\n        \"You can use 'compose' to join multiple operation types to a component\");\n    var definition = definitions[0];\n    variables = definition.variableDefinitions || [];\n    if (definition.name && definition.name.kind === 'Name') {\n        name = definition.name.value;\n    }\n    else {\n        name = 'data';\n    }\n    var payload = { name: name, type: type, variables: variables };\n    cache.set(document, payload);\n    return payload;\n}\n\nexport { ApolloConsumer, ApolloProvider, DocumentType, getApolloContext, operationName, parser, resetApolloContext };\n//# sourceMappingURL=react-common.esm.js.map\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Observable = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n// === Symbol Support ===\nvar hasSymbols = function () {\n  return typeof Symbol === 'function';\n};\n\nvar hasSymbol = function (name) {\n  return hasSymbols() && Boolean(Symbol[name]);\n};\n\nvar getSymbol = function (name) {\n  return hasSymbol(name) ? Symbol[name] : '@@' + name;\n};\n\nif (hasSymbols() && !hasSymbol('observable')) {\n  Symbol.observable = Symbol('observable');\n}\n\nvar SymbolIterator = getSymbol('iterator');\nvar SymbolObservable = getSymbol('observable');\nvar SymbolSpecies = getSymbol('species'); // === Abstract Operations ===\n\nfunction getMethod(obj, key) {\n  var value = obj[key];\n  if (value == null) return undefined;\n  if (typeof value !== 'function') throw new TypeError(value + ' is not a function');\n  return value;\n}\n\nfunction getSpecies(obj) {\n  var ctor = obj.constructor;\n\n  if (ctor !== undefined) {\n    ctor = ctor[SymbolSpecies];\n\n    if (ctor === null) {\n      ctor = undefined;\n    }\n  }\n\n  return ctor !== undefined ? ctor : Observable;\n}\n\nfunction isObservable(x) {\n  return x instanceof Observable; // SPEC: Brand check\n}\n\nfunction hostReportError(e) {\n  if (hostReportError.log) {\n    hostReportError.log(e);\n  } else {\n    setTimeout(function () {\n      throw e;\n    });\n  }\n}\n\nfunction enqueue(fn) {\n  Promise.resolve().then(function () {\n    try {\n      fn();\n    } catch (e) {\n      hostReportError(e);\n    }\n  });\n}\n\nfunction cleanupSubscription(subscription) {\n  var cleanup = subscription._cleanup;\n  if (cleanup === undefined) return;\n  subscription._cleanup = undefined;\n\n  if (!cleanup) {\n    return;\n  }\n\n  try {\n    if (typeof cleanup === 'function') {\n      cleanup();\n    } else {\n      var unsubscribe = getMethod(cleanup, 'unsubscribe');\n\n      if (unsubscribe) {\n        unsubscribe.call(cleanup);\n      }\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n}\n\nfunction closeSubscription(subscription) {\n  subscription._observer = undefined;\n  subscription._queue = undefined;\n  subscription._state = 'closed';\n}\n\nfunction flushSubscription(subscription) {\n  var queue = subscription._queue;\n\n  if (!queue) {\n    return;\n  }\n\n  subscription._queue = undefined;\n  subscription._state = 'ready';\n\n  for (var i = 0; i < queue.length; ++i) {\n    notifySubscription(subscription, queue[i].type, queue[i].value);\n    if (subscription._state === 'closed') break;\n  }\n}\n\nfunction notifySubscription(subscription, type, value) {\n  subscription._state = 'running';\n  var observer = subscription._observer;\n\n  try {\n    var m = getMethod(observer, type);\n\n    switch (type) {\n      case 'next':\n        if (m) m.call(observer, value);\n        break;\n\n      case 'error':\n        closeSubscription(subscription);\n        if (m) m.call(observer, value);else throw value;\n        break;\n\n      case 'complete':\n        closeSubscription(subscription);\n        if (m) m.call(observer);\n        break;\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n\n  if (subscription._state === 'closed') cleanupSubscription(subscription);else if (subscription._state === 'running') subscription._state = 'ready';\n}\n\nfunction onNotify(subscription, type, value) {\n  if (subscription._state === 'closed') return;\n\n  if (subscription._state === 'buffering') {\n    subscription._queue.push({\n      type: type,\n      value: value\n    });\n\n    return;\n  }\n\n  if (subscription._state !== 'ready') {\n    subscription._state = 'buffering';\n    subscription._queue = [{\n      type: type,\n      value: value\n    }];\n    enqueue(function () {\n      return flushSubscription(subscription);\n    });\n    return;\n  }\n\n  notifySubscription(subscription, type, value);\n}\n\nvar Subscription =\n/*#__PURE__*/\nfunction () {\n  function Subscription(observer, subscriber) {\n    _classCallCheck(this, Subscription);\n\n    // ASSERT: observer is an object\n    // ASSERT: subscriber is callable\n    this._cleanup = undefined;\n    this._observer = observer;\n    this._queue = undefined;\n    this._state = 'initializing';\n    var subscriptionObserver = new SubscriptionObserver(this);\n\n    try {\n      this._cleanup = subscriber.call(undefined, subscriptionObserver);\n    } catch (e) {\n      subscriptionObserver.error(e);\n    }\n\n    if (this._state === 'initializing') this._state = 'ready';\n  }\n\n  _createClass(Subscription, [{\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      if (this._state !== 'closed') {\n        closeSubscription(this);\n        cleanupSubscription(this);\n      }\n    }\n  }, {\n    key: \"closed\",\n    get: function () {\n      return this._state === 'closed';\n    }\n  }]);\n\n  return Subscription;\n}();\n\nvar SubscriptionObserver =\n/*#__PURE__*/\nfunction () {\n  function SubscriptionObserver(subscription) {\n    _classCallCheck(this, SubscriptionObserver);\n\n    this._subscription = subscription;\n  }\n\n  _createClass(SubscriptionObserver, [{\n    key: \"next\",\n    value: function next(value) {\n      onNotify(this._subscription, 'next', value);\n    }\n  }, {\n    key: \"error\",\n    value: function error(value) {\n      onNotify(this._subscription, 'error', value);\n    }\n  }, {\n    key: \"complete\",\n    value: function complete() {\n      onNotify(this._subscription, 'complete');\n    }\n  }, {\n    key: \"closed\",\n    get: function () {\n      return this._subscription._state === 'closed';\n    }\n  }]);\n\n  return SubscriptionObserver;\n}();\n\nvar Observable =\n/*#__PURE__*/\nfunction () {\n  function Observable(subscriber) {\n    _classCallCheck(this, Observable);\n\n    if (!(this instanceof Observable)) throw new TypeError('Observable cannot be called as a function');\n    if (typeof subscriber !== 'function') throw new TypeError('Observable initializer must be a function');\n    this._subscriber = subscriber;\n  }\n\n  _createClass(Observable, [{\n    key: \"subscribe\",\n    value: function subscribe(observer) {\n      if (typeof observer !== 'object' || observer === null) {\n        observer = {\n          next: observer,\n          error: arguments[1],\n          complete: arguments[2]\n        };\n      }\n\n      return new Subscription(observer, this._subscriber);\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(fn) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        if (typeof fn !== 'function') {\n          reject(new TypeError(fn + ' is not a function'));\n          return;\n        }\n\n        function done() {\n          subscription.unsubscribe();\n          resolve();\n        }\n\n        var subscription = _this.subscribe({\n          next: function (value) {\n            try {\n              fn(value, done);\n            } catch (e) {\n              reject(e);\n              subscription.unsubscribe();\n            }\n          },\n          error: reject,\n          complete: resolve\n        });\n      });\n    }\n  }, {\n    key: \"map\",\n    value: function map(fn) {\n      var _this2 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n      var C = getSpecies(this);\n      return new C(function (observer) {\n        return _this2.subscribe({\n          next: function (value) {\n            try {\n              value = fn(value);\n            } catch (e) {\n              return observer.error(e);\n            }\n\n            observer.next(value);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: \"filter\",\n    value: function filter(fn) {\n      var _this3 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n      var C = getSpecies(this);\n      return new C(function (observer) {\n        return _this3.subscribe({\n          next: function (value) {\n            try {\n              if (!fn(value)) return;\n            } catch (e) {\n              return observer.error(e);\n            }\n\n            observer.next(value);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: \"reduce\",\n    value: function reduce(fn) {\n      var _this4 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n      var C = getSpecies(this);\n      var hasSeed = arguments.length > 1;\n      var hasValue = false;\n      var seed = arguments[1];\n      var acc = seed;\n      return new C(function (observer) {\n        return _this4.subscribe({\n          next: function (value) {\n            var first = !hasValue;\n            hasValue = true;\n\n            if (!first || hasSeed) {\n              try {\n                acc = fn(acc, value);\n              } catch (e) {\n                return observer.error(e);\n              }\n            } else {\n              acc = value;\n            }\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            if (!hasValue && !hasSeed) return observer.error(new TypeError('Cannot reduce an empty sequence'));\n            observer.next(acc);\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: \"concat\",\n    value: function concat() {\n      var _this5 = this;\n\n      for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n        sources[_key] = arguments[_key];\n      }\n\n      var C = getSpecies(this);\n      return new C(function (observer) {\n        var subscription;\n        var index = 0;\n\n        function startNext(next) {\n          subscription = next.subscribe({\n            next: function (v) {\n              observer.next(v);\n            },\n            error: function (e) {\n              observer.error(e);\n            },\n            complete: function () {\n              if (index === sources.length) {\n                subscription = undefined;\n                observer.complete();\n              } else {\n                startNext(C.from(sources[index++]));\n              }\n            }\n          });\n        }\n\n        startNext(_this5);\n        return function () {\n          if (subscription) {\n            subscription.unsubscribe();\n            subscription = undefined;\n          }\n        };\n      });\n    }\n  }, {\n    key: \"flatMap\",\n    value: function flatMap(fn) {\n      var _this6 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n      var C = getSpecies(this);\n      return new C(function (observer) {\n        var subscriptions = [];\n\n        var outer = _this6.subscribe({\n          next: function (value) {\n            if (fn) {\n              try {\n                value = fn(value);\n              } catch (e) {\n                return observer.error(e);\n              }\n            }\n\n            var inner = C.from(value).subscribe({\n              next: function (value) {\n                observer.next(value);\n              },\n              error: function (e) {\n                observer.error(e);\n              },\n              complete: function () {\n                var i = subscriptions.indexOf(inner);\n                if (i >= 0) subscriptions.splice(i, 1);\n                completeIfDone();\n              }\n            });\n            subscriptions.push(inner);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            completeIfDone();\n          }\n        });\n\n        function completeIfDone() {\n          if (outer.closed && subscriptions.length === 0) observer.complete();\n        }\n\n        return function () {\n          subscriptions.forEach(function (s) {\n            return s.unsubscribe();\n          });\n          outer.unsubscribe();\n        };\n      });\n    }\n  }, {\n    key: SymbolObservable,\n    value: function () {\n      return this;\n    }\n  }], [{\n    key: \"from\",\n    value: function from(x) {\n      var C = typeof this === 'function' ? this : Observable;\n      if (x == null) throw new TypeError(x + ' is not an object');\n      var method = getMethod(x, SymbolObservable);\n\n      if (method) {\n        var observable = method.call(x);\n        if (Object(observable) !== observable) throw new TypeError(observable + ' is not an object');\n        if (isObservable(observable) && observable.constructor === C) return observable;\n        return new C(function (observer) {\n          return observable.subscribe(observer);\n        });\n      }\n\n      if (hasSymbol('iterator')) {\n        method = getMethod(x, SymbolIterator);\n\n        if (method) {\n          return new C(function (observer) {\n            enqueue(function () {\n              if (observer.closed) return;\n              var _iteratorNormalCompletion = true;\n              var _didIteratorError = false;\n              var _iteratorError = undefined;\n\n              try {\n                for (var _iterator = method.call(x)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                  var _item = _step.value;\n                  observer.next(_item);\n                  if (observer.closed) return;\n                }\n              } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                  }\n                } finally {\n                  if (_didIteratorError) {\n                    throw _iteratorError;\n                  }\n                }\n              }\n\n              observer.complete();\n            });\n          });\n        }\n      }\n\n      if (Array.isArray(x)) {\n        return new C(function (observer) {\n          enqueue(function () {\n            if (observer.closed) return;\n\n            for (var i = 0; i < x.length; ++i) {\n              observer.next(x[i]);\n              if (observer.closed) return;\n            }\n\n            observer.complete();\n          });\n        });\n      }\n\n      throw new TypeError(x + ' is not observable');\n    }\n  }, {\n    key: \"of\",\n    value: function of() {\n      for (var _len2 = arguments.length, items = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        items[_key2] = arguments[_key2];\n      }\n\n      var C = typeof this === 'function' ? this : Observable;\n      return new C(function (observer) {\n        enqueue(function () {\n          if (observer.closed) return;\n\n          for (var i = 0; i < items.length; ++i) {\n            observer.next(items[i]);\n            if (observer.closed) return;\n          }\n\n          observer.complete();\n        });\n      });\n    }\n  }, {\n    key: SymbolSpecies,\n    get: function () {\n      return this;\n    }\n  }]);\n\n  return Observable;\n}();\n\nexports.Observable = Observable;\n\nif (hasSymbols()) {\n  Object.defineProperty(Observable, Symbol('extensions'), {\n    value: {\n      symbol: SymbolObservable,\n      hostReportError: hostReportError\n    },\n    configurable: true\n  });\n}","import { __extends } from 'tslib';\n\nvar genericMessage = \"Invariant Violation\";\r\nvar _a = Object.setPrototypeOf, setPrototypeOf = _a === void 0 ? function (obj, proto) {\r\n    obj.__proto__ = proto;\r\n    return obj;\r\n} : _a;\r\nvar InvariantError = /** @class */ (function (_super) {\r\n    __extends(InvariantError, _super);\r\n    function InvariantError(message) {\r\n        if (message === void 0) { message = genericMessage; }\r\n        var _this = _super.call(this, typeof message === \"number\"\r\n            ? genericMessage + \": \" + message + \" (see https://github.com/apollographql/invariant-packages)\"\r\n            : message) || this;\r\n        _this.framesToPop = 1;\r\n        _this.name = genericMessage;\r\n        setPrototypeOf(_this, InvariantError.prototype);\r\n        return _this;\r\n    }\r\n    return InvariantError;\r\n}(Error));\r\nfunction invariant(condition, message) {\r\n    if (!condition) {\r\n        throw new InvariantError(message);\r\n    }\r\n}\r\nfunction wrapConsoleMethod(method) {\r\n    return function () {\r\n        return console[method].apply(console, arguments);\r\n    };\r\n}\r\n(function (invariant) {\r\n    invariant.warn = wrapConsoleMethod(\"warn\");\r\n    invariant.error = wrapConsoleMethod(\"error\");\r\n})(invariant || (invariant = {}));\r\n// Code that uses ts-invariant with rollup-plugin-invariant may want to\r\n// import this process stub to avoid errors evaluating process.env.NODE_ENV.\r\n// However, because most ESM-to-CJS compilers will rewrite the process import\r\n// as tsInvariant.process, which prevents proper replacement by minifiers, we\r\n// also attempt to define the stub globally when it is not already defined.\r\nvar processStub = { env: {} };\r\nif (typeof process === \"object\") {\r\n    processStub = process;\r\n}\r\nelse\r\n    try {\r\n        // Using Function to evaluate this assignment in global scope also escapes\r\n        // the strict mode of the current module, thereby allowing the assignment.\r\n        // Inspired by https://github.com/facebook/regenerator/pull/369.\r\n        Function(\"stub\", \"process = stub\")(processStub);\r\n    }\r\n    catch (atLeastWeTried) {\r\n        // The assignment can fail if a Content Security Policy heavy-handedly\r\n        // forbids Function usage. In those environments, developers should take\r\n        // extra care to replace process.env.NODE_ENV in their production builds,\r\n        // or define an appropriate global.process polyfill.\r\n    }\r\nvar invariant$1 = invariant;\n\nexport default invariant$1;\nexport { InvariantError, invariant, processStub as process };\n//# sourceMappingURL=invariant.esm.js.map\n","var _a = Object.prototype, toString = _a.toString, hasOwnProperty = _a.hasOwnProperty;\r\nvar previousComparisons = new Map();\r\n/**\r\n * Performs a deep equality check on two JavaScript values, tolerating cycles.\r\n */\r\nfunction equal(a, b) {\r\n    try {\r\n        return check(a, b);\r\n    }\r\n    finally {\r\n        previousComparisons.clear();\r\n    }\r\n}\r\nfunction check(a, b) {\r\n    // If the two values are strictly equal, our job is easy.\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n    // Object.prototype.toString returns a representation of the runtime type of\r\n    // the given value that is considerably more precise than typeof.\r\n    var aTag = toString.call(a);\r\n    var bTag = toString.call(b);\r\n    // If the runtime types of a and b are different, they could maybe be equal\r\n    // under some interpretation of equality, but for simplicity and performance\r\n    // we just return false instead.\r\n    if (aTag !== bTag) {\r\n        return false;\r\n    }\r\n    switch (aTag) {\r\n        case '[object Array]':\r\n            // Arrays are a lot like other objects, but we can cheaply compare their\r\n            // lengths as a short-cut before comparing their elements.\r\n            if (a.length !== b.length)\r\n                return false;\r\n        // Fall through to object case...\r\n        case '[object Object]': {\r\n            if (previouslyCompared(a, b))\r\n                return true;\r\n            var aKeys = Object.keys(a);\r\n            var bKeys = Object.keys(b);\r\n            // If `a` and `b` have a different number of enumerable keys, they\r\n            // must be different.\r\n            var keyCount = aKeys.length;\r\n            if (keyCount !== bKeys.length)\r\n                return false;\r\n            // Now make sure they have the same keys.\r\n            for (var k = 0; k < keyCount; ++k) {\r\n                if (!hasOwnProperty.call(b, aKeys[k])) {\r\n                    return false;\r\n                }\r\n            }\r\n            // Finally, check deep equality of all child properties.\r\n            for (var k = 0; k < keyCount; ++k) {\r\n                var key = aKeys[k];\r\n                if (!check(a[key], b[key])) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        case '[object Error]':\r\n            return a.name === b.name && a.message === b.message;\r\n        case '[object Number]':\r\n            // Handle NaN, which is !== itself.\r\n            if (a !== a)\r\n                return b !== b;\r\n        // Fall through to shared +a === +b case...\r\n        case '[object Boolean]':\r\n        case '[object Date]':\r\n            return +a === +b;\r\n        case '[object RegExp]':\r\n        case '[object String]':\r\n            return a == \"\" + b;\r\n        case '[object Map]':\r\n        case '[object Set]': {\r\n            if (a.size !== b.size)\r\n                return false;\r\n            if (previouslyCompared(a, b))\r\n                return true;\r\n            var aIterator = a.entries();\r\n            var isMap = aTag === '[object Map]';\r\n            while (true) {\r\n                var info = aIterator.next();\r\n                if (info.done)\r\n                    break;\r\n                // If a instanceof Set, aValue === aKey.\r\n                var _a = info.value, aKey = _a[0], aValue = _a[1];\r\n                // So this works the same way for both Set and Map.\r\n                if (!b.has(aKey)) {\r\n                    return false;\r\n                }\r\n                // However, we care about deep equality of values only when dealing\r\n                // with Map structures.\r\n                if (isMap && !check(aValue, b.get(aKey))) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n    // Otherwise the values are not equal.\r\n    return false;\r\n}\r\nfunction previouslyCompared(a, b) {\r\n    // Though cyclic references can make an object graph appear infinite from the\r\n    // perspective of a depth-first traversal, the graph still contains a finite\r\n    // number of distinct object references. We use the previousComparisons cache\r\n    // to avoid comparing the same pair of object references more than once, which\r\n    // guarantees termination (even if we end up comparing every object in one\r\n    // graph to every object in the other graph, which is extremely unlikely),\r\n    // while still allowing weird isomorphic structures (like rings with different\r\n    // lengths) a chance to pass the equality test.\r\n    var bSet = previousComparisons.get(a);\r\n    if (bSet) {\r\n        // Return true here because we can be sure false will be returned somewhere\r\n        // else if the objects are not equivalent.\r\n        if (bSet.has(b))\r\n            return true;\r\n    }\r\n    else {\r\n        previousComparisons.set(a, bSet = new Set);\r\n    }\r\n    bSet.add(b);\r\n    return false;\r\n}\n\nexport default equal;\nexport { equal };\n//# sourceMappingURL=equality.esm.js.map\n","import { parser, operationName, DocumentType, getApolloContext } from '@apollo/react-common';\nexport { ApolloConsumer, ApolloProvider, getApolloContext, resetApolloContext } from '@apollo/react-common';\nimport { __extends, __assign } from 'tslib';\nimport React, { useRef, useContext, useReducer, useEffect, useState } from 'react';\nimport { NetworkStatus, ApolloError } from 'apollo-client';\nimport { equal } from '@wry/equality';\nimport { invariant } from 'ts-invariant';\n\nvar OperationData = (function () {\n    function OperationData(options, context) {\n        this.isMounted = false;\n        this.previousOptions = {};\n        this.context = {};\n        this.options = {};\n        this.options = options || {};\n        this.context = context || {};\n    }\n    OperationData.prototype.getOptions = function () {\n        return this.options;\n    };\n    OperationData.prototype.setOptions = function (newOptions, storePrevious) {\n        if (storePrevious === void 0) { storePrevious = false; }\n        if (storePrevious && !equal(this.options, newOptions)) {\n            this.previousOptions = this.options;\n        }\n        this.options = newOptions;\n    };\n    OperationData.prototype.unmount = function () {\n        this.isMounted = false;\n    };\n    OperationData.prototype.refreshClient = function () {\n        var client = (this.options && this.options.client) ||\n            (this.context && this.context.client);\n        process.env.NODE_ENV === \"production\" ? invariant(!!client, 2) : invariant(!!client, 'Could not find \"client\" in the context or passed in as an option. ' +\n            'Wrap the root component in an <ApolloProvider>, or pass an ' +\n            'ApolloClient instance in via options.');\n        var isNew = false;\n        if (client !== this.client) {\n            isNew = true;\n            this.client = client;\n            this.cleanup();\n        }\n        return {\n            client: this.client,\n            isNew: isNew\n        };\n    };\n    OperationData.prototype.verifyDocumentType = function (document, type) {\n        var operation = parser(document);\n        var requiredOperationName = operationName(type);\n        var usedOperationName = operationName(operation.type);\n        process.env.NODE_ENV === \"production\" ? invariant(operation.type === type, 3) : invariant(operation.type === type, \"Running a \" + requiredOperationName + \" requires a graphql \" +\n            (requiredOperationName + \", but a \" + usedOperationName + \" was used instead.\"));\n    };\n    return OperationData;\n}());\n\nvar QueryData = (function (_super) {\n    __extends(QueryData, _super);\n    function QueryData(_a) {\n        var options = _a.options, context = _a.context, onNewData = _a.onNewData;\n        var _this = _super.call(this, options, context) || this;\n        _this.previousData = {};\n        _this.currentObservable = {};\n        _this.runLazy = false;\n        _this.runLazyQuery = function (options) {\n            _this.cleanup();\n            _this.runLazy = true;\n            _this.lazyOptions = options;\n            _this.onNewData();\n        };\n        _this.getExecuteResult = function () {\n            var result = _this.getQueryResult();\n            _this.startQuerySubscription();\n            return result;\n        };\n        _this.obsRefetch = function (variables) {\n            return _this.currentObservable.query.refetch(variables);\n        };\n        _this.obsFetchMore = function (fetchMoreOptions) { return _this.currentObservable.query.fetchMore(fetchMoreOptions); };\n        _this.obsUpdateQuery = function (mapFn) { return _this.currentObservable.query.updateQuery(mapFn); };\n        _this.obsStartPolling = function (pollInterval) {\n            _this.currentObservable &&\n                _this.currentObservable.query &&\n                _this.currentObservable.query.startPolling(pollInterval);\n        };\n        _this.obsStopPolling = function () {\n            _this.currentObservable &&\n                _this.currentObservable.query &&\n                _this.currentObservable.query.stopPolling();\n        };\n        _this.obsSubscribeToMore = function (options) { return _this.currentObservable.query.subscribeToMore(options); };\n        _this.onNewData = onNewData;\n        return _this;\n    }\n    QueryData.prototype.execute = function () {\n        this.refreshClient();\n        var _a = this.getOptions(), skip = _a.skip, query = _a.query;\n        if (skip || query !== this.previousData.query) {\n            this.removeQuerySubscription();\n            this.previousData.query = query;\n        }\n        this.updateObservableQuery();\n        if (this.isMounted)\n            this.startQuerySubscription();\n        return this.getExecuteSsrResult() || this.getExecuteResult();\n    };\n    QueryData.prototype.executeLazy = function () {\n        return !this.runLazy\n            ? [\n                this.runLazyQuery,\n                {\n                    loading: false,\n                    networkStatus: NetworkStatus.ready,\n                    called: false,\n                    data: undefined,\n                },\n            ]\n            : [this.runLazyQuery, this.execute()];\n    };\n    QueryData.prototype.fetchData = function () {\n        var options = this.getOptions();\n        if (options.skip || options.ssr === false)\n            return false;\n        var obs = this.currentObservable.query;\n        var currentResult = obs.getCurrentResult();\n        return currentResult.loading ? obs.result() : false;\n    };\n    QueryData.prototype.afterExecute = function (_a) {\n        var _b = (_a === void 0 ? {} : _a).lazy, lazy = _b === void 0 ? false : _b;\n        this.isMounted = true;\n        if (!lazy || this.runLazy) {\n            this.handleErrorOrCompleted();\n        }\n        this.previousOptions = this.getOptions();\n        return this.unmount.bind(this);\n    };\n    QueryData.prototype.cleanup = function () {\n        this.removeQuerySubscription();\n        delete this.currentObservable.query;\n        delete this.previousData.result;\n    };\n    QueryData.prototype.getOptions = function () {\n        var options = _super.prototype.getOptions.call(this);\n        if (this.lazyOptions) {\n            options.variables = __assign(__assign({}, options.variables), this.lazyOptions.variables);\n            options.context = __assign(__assign({}, options.context), this.lazyOptions.context);\n        }\n        if (this.runLazy) {\n            delete options.skip;\n        }\n        return options;\n    };\n    QueryData.prototype.ssrInitiated = function () {\n        return this.context && this.context.renderPromises;\n    };\n    QueryData.prototype.getExecuteSsrResult = function () {\n        var ssrDisabled = this.getOptions().ssr === false;\n        var fetchDisabled = this.refreshClient().client.disableNetworkFetches;\n        var ssrLoading = __assign({ loading: true, networkStatus: NetworkStatus.loading, called: true, data: undefined, stale: false, client: this.client }, this.observableQueryFields());\n        if (ssrDisabled && (this.ssrInitiated() || fetchDisabled)) {\n            this.previousData.result = ssrLoading;\n            return ssrLoading;\n        }\n        var result;\n        if (this.ssrInitiated()) {\n            result =\n                this.context.renderPromises.addQueryPromise(this, this.getExecuteResult) || ssrLoading;\n        }\n        return result;\n    };\n    QueryData.prototype.prepareObservableQueryOptions = function () {\n        var options = this.getOptions();\n        this.verifyDocumentType(options.query, DocumentType.Query);\n        var displayName = options.displayName || 'Query';\n        if (this.ssrInitiated() &&\n            (options.fetchPolicy === 'network-only' ||\n                options.fetchPolicy === 'cache-and-network')) {\n            options.fetchPolicy = 'cache-first';\n        }\n        return __assign(__assign({}, options), { displayName: displayName, context: options.context, metadata: { reactComponent: { displayName: displayName } } });\n    };\n    QueryData.prototype.initializeObservableQuery = function () {\n        var _a, _b;\n        if (this.ssrInitiated()) {\n            this.currentObservable.query = this.context.renderPromises.getSSRObservable(this.getOptions());\n        }\n        if (!this.currentObservable.query) {\n            var observableQueryOptions = this.prepareObservableQueryOptions();\n            this.previousData.observableQueryOptions = __assign(__assign({}, observableQueryOptions), { children: null });\n            this.currentObservable.query = this.refreshClient().client.watchQuery(__assign({}, observableQueryOptions));\n            if (this.ssrInitiated()) {\n                (_b = (_a = this.context) === null || _a === void 0 ? void 0 : _a.renderPromises) === null || _b === void 0 ? void 0 : _b.registerSSRObservable(this.currentObservable.query, observableQueryOptions);\n            }\n        }\n    };\n    QueryData.prototype.updateObservableQuery = function () {\n        if (!this.currentObservable.query) {\n            this.initializeObservableQuery();\n            return;\n        }\n        var newObservableQueryOptions = __assign(__assign({}, this.prepareObservableQueryOptions()), { children: null });\n        if (!equal(newObservableQueryOptions, this.previousData.observableQueryOptions)) {\n            this.previousData.observableQueryOptions = newObservableQueryOptions;\n            this.currentObservable\n                .query.setOptions(newObservableQueryOptions)\n                .catch(function () { });\n        }\n    };\n    QueryData.prototype.startQuerySubscription = function () {\n        var _this = this;\n        if (this.currentObservable.subscription || this.getOptions().skip)\n            return;\n        var obsQuery = this.currentObservable.query;\n        this.currentObservable.subscription = obsQuery.subscribe({\n            next: function (_a) {\n                var loading = _a.loading, networkStatus = _a.networkStatus, data = _a.data;\n                var previousResult = _this.previousData.result;\n                if (previousResult &&\n                    previousResult.loading === loading &&\n                    previousResult.networkStatus === networkStatus &&\n                    equal(previousResult.data, data)) {\n                    return;\n                }\n                _this.onNewData();\n            },\n            error: function (error) {\n                _this.resubscribeToQuery();\n                if (!error.hasOwnProperty('graphQLErrors'))\n                    throw error;\n                var previousResult = _this.previousData.result;\n                if ((previousResult && previousResult.loading) ||\n                    !equal(error, _this.previousData.error)) {\n                    _this.previousData.error = error;\n                    _this.onNewData();\n                }\n            },\n        });\n    };\n    QueryData.prototype.resubscribeToQuery = function () {\n        this.removeQuerySubscription();\n        var lastError = this.currentObservable.query.getLastError();\n        var lastResult = this.currentObservable.query.getLastResult();\n        this.currentObservable.query.resetLastResults();\n        this.startQuerySubscription();\n        Object.assign(this.currentObservable.query, {\n            lastError: lastError,\n            lastResult: lastResult,\n        });\n    };\n    QueryData.prototype.getQueryResult = function () {\n        var result = this.observableQueryFields();\n        var options = this.getOptions();\n        if (options.skip) {\n            result = __assign(__assign({}, result), { data: undefined, error: undefined, loading: false, called: true });\n        }\n        else {\n            var currentResult = this.currentObservable.query.getCurrentResult();\n            var loading = currentResult.loading, partial = currentResult.partial, networkStatus = currentResult.networkStatus, errors = currentResult.errors;\n            var error = currentResult.error, data = currentResult.data;\n            if (errors && errors.length > 0) {\n                error = new ApolloError({ graphQLErrors: errors });\n            }\n            result = __assign(__assign({}, result), { loading: loading,\n                networkStatus: networkStatus,\n                error: error, called: true });\n            if (loading) {\n                var previousData = this.previousData.result && this.previousData.result.data;\n                result.data =\n                    previousData && data\n                        ? __assign(__assign({}, previousData), data) : previousData || data;\n            }\n            else if (error) {\n                Object.assign(result, {\n                    data: (this.currentObservable.query.getLastResult() || {})\n                        .data,\n                });\n            }\n            else {\n                var fetchPolicy = this.currentObservable.query.options.fetchPolicy;\n                var partialRefetch = options.partialRefetch;\n                if (partialRefetch &&\n                    !data &&\n                    partial &&\n                    fetchPolicy !== 'cache-only') {\n                    Object.assign(result, {\n                        loading: true,\n                        networkStatus: NetworkStatus.loading,\n                    });\n                    result.refetch();\n                    return result;\n                }\n                result.data = data;\n            }\n        }\n        result.client = this.client;\n        this.previousData.loading =\n            (this.previousData.result && this.previousData.result.loading) || false;\n        this.previousData.result = result;\n        this.currentObservable.query &&\n            this.currentObservable.query.resetQueryStoreErrors();\n        return result;\n    };\n    QueryData.prototype.handleErrorOrCompleted = function () {\n        var obsQuery = this.currentObservable.query;\n        if (!obsQuery || !this.previousData.result)\n            return;\n        var _a = this.previousData.result, data = _a.data, loading = _a.loading, error = _a.error;\n        if (!loading) {\n            var _b = this.getOptions(), query = _b.query, variables = _b.variables, onCompleted = _b.onCompleted, onError = _b.onError;\n            if (this.previousOptions &&\n                !this.previousData.loading &&\n                equal(this.previousOptions.query, query) &&\n                equal(this.previousOptions.variables, variables)) {\n                return;\n            }\n            if (onCompleted && !error) {\n                onCompleted(data);\n            }\n            else if (onError && error) {\n                onError(error);\n            }\n        }\n    };\n    QueryData.prototype.removeQuerySubscription = function () {\n        if (this.currentObservable.subscription) {\n            this.currentObservable.subscription.unsubscribe();\n            delete this.currentObservable.subscription;\n        }\n    };\n    QueryData.prototype.observableQueryFields = function () {\n        var observable = this.currentObservable.query;\n        return {\n            variables: observable.variables,\n            refetch: this.obsRefetch,\n            fetchMore: this.obsFetchMore,\n            updateQuery: this.obsUpdateQuery,\n            startPolling: this.obsStartPolling,\n            stopPolling: this.obsStopPolling,\n            subscribeToMore: this.obsSubscribeToMore,\n        };\n    };\n    return QueryData;\n}(OperationData));\n\nfunction useDeepMemo(memoFn, key) {\n    var ref = useRef();\n    if (!ref.current || !equal(key, ref.current.key)) {\n        ref.current = { key: key, value: memoFn() };\n    }\n    return ref.current.value;\n}\n\nfunction useBaseQuery(query, options, lazy) {\n    if (lazy === void 0) { lazy = false; }\n    var context = useContext(getApolloContext());\n    var _a = useReducer(function (x) { return x + 1; }, 0), tick = _a[0], forceUpdate = _a[1];\n    var updatedOptions = options ? __assign(__assign({}, options), { query: query }) : { query: query };\n    var queryDataRef = useRef();\n    var queryData = queryDataRef.current ||\n        new QueryData({\n            options: updatedOptions,\n            context: context,\n            onNewData: function () {\n                if (!queryData.ssrInitiated()) {\n                    Promise.resolve().then(forceUpdate);\n                }\n                else {\n                    forceUpdate();\n                }\n            },\n        });\n    queryData.setOptions(updatedOptions);\n    queryData.context = context;\n    if (queryData.ssrInitiated() && !queryDataRef.current) {\n        queryDataRef.current = queryData;\n    }\n    var memo = {\n        options: __assign(__assign({}, updatedOptions), { onError: undefined, onCompleted: undefined }),\n        context: context,\n        tick: tick,\n    };\n    var result = useDeepMemo(function () { return (lazy ? queryData.executeLazy() : queryData.execute()); }, memo);\n    var queryResult = lazy\n        ? result[1]\n        : result;\n    useEffect(function () {\n        if (!queryDataRef.current) {\n            queryDataRef.current = queryData;\n        }\n        return function () { return queryData.cleanup(); };\n    }, []);\n    useEffect(function () { return queryData.afterExecute({ lazy: lazy }); }, [\n        queryResult.loading,\n        queryResult.networkStatus,\n        queryResult.error,\n        queryResult.data,\n    ]);\n    return result;\n}\n\nfunction useQuery(query, options) {\n    return useBaseQuery(query, options, false);\n}\n\nfunction useLazyQuery(query, options) {\n    return useBaseQuery(query, options, true);\n}\n\nvar MutationData = (function (_super) {\n    __extends(MutationData, _super);\n    function MutationData(_a) {\n        var options = _a.options, context = _a.context, result = _a.result, setResult = _a.setResult;\n        var _this = _super.call(this, options, context) || this;\n        _this.runMutation = function (mutationFunctionOptions) {\n            if (mutationFunctionOptions === void 0) { mutationFunctionOptions = {}; }\n            _this.onMutationStart();\n            var mutationId = _this.generateNewMutationId();\n            return _this.mutate(mutationFunctionOptions)\n                .then(function (response) {\n                _this.onMutationCompleted(response, mutationId);\n                return response;\n            })\n                .catch(function (error) {\n                _this.onMutationError(error, mutationId);\n                if (!_this.getOptions().onError)\n                    throw error;\n            });\n        };\n        _this.verifyDocumentType(options.mutation, DocumentType.Mutation);\n        _this.result = result;\n        _this.setResult = setResult;\n        _this.mostRecentMutationId = 0;\n        return _this;\n    }\n    MutationData.prototype.execute = function (result) {\n        this.isMounted = true;\n        this.verifyDocumentType(this.getOptions().mutation, DocumentType.Mutation);\n        result.client = this.refreshClient().client;\n        return [this.runMutation, result];\n    };\n    MutationData.prototype.afterExecute = function () {\n        this.isMounted = true;\n        return this.unmount.bind(this);\n    };\n    MutationData.prototype.cleanup = function () {\n    };\n    MutationData.prototype.mutate = function (mutationFunctionOptions) {\n        var _a = this.getOptions(), mutation = _a.mutation, variables = _a.variables, optimisticResponse = _a.optimisticResponse, update = _a.update, _b = _a.context, mutationContext = _b === void 0 ? {} : _b, _c = _a.awaitRefetchQueries, awaitRefetchQueries = _c === void 0 ? false : _c, fetchPolicy = _a.fetchPolicy;\n        var mutateOptions = __assign({}, mutationFunctionOptions);\n        var mutateVariables = Object.assign({}, variables, mutateOptions.variables);\n        delete mutateOptions.variables;\n        return this.refreshClient().client.mutate(__assign({ mutation: mutation,\n            optimisticResponse: optimisticResponse, refetchQueries: mutateOptions.refetchQueries || this.getOptions().refetchQueries, awaitRefetchQueries: awaitRefetchQueries,\n            update: update, context: mutationContext, fetchPolicy: fetchPolicy, variables: mutateVariables }, mutateOptions));\n    };\n    MutationData.prototype.onMutationStart = function () {\n        if (!this.result.loading && !this.getOptions().ignoreResults) {\n            this.updateResult({\n                loading: true,\n                error: undefined,\n                data: undefined,\n                called: true\n            });\n        }\n    };\n    MutationData.prototype.onMutationCompleted = function (response, mutationId) {\n        var _a = this.getOptions(), onCompleted = _a.onCompleted, ignoreResults = _a.ignoreResults;\n        var data = response.data, errors = response.errors;\n        var error = errors && errors.length > 0\n            ? new ApolloError({ graphQLErrors: errors })\n            : undefined;\n        var callOncomplete = function () {\n            return onCompleted ? onCompleted(data) : null;\n        };\n        if (this.isMostRecentMutation(mutationId) && !ignoreResults) {\n            this.updateResult({\n                called: true,\n                loading: false,\n                data: data,\n                error: error\n            });\n        }\n        callOncomplete();\n    };\n    MutationData.prototype.onMutationError = function (error, mutationId) {\n        var onError = this.getOptions().onError;\n        if (this.isMostRecentMutation(mutationId)) {\n            this.updateResult({\n                loading: false,\n                error: error,\n                data: undefined,\n                called: true\n            });\n        }\n        if (onError) {\n            onError(error);\n        }\n    };\n    MutationData.prototype.generateNewMutationId = function () {\n        return ++this.mostRecentMutationId;\n    };\n    MutationData.prototype.isMostRecentMutation = function (mutationId) {\n        return this.mostRecentMutationId === mutationId;\n    };\n    MutationData.prototype.updateResult = function (result) {\n        if (this.isMounted &&\n            (!this.previousResult || !equal(this.previousResult, result))) {\n            this.setResult(result);\n            this.previousResult = result;\n        }\n    };\n    return MutationData;\n}(OperationData));\n\nfunction useMutation(mutation, options) {\n    var context = useContext(getApolloContext());\n    var _a = useState({ called: false, loading: false }), result = _a[0], setResult = _a[1];\n    var updatedOptions = options ? __assign(__assign({}, options), { mutation: mutation }) : { mutation: mutation };\n    var mutationDataRef = useRef();\n    function getMutationDataRef() {\n        if (!mutationDataRef.current) {\n            mutationDataRef.current = new MutationData({\n                options: updatedOptions,\n                context: context,\n                result: result,\n                setResult: setResult\n            });\n        }\n        return mutationDataRef.current;\n    }\n    var mutationData = getMutationDataRef();\n    mutationData.setOptions(updatedOptions);\n    mutationData.context = context;\n    useEffect(function () { return mutationData.afterExecute(); });\n    return mutationData.execute(result);\n}\n\nvar SubscriptionData = (function (_super) {\n    __extends(SubscriptionData, _super);\n    function SubscriptionData(_a) {\n        var options = _a.options, context = _a.context, setResult = _a.setResult;\n        var _this = _super.call(this, options, context) || this;\n        _this.currentObservable = {};\n        _this.setResult = setResult;\n        _this.initialize(options);\n        return _this;\n    }\n    SubscriptionData.prototype.execute = function (result) {\n        if (this.getOptions().skip === true) {\n            this.cleanup();\n            return {\n                loading: false,\n                error: undefined,\n                data: undefined,\n                variables: this.getOptions().variables\n            };\n        }\n        var currentResult = result;\n        if (this.refreshClient().isNew) {\n            currentResult = this.getLoadingResult();\n        }\n        var shouldResubscribe = this.getOptions().shouldResubscribe;\n        if (typeof shouldResubscribe === 'function') {\n            shouldResubscribe = !!shouldResubscribe(this.getOptions());\n        }\n        if (shouldResubscribe !== false &&\n            this.previousOptions &&\n            Object.keys(this.previousOptions).length > 0 &&\n            (this.previousOptions.subscription !== this.getOptions().subscription ||\n                !equal(this.previousOptions.variables, this.getOptions().variables) ||\n                this.previousOptions.skip !== this.getOptions().skip)) {\n            this.cleanup();\n            currentResult = this.getLoadingResult();\n        }\n        this.initialize(this.getOptions());\n        this.startSubscription();\n        this.previousOptions = this.getOptions();\n        return __assign(__assign({}, currentResult), { variables: this.getOptions().variables });\n    };\n    SubscriptionData.prototype.afterExecute = function () {\n        this.isMounted = true;\n    };\n    SubscriptionData.prototype.cleanup = function () {\n        this.endSubscription();\n        delete this.currentObservable.query;\n    };\n    SubscriptionData.prototype.initialize = function (options) {\n        if (this.currentObservable.query || this.getOptions().skip === true)\n            return;\n        this.currentObservable.query = this.refreshClient().client.subscribe({\n            query: options.subscription,\n            variables: options.variables,\n            fetchPolicy: options.fetchPolicy\n        });\n    };\n    SubscriptionData.prototype.startSubscription = function () {\n        if (this.currentObservable.subscription)\n            return;\n        this.currentObservable.subscription = this.currentObservable.query.subscribe({\n            next: this.updateCurrentData.bind(this),\n            error: this.updateError.bind(this),\n            complete: this.completeSubscription.bind(this)\n        });\n    };\n    SubscriptionData.prototype.getLoadingResult = function () {\n        return {\n            loading: true,\n            error: undefined,\n            data: undefined\n        };\n    };\n    SubscriptionData.prototype.updateResult = function (result) {\n        if (this.isMounted) {\n            this.setResult(result);\n        }\n    };\n    SubscriptionData.prototype.updateCurrentData = function (result) {\n        var onSubscriptionData = this.getOptions().onSubscriptionData;\n        this.updateResult({\n            data: result.data,\n            loading: false,\n            error: undefined\n        });\n        if (onSubscriptionData) {\n            onSubscriptionData({\n                client: this.refreshClient().client,\n                subscriptionData: result\n            });\n        }\n    };\n    SubscriptionData.prototype.updateError = function (error) {\n        this.updateResult({\n            error: error,\n            loading: false\n        });\n    };\n    SubscriptionData.prototype.completeSubscription = function () {\n        var onSubscriptionComplete = this.getOptions().onSubscriptionComplete;\n        if (onSubscriptionComplete)\n            onSubscriptionComplete();\n        this.endSubscription();\n    };\n    SubscriptionData.prototype.endSubscription = function () {\n        if (this.currentObservable.subscription) {\n            this.currentObservable.subscription.unsubscribe();\n            delete this.currentObservable.subscription;\n        }\n    };\n    return SubscriptionData;\n}(OperationData));\n\nfunction useSubscription(subscription, options) {\n    var context = useContext(getApolloContext());\n    var updatedOptions = options\n        ? __assign(__assign({}, options), { subscription: subscription }) : { subscription: subscription };\n    var _a = useState({\n        loading: !updatedOptions.skip,\n        error: undefined,\n        data: undefined\n    }), result = _a[0], setResult = _a[1];\n    var subscriptionDataRef = useRef();\n    function getSubscriptionDataRef() {\n        if (!subscriptionDataRef.current) {\n            subscriptionDataRef.current = new SubscriptionData({\n                options: updatedOptions,\n                context: context,\n                setResult: setResult\n            });\n        }\n        return subscriptionDataRef.current;\n    }\n    var subscriptionData = getSubscriptionDataRef();\n    subscriptionData.setOptions(updatedOptions, true);\n    subscriptionData.context = context;\n    useEffect(function () { return subscriptionData.afterExecute(); });\n    useEffect(function () { return subscriptionData.cleanup.bind(subscriptionData); }, []);\n    return subscriptionData.execute(result);\n}\n\nfunction useApolloClient() {\n    var client = React.useContext(getApolloContext()).client;\n    process.env.NODE_ENV === \"production\" ? invariant(client, 1) : invariant(client, 'No Apollo Client instance can be found. Please ensure that you ' +\n        'have called `ApolloProvider` higher up in your tree.');\n    return client;\n}\n\nfunction makeDefaultQueryInfo() {\n    return {\n        seen: false,\n        observable: null\n    };\n}\nvar RenderPromises = (function () {\n    function RenderPromises() {\n        this.queryPromises = new Map();\n        this.queryInfoTrie = new Map();\n    }\n    RenderPromises.prototype.registerSSRObservable = function (observable, props) {\n        this.lookupQueryInfo(props).observable = observable;\n    };\n    RenderPromises.prototype.getSSRObservable = function (props) {\n        return this.lookupQueryInfo(props).observable;\n    };\n    RenderPromises.prototype.addQueryPromise = function (queryInstance, finish) {\n        var info = this.lookupQueryInfo(queryInstance.getOptions());\n        if (!info.seen) {\n            this.queryPromises.set(queryInstance.getOptions(), new Promise(function (resolve) {\n                resolve(queryInstance.fetchData());\n            }));\n            return null;\n        }\n        return finish();\n    };\n    RenderPromises.prototype.hasPromises = function () {\n        return this.queryPromises.size > 0;\n    };\n    RenderPromises.prototype.consumeAndAwaitPromises = function () {\n        var _this = this;\n        var promises = [];\n        this.queryPromises.forEach(function (promise, queryInstance) {\n            _this.lookupQueryInfo(queryInstance).seen = true;\n            promises.push(promise);\n        });\n        this.queryPromises.clear();\n        return Promise.all(promises);\n    };\n    RenderPromises.prototype.lookupQueryInfo = function (props) {\n        var queryInfoTrie = this.queryInfoTrie;\n        var query = props.query, variables = props.variables;\n        var varMap = queryInfoTrie.get(query) || new Map();\n        if (!queryInfoTrie.has(query))\n            queryInfoTrie.set(query, varMap);\n        var variablesString = JSON.stringify(variables);\n        var info = varMap.get(variablesString) || makeDefaultQueryInfo();\n        if (!varMap.has(variablesString))\n            varMap.set(variablesString, info);\n        return info;\n    };\n    return RenderPromises;\n}());\n\nexport { RenderPromises, useApolloClient, useLazyQuery, useMutation, useQuery, useSubscription };\n//# sourceMappingURL=react-hooks.esm.js.map\n","export { ApolloConsumer, ApolloProvider, getApolloContext, resetApolloContext } from '@apollo/react-common';\nimport { __rest } from 'tslib';\nimport { useQuery, useMutation, useSubscription } from '@apollo/react-hooks';\nimport PropTypes from 'prop-types';\n\nfunction Query(props) {\n    var children = props.children, query = props.query, options = __rest(props, [\"children\", \"query\"]);\n    var result = useQuery(query, options);\n    return children && result ? children(result) : null;\n}\n(function (Query) {\n    Query.propTypes = {\n        client: PropTypes.object,\n        children: PropTypes.func.isRequired,\n        fetchPolicy: PropTypes.string,\n        notifyOnNetworkStatusChange: PropTypes.bool,\n        onCompleted: PropTypes.func,\n        onError: PropTypes.func,\n        pollInterval: PropTypes.number,\n        query: PropTypes.object.isRequired,\n        variables: PropTypes.object,\n        ssr: PropTypes.bool,\n        partialRefetch: PropTypes.bool,\n        returnPartialData: PropTypes.bool\n    };\n})(Query || (Query = {}));\n\nfunction Mutation(props) {\n    var _a = useMutation(props.mutation, props), runMutation = _a[0], result = _a[1];\n    return props.children ? props.children(runMutation, result) : null;\n}\n(function (Mutation) {\n    Mutation.propTypes = {\n        mutation: PropTypes.object.isRequired,\n        variables: PropTypes.object,\n        optimisticResponse: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n        refetchQueries: PropTypes.oneOfType([\n            PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object])),\n            PropTypes.func\n        ]),\n        awaitRefetchQueries: PropTypes.bool,\n        update: PropTypes.func,\n        children: PropTypes.func.isRequired,\n        onCompleted: PropTypes.func,\n        onError: PropTypes.func,\n        fetchPolicy: PropTypes.string\n    };\n})(Mutation || (Mutation = {}));\n\nfunction Subscription(props) {\n    var result = useSubscription(props.subscription, props);\n    return props.children && result ? props.children(result) : null;\n}\n(function (Subscription) {\n    Subscription.propTypes = {\n        subscription: PropTypes.object.isRequired,\n        variables: PropTypes.object,\n        children: PropTypes.func,\n        onSubscriptionData: PropTypes.func,\n        onSubscriptionComplete: PropTypes.func,\n        shouldResubscribe: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n    };\n})(Subscription || (Subscription = {}));\n\nexport { Mutation, Query, Subscription };\n//# sourceMappingURL=react-components.esm.js.map\n","import { getFragmentQueryDocument } from 'apollo-utilities';\n\nfunction queryFromPojo(obj) {\n    var op = {\n        kind: 'OperationDefinition',\n        operation: 'query',\n        name: {\n            kind: 'Name',\n            value: 'GeneratedClientQuery',\n        },\n        selectionSet: selectionSetFromObj(obj),\n    };\n    var out = {\n        kind: 'Document',\n        definitions: [op],\n    };\n    return out;\n}\nfunction fragmentFromPojo(obj, typename) {\n    var frag = {\n        kind: 'FragmentDefinition',\n        typeCondition: {\n            kind: 'NamedType',\n            name: {\n                kind: 'Name',\n                value: typename || '__FakeType',\n            },\n        },\n        name: {\n            kind: 'Name',\n            value: 'GeneratedClientQuery',\n        },\n        selectionSet: selectionSetFromObj(obj),\n    };\n    var out = {\n        kind: 'Document',\n        definitions: [frag],\n    };\n    return out;\n}\nfunction selectionSetFromObj(obj) {\n    if (typeof obj === 'number' ||\n        typeof obj === 'boolean' ||\n        typeof obj === 'string' ||\n        typeof obj === 'undefined' ||\n        obj === null) {\n        return null;\n    }\n    if (Array.isArray(obj)) {\n        return selectionSetFromObj(obj[0]);\n    }\n    var selections = [];\n    Object.keys(obj).forEach(function (key) {\n        var nestedSelSet = selectionSetFromObj(obj[key]);\n        var field = {\n            kind: 'Field',\n            name: {\n                kind: 'Name',\n                value: key,\n            },\n            selectionSet: nestedSelSet || undefined,\n        };\n        selections.push(field);\n    });\n    var selectionSet = {\n        kind: 'SelectionSet',\n        selections: selections,\n    };\n    return selectionSet;\n}\nvar justTypenameQuery = {\n    kind: 'Document',\n    definitions: [\n        {\n            kind: 'OperationDefinition',\n            operation: 'query',\n            name: null,\n            variableDefinitions: null,\n            directives: [],\n            selectionSet: {\n                kind: 'SelectionSet',\n                selections: [\n                    {\n                        kind: 'Field',\n                        alias: null,\n                        name: {\n                            kind: 'Name',\n                            value: '__typename',\n                        },\n                        arguments: [],\n                        directives: [],\n                        selectionSet: null,\n                    },\n                ],\n            },\n        },\n    ],\n};\n\nvar ApolloCache = (function () {\n    function ApolloCache() {\n    }\n    ApolloCache.prototype.transformDocument = function (document) {\n        return document;\n    };\n    ApolloCache.prototype.transformForLink = function (document) {\n        return document;\n    };\n    ApolloCache.prototype.readQuery = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.read({\n            query: options.query,\n            variables: options.variables,\n            optimistic: optimistic,\n        });\n    };\n    ApolloCache.prototype.readFragment = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.read({\n            query: getFragmentQueryDocument(options.fragment, options.fragmentName),\n            variables: options.variables,\n            rootId: options.id,\n            optimistic: optimistic,\n        });\n    };\n    ApolloCache.prototype.writeQuery = function (options) {\n        this.write({\n            dataId: 'ROOT_QUERY',\n            result: options.data,\n            query: options.query,\n            variables: options.variables,\n        });\n    };\n    ApolloCache.prototype.writeFragment = function (options) {\n        this.write({\n            dataId: options.id,\n            result: options.data,\n            variables: options.variables,\n            query: getFragmentQueryDocument(options.fragment, options.fragmentName),\n        });\n    };\n    ApolloCache.prototype.writeData = function (_a) {\n        var id = _a.id, data = _a.data;\n        if (typeof id !== 'undefined') {\n            var typenameResult = null;\n            try {\n                typenameResult = this.read({\n                    rootId: id,\n                    optimistic: false,\n                    query: justTypenameQuery,\n                });\n            }\n            catch (e) {\n            }\n            var __typename = (typenameResult && typenameResult.__typename) || '__ClientData';\n            var dataToWrite = Object.assign({ __typename: __typename }, data);\n            this.writeFragment({\n                id: id,\n                fragment: fragmentFromPojo(dataToWrite, __typename),\n                data: dataToWrite,\n            });\n        }\n        else {\n            this.writeQuery({ query: queryFromPojo(data), data: data });\n        }\n    };\n    return ApolloCache;\n}());\n\nvar Cache;\n(function (Cache) {\n})(Cache || (Cache = {}));\n\nexport { ApolloCache, Cache };\n//# sourceMappingURL=bundle.esm.js.map\n","// This currentContext variable will only be used if the makeSlotClass\r\n// function is called, which happens only if this is the first copy of the\r\n// @wry/context package to be imported.\r\nvar currentContext = null;\r\n// This unique internal object is used to denote the absence of a value\r\n// for a given Slot, and is never exposed to outside code.\r\nvar MISSING_VALUE = {};\r\nvar idCounter = 1;\r\n// Although we can't do anything about the cost of duplicated code from\r\n// accidentally bundling multiple copies of the @wry/context package, we can\r\n// avoid creating the Slot class more than once using makeSlotClass.\r\nvar makeSlotClass = function () { return /** @class */ (function () {\r\n    function Slot() {\r\n        // If you have a Slot object, you can find out its slot.id, but you cannot\r\n        // guess the slot.id of a Slot you don't have access to, thanks to the\r\n        // randomized suffix.\r\n        this.id = [\r\n            \"slot\",\r\n            idCounter++,\r\n            Date.now(),\r\n            Math.random().toString(36).slice(2),\r\n        ].join(\":\");\r\n    }\r\n    Slot.prototype.hasValue = function () {\r\n        for (var context_1 = currentContext; context_1; context_1 = context_1.parent) {\r\n            // We use the Slot object iself as a key to its value, which means the\r\n            // value cannot be obtained without a reference to the Slot object.\r\n            if (this.id in context_1.slots) {\r\n                var value = context_1.slots[this.id];\r\n                if (value === MISSING_VALUE)\r\n                    break;\r\n                if (context_1 !== currentContext) {\r\n                    // Cache the value in currentContext.slots so the next lookup will\r\n                    // be faster. This caching is safe because the tree of contexts and\r\n                    // the values of the slots are logically immutable.\r\n                    currentContext.slots[this.id] = value;\r\n                }\r\n                return true;\r\n            }\r\n        }\r\n        if (currentContext) {\r\n            // If a value was not found for this Slot, it's never going to be found\r\n            // no matter how many times we look it up, so we might as well cache\r\n            // the absence of the value, too.\r\n            currentContext.slots[this.id] = MISSING_VALUE;\r\n        }\r\n        return false;\r\n    };\r\n    Slot.prototype.getValue = function () {\r\n        if (this.hasValue()) {\r\n            return currentContext.slots[this.id];\r\n        }\r\n    };\r\n    Slot.prototype.withValue = function (value, callback, \r\n    // Given the prevalence of arrow functions, specifying arguments is likely\r\n    // to be much more common than specifying `this`, hence this ordering:\r\n    args, thisArg) {\r\n        var _a;\r\n        var slots = (_a = {\r\n                __proto__: null\r\n            },\r\n            _a[this.id] = value,\r\n            _a);\r\n        var parent = currentContext;\r\n        currentContext = { parent: parent, slots: slots };\r\n        try {\r\n            // Function.prototype.apply allows the arguments array argument to be\r\n            // omitted or undefined, so args! is fine here.\r\n            return callback.apply(thisArg, args);\r\n        }\r\n        finally {\r\n            currentContext = parent;\r\n        }\r\n    };\r\n    // Capture the current context and wrap a callback function so that it\r\n    // reestablishes the captured context when called.\r\n    Slot.bind = function (callback) {\r\n        var context = currentContext;\r\n        return function () {\r\n            var saved = currentContext;\r\n            try {\r\n                currentContext = context;\r\n                return callback.apply(this, arguments);\r\n            }\r\n            finally {\r\n                currentContext = saved;\r\n            }\r\n        };\r\n    };\r\n    // Immediately run a callback function without any captured context.\r\n    Slot.noContext = function (callback, \r\n    // Given the prevalence of arrow functions, specifying arguments is likely\r\n    // to be much more common than specifying `this`, hence this ordering:\r\n    args, thisArg) {\r\n        if (currentContext) {\r\n            var saved = currentContext;\r\n            try {\r\n                currentContext = null;\r\n                // Function.prototype.apply allows the arguments array argument to be\r\n                // omitted or undefined, so args! is fine here.\r\n                return callback.apply(thisArg, args);\r\n            }\r\n            finally {\r\n                currentContext = saved;\r\n            }\r\n        }\r\n        else {\r\n            return callback.apply(thisArg, args);\r\n        }\r\n    };\r\n    return Slot;\r\n}()); };\r\n// We store a single global implementation of the Slot class as a permanent\r\n// non-enumerable symbol property of the Array constructor. This obfuscation\r\n// does nothing to prevent access to the Slot class, but at least it ensures\r\n// the implementation (i.e. currentContext) cannot be tampered with, and all\r\n// copies of the @wry/context package (hopefully just one) will share the\r\n// same Slot implementation. Since the first copy of the @wry/context package\r\n// to be imported wins, this technique imposes a very high cost for any\r\n// future breaking changes to the Slot class.\r\nvar globalKey = \"@wry/context:Slot\";\r\nvar host = Array;\r\nvar Slot = host[globalKey] || function () {\r\n    var Slot = makeSlotClass();\r\n    try {\r\n        Object.defineProperty(host, globalKey, {\r\n            value: host[globalKey] = Slot,\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: false,\r\n        });\r\n    }\r\n    finally {\r\n        return Slot;\r\n    }\r\n}();\n\nvar bind = Slot.bind, noContext = Slot.noContext;\r\nfunction setTimeoutWithContext(callback, delay) {\r\n    return setTimeout(bind(callback), delay);\r\n}\r\n// Turn any generator function into an async function (using yield instead\r\n// of await), with context automatically preserved across yields.\r\nfunction asyncFromGen(genFn) {\r\n    return function () {\r\n        var gen = genFn.apply(this, arguments);\r\n        var boundNext = bind(gen.next);\r\n        var boundThrow = bind(gen.throw);\r\n        return new Promise(function (resolve, reject) {\r\n            function invoke(method, argument) {\r\n                try {\r\n                    var result = method.call(gen, argument);\r\n                }\r\n                catch (error) {\r\n                    return reject(error);\r\n                }\r\n                var next = result.done ? resolve : invokeNext;\r\n                if (isPromiseLike(result.value)) {\r\n                    result.value.then(next, result.done ? reject : invokeThrow);\r\n                }\r\n                else {\r\n                    next(result.value);\r\n                }\r\n            }\r\n            var invokeNext = function (value) { return invoke(boundNext, value); };\r\n            var invokeThrow = function (error) { return invoke(boundThrow, error); };\r\n            invokeNext();\r\n        });\r\n    };\r\n}\r\nfunction isPromiseLike(value) {\r\n    return value && typeof value.then === \"function\";\r\n}\r\n// If you use the fibers npm package to implement coroutines in Node.js,\r\n// you should call this function at least once to ensure context management\r\n// remains coherent across any yields.\r\nvar wrappedFibers = [];\r\nfunction wrapYieldingFiberMethods(Fiber) {\r\n    // There can be only one implementation of Fiber per process, so this array\r\n    // should never grow longer than one element.\r\n    if (wrappedFibers.indexOf(Fiber) < 0) {\r\n        var wrap = function (obj, method) {\r\n            var fn = obj[method];\r\n            obj[method] = function () {\r\n                return noContext(fn, arguments, this);\r\n            };\r\n        };\r\n        // These methods can yield, according to\r\n        // https://github.com/laverdet/node-fibers/blob/ddebed9b8ae3883e57f822e2108e6943e5c8d2a8/fibers.js#L97-L100\r\n        wrap(Fiber, \"yield\");\r\n        wrap(Fiber.prototype, \"run\");\r\n        wrap(Fiber.prototype, \"throwInto\");\r\n        wrappedFibers.push(Fiber);\r\n    }\r\n    return Fiber;\r\n}\n\nexport { Slot, asyncFromGen, bind, noContext, setTimeoutWithContext as setTimeout, wrapYieldingFiberMethods };\n//# sourceMappingURL=context.esm.js.map\n","import { Slot } from '@wry/context';\nexport { asyncFromGen, bind as bindContext, noContext, setTimeout } from '@wry/context';\n\nfunction defaultDispose() { }\r\nvar Cache = /** @class */ (function () {\r\n    function Cache(max, dispose) {\r\n        if (max === void 0) { max = Infinity; }\r\n        if (dispose === void 0) { dispose = defaultDispose; }\r\n        this.max = max;\r\n        this.dispose = dispose;\r\n        this.map = new Map();\r\n        this.newest = null;\r\n        this.oldest = null;\r\n    }\r\n    Cache.prototype.has = function (key) {\r\n        return this.map.has(key);\r\n    };\r\n    Cache.prototype.get = function (key) {\r\n        var entry = this.getEntry(key);\r\n        return entry && entry.value;\r\n    };\r\n    Cache.prototype.getEntry = function (key) {\r\n        var entry = this.map.get(key);\r\n        if (entry && entry !== this.newest) {\r\n            var older = entry.older, newer = entry.newer;\r\n            if (newer) {\r\n                newer.older = older;\r\n            }\r\n            if (older) {\r\n                older.newer = newer;\r\n            }\r\n            entry.older = this.newest;\r\n            entry.older.newer = entry;\r\n            entry.newer = null;\r\n            this.newest = entry;\r\n            if (entry === this.oldest) {\r\n                this.oldest = newer;\r\n            }\r\n        }\r\n        return entry;\r\n    };\r\n    Cache.prototype.set = function (key, value) {\r\n        var entry = this.getEntry(key);\r\n        if (entry) {\r\n            return entry.value = value;\r\n        }\r\n        entry = {\r\n            key: key,\r\n            value: value,\r\n            newer: null,\r\n            older: this.newest\r\n        };\r\n        if (this.newest) {\r\n            this.newest.newer = entry;\r\n        }\r\n        this.newest = entry;\r\n        this.oldest = this.oldest || entry;\r\n        this.map.set(key, entry);\r\n        return entry.value;\r\n    };\r\n    Cache.prototype.clean = function () {\r\n        while (this.oldest && this.map.size > this.max) {\r\n            this.delete(this.oldest.key);\r\n        }\r\n    };\r\n    Cache.prototype.delete = function (key) {\r\n        var entry = this.map.get(key);\r\n        if (entry) {\r\n            if (entry === this.newest) {\r\n                this.newest = entry.older;\r\n            }\r\n            if (entry === this.oldest) {\r\n                this.oldest = entry.newer;\r\n            }\r\n            if (entry.newer) {\r\n                entry.newer.older = entry.older;\r\n            }\r\n            if (entry.older) {\r\n                entry.older.newer = entry.newer;\r\n            }\r\n            this.map.delete(key);\r\n            this.dispose(entry.value, key);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    return Cache;\r\n}());\n\nvar parentEntrySlot = new Slot();\n\nvar reusableEmptyArray = [];\r\nvar emptySetPool = [];\r\nvar POOL_TARGET_SIZE = 100;\r\n// Since this package might be used browsers, we should avoid using the\r\n// Node built-in assert module.\r\nfunction assert(condition, optionalMessage) {\r\n    if (!condition) {\r\n        throw new Error(optionalMessage || \"assertion failure\");\r\n    }\r\n}\r\nfunction valueIs(a, b) {\r\n    var len = a.length;\r\n    return (\r\n    // Unknown values are not equal to each other.\r\n    len > 0 &&\r\n        // Both values must be ordinary (or both exceptional) to be equal.\r\n        len === b.length &&\r\n        // The underlying value or exception must be the same.\r\n        a[len - 1] === b[len - 1]);\r\n}\r\nfunction valueGet(value) {\r\n    switch (value.length) {\r\n        case 0: throw new Error(\"unknown value\");\r\n        case 1: return value[0];\r\n        case 2: throw value[1];\r\n    }\r\n}\r\nfunction valueCopy(value) {\r\n    return value.slice(0);\r\n}\r\nvar Entry = /** @class */ (function () {\r\n    function Entry(fn, args) {\r\n        this.fn = fn;\r\n        this.args = args;\r\n        this.parents = new Set();\r\n        this.childValues = new Map();\r\n        // When this Entry has children that are dirty, this property becomes\r\n        // a Set containing other Entry objects, borrowed from emptySetPool.\r\n        // When the set becomes empty, it gets recycled back to emptySetPool.\r\n        this.dirtyChildren = null;\r\n        this.dirty = true;\r\n        this.recomputing = false;\r\n        this.value = [];\r\n        ++Entry.count;\r\n    }\r\n    // This is the most important method of the Entry API, because it\r\n    // determines whether the cached this.value can be returned immediately,\r\n    // or must be recomputed. The overall performance of the caching system\r\n    // depends on the truth of the following observations: (1) this.dirty is\r\n    // usually false, (2) this.dirtyChildren is usually null/empty, and thus\r\n    // (3) valueGet(this.value) is usually returned without recomputation.\r\n    Entry.prototype.recompute = function () {\r\n        assert(!this.recomputing, \"already recomputing\");\r\n        if (!rememberParent(this) && maybeReportOrphan(this)) {\r\n            // The recipient of the entry.reportOrphan callback decided to dispose\r\n            // of this orphan entry by calling entry.dispose(), so we don't need to\r\n            // (and should not) proceed with the recomputation.\r\n            return void 0;\r\n        }\r\n        return mightBeDirty(this)\r\n            ? reallyRecompute(this)\r\n            : valueGet(this.value);\r\n    };\r\n    Entry.prototype.setDirty = function () {\r\n        if (this.dirty)\r\n            return;\r\n        this.dirty = true;\r\n        this.value.length = 0;\r\n        reportDirty(this);\r\n        // We can go ahead and unsubscribe here, since any further dirty\r\n        // notifications we receive will be redundant, and unsubscribing may\r\n        // free up some resources, e.g. file watchers.\r\n        maybeUnsubscribe(this);\r\n    };\r\n    Entry.prototype.dispose = function () {\r\n        var _this = this;\r\n        forgetChildren(this).forEach(maybeReportOrphan);\r\n        maybeUnsubscribe(this);\r\n        // Because this entry has been kicked out of the cache (in index.js),\r\n        // we've lost the ability to find out if/when this entry becomes dirty,\r\n        // whether that happens through a subscription, because of a direct call\r\n        // to entry.setDirty(), or because one of its children becomes dirty.\r\n        // Because of this loss of future information, we have to assume the\r\n        // worst (that this entry might have become dirty very soon), so we must\r\n        // immediately mark this entry's parents as dirty. Normally we could\r\n        // just call entry.setDirty() rather than calling parent.setDirty() for\r\n        // each parent, but that would leave this entry in parent.childValues\r\n        // and parent.dirtyChildren, which would prevent the child from being\r\n        // truly forgotten.\r\n        this.parents.forEach(function (parent) {\r\n            parent.setDirty();\r\n            forgetChild(parent, _this);\r\n        });\r\n    };\r\n    Entry.count = 0;\r\n    return Entry;\r\n}());\r\nfunction rememberParent(child) {\r\n    var parent = parentEntrySlot.getValue();\r\n    if (parent) {\r\n        child.parents.add(parent);\r\n        if (!parent.childValues.has(child)) {\r\n            parent.childValues.set(child, []);\r\n        }\r\n        if (mightBeDirty(child)) {\r\n            reportDirtyChild(parent, child);\r\n        }\r\n        else {\r\n            reportCleanChild(parent, child);\r\n        }\r\n        return parent;\r\n    }\r\n}\r\nfunction reallyRecompute(entry) {\r\n    // Since this recomputation is likely to re-remember some of this\r\n    // entry's children, we forget our children here but do not call\r\n    // maybeReportOrphan until after the recomputation finishes.\r\n    var originalChildren = forgetChildren(entry);\r\n    // Set entry as the parent entry while calling recomputeNewValue(entry).\r\n    parentEntrySlot.withValue(entry, recomputeNewValue, [entry]);\r\n    if (maybeSubscribe(entry)) {\r\n        // If we successfully recomputed entry.value and did not fail to\r\n        // (re)subscribe, then this Entry is no longer explicitly dirty.\r\n        setClean(entry);\r\n    }\r\n    // Now that we've had a chance to re-remember any children that were\r\n    // involved in the recomputation, we can safely report any orphan\r\n    // children that remain.\r\n    originalChildren.forEach(maybeReportOrphan);\r\n    return valueGet(entry.value);\r\n}\r\nfunction recomputeNewValue(entry) {\r\n    entry.recomputing = true;\r\n    // Set entry.value as unknown.\r\n    entry.value.length = 0;\r\n    try {\r\n        // If entry.fn succeeds, entry.value will become a normal Value.\r\n        entry.value[0] = entry.fn.apply(null, entry.args);\r\n    }\r\n    catch (e) {\r\n        // If entry.fn throws, entry.value will become exceptional.\r\n        entry.value[1] = e;\r\n    }\r\n    // Either way, this line is always reached.\r\n    entry.recomputing = false;\r\n}\r\nfunction mightBeDirty(entry) {\r\n    return entry.dirty || !!(entry.dirtyChildren && entry.dirtyChildren.size);\r\n}\r\nfunction setClean(entry) {\r\n    entry.dirty = false;\r\n    if (mightBeDirty(entry)) {\r\n        // This Entry may still have dirty children, in which case we can't\r\n        // let our parents know we're clean just yet.\r\n        return;\r\n    }\r\n    reportClean(entry);\r\n}\r\nfunction reportDirty(child) {\r\n    child.parents.forEach(function (parent) { return reportDirtyChild(parent, child); });\r\n}\r\nfunction reportClean(child) {\r\n    child.parents.forEach(function (parent) { return reportCleanChild(parent, child); });\r\n}\r\n// Let a parent Entry know that one of its children may be dirty.\r\nfunction reportDirtyChild(parent, child) {\r\n    // Must have called rememberParent(child) before calling\r\n    // reportDirtyChild(parent, child).\r\n    assert(parent.childValues.has(child));\r\n    assert(mightBeDirty(child));\r\n    if (!parent.dirtyChildren) {\r\n        parent.dirtyChildren = emptySetPool.pop() || new Set;\r\n    }\r\n    else if (parent.dirtyChildren.has(child)) {\r\n        // If we already know this child is dirty, then we must have already\r\n        // informed our own parents that we are dirty, so we can terminate\r\n        // the recursion early.\r\n        return;\r\n    }\r\n    parent.dirtyChildren.add(child);\r\n    reportDirty(parent);\r\n}\r\n// Let a parent Entry know that one of its children is no longer dirty.\r\nfunction reportCleanChild(parent, child) {\r\n    // Must have called rememberChild(child) before calling\r\n    // reportCleanChild(parent, child).\r\n    assert(parent.childValues.has(child));\r\n    assert(!mightBeDirty(child));\r\n    var childValue = parent.childValues.get(child);\r\n    if (childValue.length === 0) {\r\n        parent.childValues.set(child, valueCopy(child.value));\r\n    }\r\n    else if (!valueIs(childValue, child.value)) {\r\n        parent.setDirty();\r\n    }\r\n    removeDirtyChild(parent, child);\r\n    if (mightBeDirty(parent)) {\r\n        return;\r\n    }\r\n    reportClean(parent);\r\n}\r\nfunction removeDirtyChild(parent, child) {\r\n    var dc = parent.dirtyChildren;\r\n    if (dc) {\r\n        dc.delete(child);\r\n        if (dc.size === 0) {\r\n            if (emptySetPool.length < POOL_TARGET_SIZE) {\r\n                emptySetPool.push(dc);\r\n            }\r\n            parent.dirtyChildren = null;\r\n        }\r\n    }\r\n}\r\n// If the given entry has a reportOrphan method, and no remaining parents,\r\n// call entry.reportOrphan and return true iff it returns true. The\r\n// reportOrphan function should return true to indicate entry.dispose()\r\n// has been called, and the entry has been removed from any other caches\r\n// (see index.js for the only current example).\r\nfunction maybeReportOrphan(entry) {\r\n    return entry.parents.size === 0 &&\r\n        typeof entry.reportOrphan === \"function\" &&\r\n        entry.reportOrphan() === true;\r\n}\r\n// Removes all children from this entry and returns an array of the\r\n// removed children.\r\nfunction forgetChildren(parent) {\r\n    var children = reusableEmptyArray;\r\n    if (parent.childValues.size > 0) {\r\n        children = [];\r\n        parent.childValues.forEach(function (_value, child) {\r\n            forgetChild(parent, child);\r\n            children.push(child);\r\n        });\r\n    }\r\n    // After we forget all our children, this.dirtyChildren must be empty\r\n    // and therefore must have been reset to null.\r\n    assert(parent.dirtyChildren === null);\r\n    return children;\r\n}\r\nfunction forgetChild(parent, child) {\r\n    child.parents.delete(parent);\r\n    parent.childValues.delete(child);\r\n    removeDirtyChild(parent, child);\r\n}\r\nfunction maybeSubscribe(entry) {\r\n    if (typeof entry.subscribe === \"function\") {\r\n        try {\r\n            maybeUnsubscribe(entry); // Prevent double subscriptions.\r\n            entry.unsubscribe = entry.subscribe.apply(null, entry.args);\r\n        }\r\n        catch (e) {\r\n            // If this Entry has a subscribe function and it threw an exception\r\n            // (or an unsubscribe function it previously returned now throws),\r\n            // return false to indicate that we were not able to subscribe (or\r\n            // unsubscribe), and this Entry should remain dirty.\r\n            entry.setDirty();\r\n            return false;\r\n        }\r\n    }\r\n    // Returning true indicates either that there was no entry.subscribe\r\n    // function or that it succeeded.\r\n    return true;\r\n}\r\nfunction maybeUnsubscribe(entry) {\r\n    var unsubscribe = entry.unsubscribe;\r\n    if (typeof unsubscribe === \"function\") {\r\n        entry.unsubscribe = void 0;\r\n        unsubscribe();\r\n    }\r\n}\n\n// A trie data structure that holds object keys weakly, yet can also hold\r\n// non-object keys, unlike the native `WeakMap`.\r\nvar KeyTrie = /** @class */ (function () {\r\n    function KeyTrie(weakness) {\r\n        this.weakness = weakness;\r\n    }\r\n    KeyTrie.prototype.lookup = function () {\r\n        var array = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            array[_i] = arguments[_i];\r\n        }\r\n        return this.lookupArray(array);\r\n    };\r\n    KeyTrie.prototype.lookupArray = function (array) {\r\n        var node = this;\r\n        array.forEach(function (key) { return node = node.getChildTrie(key); });\r\n        return node.data || (node.data = Object.create(null));\r\n    };\r\n    KeyTrie.prototype.getChildTrie = function (key) {\r\n        var map = this.weakness && isObjRef(key)\r\n            ? this.weak || (this.weak = new WeakMap())\r\n            : this.strong || (this.strong = new Map());\r\n        var child = map.get(key);\r\n        if (!child)\r\n            map.set(key, child = new KeyTrie(this.weakness));\r\n        return child;\r\n    };\r\n    return KeyTrie;\r\n}());\r\nfunction isObjRef(value) {\r\n    switch (typeof value) {\r\n        case \"object\":\r\n            if (value === null)\r\n                break;\r\n        // Fall through to return true...\r\n        case \"function\":\r\n            return true;\r\n    }\r\n    return false;\r\n}\n\n// The defaultMakeCacheKey function is remarkably powerful, because it gives\r\n// a unique object for any shallow-identical list of arguments. If you need\r\n// to implement a custom makeCacheKey function, you may find it helpful to\r\n// delegate the final work to defaultMakeCacheKey, which is why we export it\r\n// here. However, you may want to avoid defaultMakeCacheKey if your runtime\r\n// does not support WeakMap, or you have the ability to return a string key.\r\n// In those cases, just write your own custom makeCacheKey functions.\r\nvar keyTrie = new KeyTrie(typeof WeakMap === \"function\");\r\nfunction defaultMakeCacheKey() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    return keyTrie.lookupArray(args);\r\n}\r\nvar caches = new Set();\r\nfunction wrap(originalFunction, options) {\r\n    if (options === void 0) { options = Object.create(null); }\r\n    var cache = new Cache(options.max || Math.pow(2, 16), function (entry) { return entry.dispose(); });\r\n    var disposable = !!options.disposable;\r\n    var makeCacheKey = options.makeCacheKey || defaultMakeCacheKey;\r\n    function optimistic() {\r\n        if (disposable && !parentEntrySlot.hasValue()) {\r\n            // If there's no current parent computation, and this wrapped\r\n            // function is disposable (meaning we don't care about entry.value,\r\n            // just dependency tracking), then we can short-cut everything else\r\n            // in this function, because entry.recompute() is going to recycle\r\n            // the entry object without recomputing anything, anyway.\r\n            return void 0;\r\n        }\r\n        var key = makeCacheKey.apply(null, arguments);\r\n        if (key === void 0) {\r\n            return originalFunction.apply(null, arguments);\r\n        }\r\n        var args = Array.prototype.slice.call(arguments);\r\n        var entry = cache.get(key);\r\n        if (entry) {\r\n            entry.args = args;\r\n        }\r\n        else {\r\n            entry = new Entry(originalFunction, args);\r\n            cache.set(key, entry);\r\n            entry.subscribe = options.subscribe;\r\n            if (disposable) {\r\n                entry.reportOrphan = function () { return cache.delete(key); };\r\n            }\r\n        }\r\n        var value = entry.recompute();\r\n        // Move this entry to the front of the least-recently used queue,\r\n        // since we just finished computing its value.\r\n        cache.set(key, entry);\r\n        caches.add(cache);\r\n        // Clean up any excess entries in the cache, but only if there is no\r\n        // active parent entry, meaning we're not in the middle of a larger\r\n        // computation that might be flummoxed by the cleaning.\r\n        if (!parentEntrySlot.hasValue()) {\r\n            caches.forEach(function (cache) { return cache.clean(); });\r\n            caches.clear();\r\n        }\r\n        // If options.disposable is truthy, the caller of wrap is telling us\r\n        // they don't care about the result of entry.recompute(), so we should\r\n        // avoid returning the value, so it won't be accidentally used.\r\n        return disposable ? void 0 : value;\r\n    }\r\n    optimistic.dirty = function () {\r\n        var key = makeCacheKey.apply(null, arguments);\r\n        var child = key !== void 0 && cache.get(key);\r\n        if (child) {\r\n            child.setDirty();\r\n        }\r\n    };\r\n    return optimistic;\r\n}\n\nexport { KeyTrie, defaultMakeCacheKey, wrap };\n//# sourceMappingURL=bundle.esm.js.map\n","import { __assign, __extends } from 'tslib';\nimport { ApolloCache } from 'apollo-cache';\nimport { isTest, getQueryDefinition, assign, getDefaultValues, isEqual, getMainDefinition, getFragmentDefinitions, createFragmentMap, shouldInclude, isField, resultKeyNameFromField, isInlineFragment, mergeDeepArray, argumentsObjectFromField, getDirectiveInfoFromField, maybeDeepFreeze, isIdValue, getStoreKeyName, toIdValue, isJsonValue, canUseWeakMap, getOperationDefinition, isProduction, storeKeyNameFromField, addTypenameToDocument } from 'apollo-utilities';\nimport { wrap, KeyTrie } from 'optimism';\nimport { invariant, InvariantError } from 'ts-invariant';\n\nvar haveWarned = false;\nfunction shouldWarn() {\n    var answer = !haveWarned;\n    if (!isTest()) {\n        haveWarned = true;\n    }\n    return answer;\n}\nvar HeuristicFragmentMatcher = (function () {\n    function HeuristicFragmentMatcher() {\n    }\n    HeuristicFragmentMatcher.prototype.ensureReady = function () {\n        return Promise.resolve();\n    };\n    HeuristicFragmentMatcher.prototype.canBypassInit = function () {\n        return true;\n    };\n    HeuristicFragmentMatcher.prototype.match = function (idValue, typeCondition, context) {\n        var obj = context.store.get(idValue.id);\n        var isRootQuery = idValue.id === 'ROOT_QUERY';\n        if (!obj) {\n            return isRootQuery;\n        }\n        var _a = obj.__typename, __typename = _a === void 0 ? isRootQuery && 'Query' : _a;\n        if (!__typename) {\n            if (shouldWarn()) {\n                process.env.NODE_ENV === \"production\" || invariant.warn(\"You're using fragments in your queries, but either don't have the addTypename:\\n  true option set in Apollo Client, or you are trying to write a fragment to the store without the __typename.\\n   Please turn on the addTypename option and include __typename when writing fragments so that Apollo Client\\n   can accurately match fragments.\");\n                process.env.NODE_ENV === \"production\" || invariant.warn('Could not find __typename on Fragment ', typeCondition, obj);\n                process.env.NODE_ENV === \"production\" || invariant.warn(\"DEPRECATION WARNING: using fragments without __typename is unsupported behavior \" +\n                    \"and will be removed in future versions of Apollo client. You should fix this and set addTypename to true now.\");\n            }\n            return 'heuristic';\n        }\n        if (__typename === typeCondition) {\n            return true;\n        }\n        if (shouldWarn()) {\n            process.env.NODE_ENV === \"production\" || invariant.error('You are using the simple (heuristic) fragment matcher, but your ' +\n                'queries contain union or interface types. Apollo Client will not be ' +\n                'able to accurately map fragments. To make this error go away, use ' +\n                'the `IntrospectionFragmentMatcher` as described in the docs: ' +\n                'https://www.apollographql.com/docs/react/advanced/fragments.html#fragment-matcher');\n        }\n        return 'heuristic';\n    };\n    return HeuristicFragmentMatcher;\n}());\nvar IntrospectionFragmentMatcher = (function () {\n    function IntrospectionFragmentMatcher(options) {\n        if (options && options.introspectionQueryResultData) {\n            this.possibleTypesMap = this.parseIntrospectionResult(options.introspectionQueryResultData);\n            this.isReady = true;\n        }\n        else {\n            this.isReady = false;\n        }\n        this.match = this.match.bind(this);\n    }\n    IntrospectionFragmentMatcher.prototype.match = function (idValue, typeCondition, context) {\n        process.env.NODE_ENV === \"production\" ? invariant(this.isReady, 2) : invariant(this.isReady, 'FragmentMatcher.match() was called before FragmentMatcher.init()');\n        var obj = context.store.get(idValue.id);\n        var isRootQuery = idValue.id === 'ROOT_QUERY';\n        if (!obj) {\n            return isRootQuery;\n        }\n        var _a = obj.__typename, __typename = _a === void 0 ? isRootQuery && 'Query' : _a;\n        process.env.NODE_ENV === \"production\" ? invariant(__typename, 3) : invariant(__typename, \"Cannot match fragment because __typename property is missing: \" + JSON.stringify(obj));\n        if (__typename === typeCondition) {\n            return true;\n        }\n        var implementingTypes = this.possibleTypesMap[typeCondition];\n        if (__typename &&\n            implementingTypes &&\n            implementingTypes.indexOf(__typename) > -1) {\n            return true;\n        }\n        return false;\n    };\n    IntrospectionFragmentMatcher.prototype.parseIntrospectionResult = function (introspectionResultData) {\n        var typeMap = {};\n        introspectionResultData.__schema.types.forEach(function (type) {\n            if (type.kind === 'UNION' || type.kind === 'INTERFACE') {\n                typeMap[type.name] = type.possibleTypes.map(function (implementingType) { return implementingType.name; });\n            }\n        });\n        return typeMap;\n    };\n    return IntrospectionFragmentMatcher;\n}());\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar DepTrackingCache = (function () {\n    function DepTrackingCache(data) {\n        var _this = this;\n        if (data === void 0) { data = Object.create(null); }\n        this.data = data;\n        this.depend = wrap(function (dataId) { return _this.data[dataId]; }, {\n            disposable: true,\n            makeCacheKey: function (dataId) {\n                return dataId;\n            },\n        });\n    }\n    DepTrackingCache.prototype.toObject = function () {\n        return this.data;\n    };\n    DepTrackingCache.prototype.get = function (dataId) {\n        this.depend(dataId);\n        return this.data[dataId];\n    };\n    DepTrackingCache.prototype.set = function (dataId, value) {\n        var oldValue = this.data[dataId];\n        if (value !== oldValue) {\n            this.data[dataId] = value;\n            this.depend.dirty(dataId);\n        }\n    };\n    DepTrackingCache.prototype.delete = function (dataId) {\n        if (hasOwn.call(this.data, dataId)) {\n            delete this.data[dataId];\n            this.depend.dirty(dataId);\n        }\n    };\n    DepTrackingCache.prototype.clear = function () {\n        this.replace(null);\n    };\n    DepTrackingCache.prototype.replace = function (newData) {\n        var _this = this;\n        if (newData) {\n            Object.keys(newData).forEach(function (dataId) {\n                _this.set(dataId, newData[dataId]);\n            });\n            Object.keys(this.data).forEach(function (dataId) {\n                if (!hasOwn.call(newData, dataId)) {\n                    _this.delete(dataId);\n                }\n            });\n        }\n        else {\n            Object.keys(this.data).forEach(function (dataId) {\n                _this.delete(dataId);\n            });\n        }\n    };\n    return DepTrackingCache;\n}());\nfunction defaultNormalizedCacheFactory(seed) {\n    return new DepTrackingCache(seed);\n}\n\nvar StoreReader = (function () {\n    function StoreReader(_a) {\n        var _this = this;\n        var _b = _a === void 0 ? {} : _a, _c = _b.cacheKeyRoot, cacheKeyRoot = _c === void 0 ? new KeyTrie(canUseWeakMap) : _c, _d = _b.freezeResults, freezeResults = _d === void 0 ? false : _d;\n        var _e = this, executeStoreQuery = _e.executeStoreQuery, executeSelectionSet = _e.executeSelectionSet, executeSubSelectedArray = _e.executeSubSelectedArray;\n        this.freezeResults = freezeResults;\n        this.executeStoreQuery = wrap(function (options) {\n            return executeStoreQuery.call(_this, options);\n        }, {\n            makeCacheKey: function (_a) {\n                var query = _a.query, rootValue = _a.rootValue, contextValue = _a.contextValue, variableValues = _a.variableValues, fragmentMatcher = _a.fragmentMatcher;\n                if (contextValue.store instanceof DepTrackingCache) {\n                    return cacheKeyRoot.lookup(contextValue.store, query, fragmentMatcher, JSON.stringify(variableValues), rootValue.id);\n                }\n            }\n        });\n        this.executeSelectionSet = wrap(function (options) {\n            return executeSelectionSet.call(_this, options);\n        }, {\n            makeCacheKey: function (_a) {\n                var selectionSet = _a.selectionSet, rootValue = _a.rootValue, execContext = _a.execContext;\n                if (execContext.contextValue.store instanceof DepTrackingCache) {\n                    return cacheKeyRoot.lookup(execContext.contextValue.store, selectionSet, execContext.fragmentMatcher, JSON.stringify(execContext.variableValues), rootValue.id);\n                }\n            }\n        });\n        this.executeSubSelectedArray = wrap(function (options) {\n            return executeSubSelectedArray.call(_this, options);\n        }, {\n            makeCacheKey: function (_a) {\n                var field = _a.field, array = _a.array, execContext = _a.execContext;\n                if (execContext.contextValue.store instanceof DepTrackingCache) {\n                    return cacheKeyRoot.lookup(execContext.contextValue.store, field, array, JSON.stringify(execContext.variableValues));\n                }\n            }\n        });\n    }\n    StoreReader.prototype.readQueryFromStore = function (options) {\n        return this.diffQueryAgainstStore(__assign(__assign({}, options), { returnPartialData: false })).result;\n    };\n    StoreReader.prototype.diffQueryAgainstStore = function (_a) {\n        var store = _a.store, query = _a.query, variables = _a.variables, previousResult = _a.previousResult, _b = _a.returnPartialData, returnPartialData = _b === void 0 ? true : _b, _c = _a.rootId, rootId = _c === void 0 ? 'ROOT_QUERY' : _c, fragmentMatcherFunction = _a.fragmentMatcherFunction, config = _a.config;\n        var queryDefinition = getQueryDefinition(query);\n        variables = assign({}, getDefaultValues(queryDefinition), variables);\n        var context = {\n            store: store,\n            dataIdFromObject: config && config.dataIdFromObject,\n            cacheRedirects: (config && config.cacheRedirects) || {},\n        };\n        var execResult = this.executeStoreQuery({\n            query: query,\n            rootValue: {\n                type: 'id',\n                id: rootId,\n                generated: true,\n                typename: 'Query',\n            },\n            contextValue: context,\n            variableValues: variables,\n            fragmentMatcher: fragmentMatcherFunction,\n        });\n        var hasMissingFields = execResult.missing && execResult.missing.length > 0;\n        if (hasMissingFields && !returnPartialData) {\n            execResult.missing.forEach(function (info) {\n                if (info.tolerable)\n                    return;\n                throw process.env.NODE_ENV === \"production\" ? new InvariantError(8) : new InvariantError(\"Can't find field \" + info.fieldName + \" on object \" + JSON.stringify(info.object, null, 2) + \".\");\n            });\n        }\n        if (previousResult) {\n            if (isEqual(previousResult, execResult.result)) {\n                execResult.result = previousResult;\n            }\n        }\n        return {\n            result: execResult.result,\n            complete: !hasMissingFields,\n        };\n    };\n    StoreReader.prototype.executeStoreQuery = function (_a) {\n        var query = _a.query, rootValue = _a.rootValue, contextValue = _a.contextValue, variableValues = _a.variableValues, _b = _a.fragmentMatcher, fragmentMatcher = _b === void 0 ? defaultFragmentMatcher : _b;\n        var mainDefinition = getMainDefinition(query);\n        var fragments = getFragmentDefinitions(query);\n        var fragmentMap = createFragmentMap(fragments);\n        var execContext = {\n            query: query,\n            fragmentMap: fragmentMap,\n            contextValue: contextValue,\n            variableValues: variableValues,\n            fragmentMatcher: fragmentMatcher,\n        };\n        return this.executeSelectionSet({\n            selectionSet: mainDefinition.selectionSet,\n            rootValue: rootValue,\n            execContext: execContext,\n        });\n    };\n    StoreReader.prototype.executeSelectionSet = function (_a) {\n        var _this = this;\n        var selectionSet = _a.selectionSet, rootValue = _a.rootValue, execContext = _a.execContext;\n        var fragmentMap = execContext.fragmentMap, contextValue = execContext.contextValue, variables = execContext.variableValues;\n        var finalResult = { result: null };\n        var objectsToMerge = [];\n        var object = contextValue.store.get(rootValue.id);\n        var typename = (object && object.__typename) ||\n            (rootValue.id === 'ROOT_QUERY' && 'Query') ||\n            void 0;\n        function handleMissing(result) {\n            var _a;\n            if (result.missing) {\n                finalResult.missing = finalResult.missing || [];\n                (_a = finalResult.missing).push.apply(_a, result.missing);\n            }\n            return result.result;\n        }\n        selectionSet.selections.forEach(function (selection) {\n            var _a;\n            if (!shouldInclude(selection, variables)) {\n                return;\n            }\n            if (isField(selection)) {\n                var fieldResult = handleMissing(_this.executeField(object, typename, selection, execContext));\n                if (typeof fieldResult !== 'undefined') {\n                    objectsToMerge.push((_a = {},\n                        _a[resultKeyNameFromField(selection)] = fieldResult,\n                        _a));\n                }\n            }\n            else {\n                var fragment = void 0;\n                if (isInlineFragment(selection)) {\n                    fragment = selection;\n                }\n                else {\n                    fragment = fragmentMap[selection.name.value];\n                    if (!fragment) {\n                        throw process.env.NODE_ENV === \"production\" ? new InvariantError(9) : new InvariantError(\"No fragment named \" + selection.name.value);\n                    }\n                }\n                var typeCondition = fragment.typeCondition && fragment.typeCondition.name.value;\n                var match = !typeCondition ||\n                    execContext.fragmentMatcher(rootValue, typeCondition, contextValue);\n                if (match) {\n                    var fragmentExecResult = _this.executeSelectionSet({\n                        selectionSet: fragment.selectionSet,\n                        rootValue: rootValue,\n                        execContext: execContext,\n                    });\n                    if (match === 'heuristic' && fragmentExecResult.missing) {\n                        fragmentExecResult = __assign(__assign({}, fragmentExecResult), { missing: fragmentExecResult.missing.map(function (info) {\n                                return __assign(__assign({}, info), { tolerable: true });\n                            }) });\n                    }\n                    objectsToMerge.push(handleMissing(fragmentExecResult));\n                }\n            }\n        });\n        finalResult.result = mergeDeepArray(objectsToMerge);\n        if (this.freezeResults && process.env.NODE_ENV !== 'production') {\n            Object.freeze(finalResult.result);\n        }\n        return finalResult;\n    };\n    StoreReader.prototype.executeField = function (object, typename, field, execContext) {\n        var variables = execContext.variableValues, contextValue = execContext.contextValue;\n        var fieldName = field.name.value;\n        var args = argumentsObjectFromField(field, variables);\n        var info = {\n            resultKey: resultKeyNameFromField(field),\n            directives: getDirectiveInfoFromField(field, variables),\n        };\n        var readStoreResult = readStoreResolver(object, typename, fieldName, args, contextValue, info);\n        if (Array.isArray(readStoreResult.result)) {\n            return this.combineExecResults(readStoreResult, this.executeSubSelectedArray({\n                field: field,\n                array: readStoreResult.result,\n                execContext: execContext,\n            }));\n        }\n        if (!field.selectionSet) {\n            assertSelectionSetForIdValue(field, readStoreResult.result);\n            if (this.freezeResults && process.env.NODE_ENV !== 'production') {\n                maybeDeepFreeze(readStoreResult);\n            }\n            return readStoreResult;\n        }\n        if (readStoreResult.result == null) {\n            return readStoreResult;\n        }\n        return this.combineExecResults(readStoreResult, this.executeSelectionSet({\n            selectionSet: field.selectionSet,\n            rootValue: readStoreResult.result,\n            execContext: execContext,\n        }));\n    };\n    StoreReader.prototype.combineExecResults = function () {\n        var execResults = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            execResults[_i] = arguments[_i];\n        }\n        var missing;\n        execResults.forEach(function (execResult) {\n            if (execResult.missing) {\n                missing = missing || [];\n                missing.push.apply(missing, execResult.missing);\n            }\n        });\n        return {\n            result: execResults.pop().result,\n            missing: missing,\n        };\n    };\n    StoreReader.prototype.executeSubSelectedArray = function (_a) {\n        var _this = this;\n        var field = _a.field, array = _a.array, execContext = _a.execContext;\n        var missing;\n        function handleMissing(childResult) {\n            if (childResult.missing) {\n                missing = missing || [];\n                missing.push.apply(missing, childResult.missing);\n            }\n            return childResult.result;\n        }\n        array = array.map(function (item) {\n            if (item === null) {\n                return null;\n            }\n            if (Array.isArray(item)) {\n                return handleMissing(_this.executeSubSelectedArray({\n                    field: field,\n                    array: item,\n                    execContext: execContext,\n                }));\n            }\n            if (field.selectionSet) {\n                return handleMissing(_this.executeSelectionSet({\n                    selectionSet: field.selectionSet,\n                    rootValue: item,\n                    execContext: execContext,\n                }));\n            }\n            assertSelectionSetForIdValue(field, item);\n            return item;\n        });\n        if (this.freezeResults && process.env.NODE_ENV !== 'production') {\n            Object.freeze(array);\n        }\n        return { result: array, missing: missing };\n    };\n    return StoreReader;\n}());\nfunction assertSelectionSetForIdValue(field, value) {\n    if (!field.selectionSet && isIdValue(value)) {\n        throw process.env.NODE_ENV === \"production\" ? new InvariantError(10) : new InvariantError(\"Missing selection set for object of type \" + value.typename + \" returned for query field \" + field.name.value);\n    }\n}\nfunction defaultFragmentMatcher() {\n    return true;\n}\nfunction assertIdValue(idValue) {\n    process.env.NODE_ENV === \"production\" ? invariant(isIdValue(idValue), 11) : invariant(isIdValue(idValue), \"Encountered a sub-selection on the query, but the store doesn't have an object reference. This should never happen during normal use unless you have custom code that is directly manipulating the store; please file an issue.\");\n}\nfunction readStoreResolver(object, typename, fieldName, args, context, _a) {\n    var resultKey = _a.resultKey, directives = _a.directives;\n    var storeKeyName = fieldName;\n    if (args || directives) {\n        storeKeyName = getStoreKeyName(storeKeyName, args, directives);\n    }\n    var fieldValue = void 0;\n    if (object) {\n        fieldValue = object[storeKeyName];\n        if (typeof fieldValue === 'undefined' &&\n            context.cacheRedirects &&\n            typeof typename === 'string') {\n            var type = context.cacheRedirects[typename];\n            if (type) {\n                var resolver = type[fieldName];\n                if (resolver) {\n                    fieldValue = resolver(object, args, {\n                        getCacheKey: function (storeObj) {\n                            var id = context.dataIdFromObject(storeObj);\n                            return id && toIdValue({\n                                id: id,\n                                typename: storeObj.__typename,\n                            });\n                        },\n                    });\n                }\n            }\n        }\n    }\n    if (typeof fieldValue === 'undefined') {\n        return {\n            result: fieldValue,\n            missing: [{\n                    object: object,\n                    fieldName: storeKeyName,\n                    tolerable: false,\n                }],\n        };\n    }\n    if (isJsonValue(fieldValue)) {\n        fieldValue = fieldValue.json;\n    }\n    return {\n        result: fieldValue,\n    };\n}\n\nvar ObjectCache = (function () {\n    function ObjectCache(data) {\n        if (data === void 0) { data = Object.create(null); }\n        this.data = data;\n    }\n    ObjectCache.prototype.toObject = function () {\n        return this.data;\n    };\n    ObjectCache.prototype.get = function (dataId) {\n        return this.data[dataId];\n    };\n    ObjectCache.prototype.set = function (dataId, value) {\n        this.data[dataId] = value;\n    };\n    ObjectCache.prototype.delete = function (dataId) {\n        this.data[dataId] = void 0;\n    };\n    ObjectCache.prototype.clear = function () {\n        this.data = Object.create(null);\n    };\n    ObjectCache.prototype.replace = function (newData) {\n        this.data = newData || Object.create(null);\n    };\n    return ObjectCache;\n}());\nfunction defaultNormalizedCacheFactory$1(seed) {\n    return new ObjectCache(seed);\n}\n\nvar WriteError = (function (_super) {\n    __extends(WriteError, _super);\n    function WriteError() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'WriteError';\n        return _this;\n    }\n    return WriteError;\n}(Error));\nfunction enhanceErrorWithDocument(error, document) {\n    var enhancedError = new WriteError(\"Error writing result to store for query:\\n \" + JSON.stringify(document));\n    enhancedError.message += '\\n' + error.message;\n    enhancedError.stack = error.stack;\n    return enhancedError;\n}\nvar StoreWriter = (function () {\n    function StoreWriter() {\n    }\n    StoreWriter.prototype.writeQueryToStore = function (_a) {\n        var query = _a.query, result = _a.result, _b = _a.store, store = _b === void 0 ? defaultNormalizedCacheFactory() : _b, variables = _a.variables, dataIdFromObject = _a.dataIdFromObject, fragmentMatcherFunction = _a.fragmentMatcherFunction;\n        return this.writeResultToStore({\n            dataId: 'ROOT_QUERY',\n            result: result,\n            document: query,\n            store: store,\n            variables: variables,\n            dataIdFromObject: dataIdFromObject,\n            fragmentMatcherFunction: fragmentMatcherFunction,\n        });\n    };\n    StoreWriter.prototype.writeResultToStore = function (_a) {\n        var dataId = _a.dataId, result = _a.result, document = _a.document, _b = _a.store, store = _b === void 0 ? defaultNormalizedCacheFactory() : _b, variables = _a.variables, dataIdFromObject = _a.dataIdFromObject, fragmentMatcherFunction = _a.fragmentMatcherFunction;\n        var operationDefinition = getOperationDefinition(document);\n        try {\n            return this.writeSelectionSetToStore({\n                result: result,\n                dataId: dataId,\n                selectionSet: operationDefinition.selectionSet,\n                context: {\n                    store: store,\n                    processedData: {},\n                    variables: assign({}, getDefaultValues(operationDefinition), variables),\n                    dataIdFromObject: dataIdFromObject,\n                    fragmentMap: createFragmentMap(getFragmentDefinitions(document)),\n                    fragmentMatcherFunction: fragmentMatcherFunction,\n                },\n            });\n        }\n        catch (e) {\n            throw enhanceErrorWithDocument(e, document);\n        }\n    };\n    StoreWriter.prototype.writeSelectionSetToStore = function (_a) {\n        var _this = this;\n        var result = _a.result, dataId = _a.dataId, selectionSet = _a.selectionSet, context = _a.context;\n        var variables = context.variables, store = context.store, fragmentMap = context.fragmentMap;\n        selectionSet.selections.forEach(function (selection) {\n            var _a;\n            if (!shouldInclude(selection, variables)) {\n                return;\n            }\n            if (isField(selection)) {\n                var resultFieldKey = resultKeyNameFromField(selection);\n                var value = result[resultFieldKey];\n                if (typeof value !== 'undefined') {\n                    _this.writeFieldToStore({\n                        dataId: dataId,\n                        value: value,\n                        field: selection,\n                        context: context,\n                    });\n                }\n                else {\n                    var isDefered = false;\n                    var isClient = false;\n                    if (selection.directives && selection.directives.length) {\n                        isDefered = selection.directives.some(function (directive) { return directive.name && directive.name.value === 'defer'; });\n                        isClient = selection.directives.some(function (directive) { return directive.name && directive.name.value === 'client'; });\n                    }\n                    if (!isDefered && !isClient && context.fragmentMatcherFunction) {\n                        process.env.NODE_ENV === \"production\" || invariant.warn(\"Missing field \" + resultFieldKey + \" in \" + JSON.stringify(result, null, 2).substring(0, 100));\n                    }\n                }\n            }\n            else {\n                var fragment = void 0;\n                if (isInlineFragment(selection)) {\n                    fragment = selection;\n                }\n                else {\n                    fragment = (fragmentMap || {})[selection.name.value];\n                    process.env.NODE_ENV === \"production\" ? invariant(fragment, 4) : invariant(fragment, \"No fragment named \" + selection.name.value + \".\");\n                }\n                var matches = true;\n                if (context.fragmentMatcherFunction && fragment.typeCondition) {\n                    var id = dataId || 'self';\n                    var idValue = toIdValue({ id: id, typename: undefined });\n                    var fakeContext = {\n                        store: new ObjectCache((_a = {}, _a[id] = result, _a)),\n                        cacheRedirects: {},\n                    };\n                    var match = context.fragmentMatcherFunction(idValue, fragment.typeCondition.name.value, fakeContext);\n                    if (!isProduction() && match === 'heuristic') {\n                        process.env.NODE_ENV === \"production\" || invariant.error('WARNING: heuristic fragment matching going on!');\n                    }\n                    matches = !!match;\n                }\n                if (matches) {\n                    _this.writeSelectionSetToStore({\n                        result: result,\n                        selectionSet: fragment.selectionSet,\n                        dataId: dataId,\n                        context: context,\n                    });\n                }\n            }\n        });\n        return store;\n    };\n    StoreWriter.prototype.writeFieldToStore = function (_a) {\n        var _b;\n        var field = _a.field, value = _a.value, dataId = _a.dataId, context = _a.context;\n        var variables = context.variables, dataIdFromObject = context.dataIdFromObject, store = context.store;\n        var storeValue;\n        var storeObject;\n        var storeFieldName = storeKeyNameFromField(field, variables);\n        if (!field.selectionSet || value === null) {\n            storeValue =\n                value != null && typeof value === 'object'\n                    ?\n                        { type: 'json', json: value }\n                    :\n                        value;\n        }\n        else if (Array.isArray(value)) {\n            var generatedId = dataId + \".\" + storeFieldName;\n            storeValue = this.processArrayValue(value, generatedId, field.selectionSet, context);\n        }\n        else {\n            var valueDataId = dataId + \".\" + storeFieldName;\n            var generated = true;\n            if (!isGeneratedId(valueDataId)) {\n                valueDataId = '$' + valueDataId;\n            }\n            if (dataIdFromObject) {\n                var semanticId = dataIdFromObject(value);\n                process.env.NODE_ENV === \"production\" ? invariant(!semanticId || !isGeneratedId(semanticId), 5) : invariant(!semanticId || !isGeneratedId(semanticId), 'IDs returned by dataIdFromObject cannot begin with the \"$\" character.');\n                if (semanticId ||\n                    (typeof semanticId === 'number' && semanticId === 0)) {\n                    valueDataId = semanticId;\n                    generated = false;\n                }\n            }\n            if (!isDataProcessed(valueDataId, field, context.processedData)) {\n                this.writeSelectionSetToStore({\n                    dataId: valueDataId,\n                    result: value,\n                    selectionSet: field.selectionSet,\n                    context: context,\n                });\n            }\n            var typename = value.__typename;\n            storeValue = toIdValue({ id: valueDataId, typename: typename }, generated);\n            storeObject = store.get(dataId);\n            var escapedId = storeObject && storeObject[storeFieldName];\n            if (escapedId !== storeValue && isIdValue(escapedId)) {\n                var hadTypename = escapedId.typename !== undefined;\n                var hasTypename = typename !== undefined;\n                var typenameChanged = hadTypename && hasTypename && escapedId.typename !== typename;\n                process.env.NODE_ENV === \"production\" ? invariant(!generated || escapedId.generated || typenameChanged, 6) : invariant(!generated || escapedId.generated || typenameChanged, \"Store error: the application attempted to write an object with no provided id but the store already contains an id of \" + escapedId.id + \" for this object. The selectionSet that was trying to be written is:\\n\" + JSON.stringify(field));\n                process.env.NODE_ENV === \"production\" ? invariant(!hadTypename || hasTypename, 7) : invariant(!hadTypename || hasTypename, \"Store error: the application attempted to write an object with no provided typename but the store already contains an object with typename of \" + escapedId.typename + \" for the object of id \" + escapedId.id + \". The selectionSet that was trying to be written is:\\n\" + JSON.stringify(field));\n                if (escapedId.generated) {\n                    if (typenameChanged) {\n                        if (!generated) {\n                            store.delete(escapedId.id);\n                        }\n                    }\n                    else {\n                        mergeWithGenerated(escapedId.id, storeValue.id, store);\n                    }\n                }\n            }\n        }\n        storeObject = store.get(dataId);\n        if (!storeObject || !isEqual(storeValue, storeObject[storeFieldName])) {\n            store.set(dataId, __assign(__assign({}, storeObject), (_b = {}, _b[storeFieldName] = storeValue, _b)));\n        }\n    };\n    StoreWriter.prototype.processArrayValue = function (value, generatedId, selectionSet, context) {\n        var _this = this;\n        return value.map(function (item, index) {\n            if (item === null) {\n                return null;\n            }\n            var itemDataId = generatedId + \".\" + index;\n            if (Array.isArray(item)) {\n                return _this.processArrayValue(item, itemDataId, selectionSet, context);\n            }\n            var generated = true;\n            if (context.dataIdFromObject) {\n                var semanticId = context.dataIdFromObject(item);\n                if (semanticId) {\n                    itemDataId = semanticId;\n                    generated = false;\n                }\n            }\n            if (!isDataProcessed(itemDataId, selectionSet, context.processedData)) {\n                _this.writeSelectionSetToStore({\n                    dataId: itemDataId,\n                    result: item,\n                    selectionSet: selectionSet,\n                    context: context,\n                });\n            }\n            return toIdValue({ id: itemDataId, typename: item.__typename }, generated);\n        });\n    };\n    return StoreWriter;\n}());\nfunction isGeneratedId(id) {\n    return id[0] === '$';\n}\nfunction mergeWithGenerated(generatedKey, realKey, cache) {\n    if (generatedKey === realKey) {\n        return false;\n    }\n    var generated = cache.get(generatedKey);\n    var real = cache.get(realKey);\n    var madeChanges = false;\n    Object.keys(generated).forEach(function (key) {\n        var value = generated[key];\n        var realValue = real[key];\n        if (isIdValue(value) &&\n            isGeneratedId(value.id) &&\n            isIdValue(realValue) &&\n            !isEqual(value, realValue) &&\n            mergeWithGenerated(value.id, realValue.id, cache)) {\n            madeChanges = true;\n        }\n    });\n    cache.delete(generatedKey);\n    var newRealValue = __assign(__assign({}, generated), real);\n    if (isEqual(newRealValue, real)) {\n        return madeChanges;\n    }\n    cache.set(realKey, newRealValue);\n    return true;\n}\nfunction isDataProcessed(dataId, field, processedData) {\n    if (!processedData) {\n        return false;\n    }\n    if (processedData[dataId]) {\n        if (processedData[dataId].indexOf(field) >= 0) {\n            return true;\n        }\n        else {\n            processedData[dataId].push(field);\n        }\n    }\n    else {\n        processedData[dataId] = [field];\n    }\n    return false;\n}\n\nvar defaultConfig = {\n    fragmentMatcher: new HeuristicFragmentMatcher(),\n    dataIdFromObject: defaultDataIdFromObject,\n    addTypename: true,\n    resultCaching: true,\n    freezeResults: false,\n};\nfunction defaultDataIdFromObject(result) {\n    if (result.__typename) {\n        if (result.id !== undefined) {\n            return result.__typename + \":\" + result.id;\n        }\n        if (result._id !== undefined) {\n            return result.__typename + \":\" + result._id;\n        }\n    }\n    return null;\n}\nvar hasOwn$1 = Object.prototype.hasOwnProperty;\nvar OptimisticCacheLayer = (function (_super) {\n    __extends(OptimisticCacheLayer, _super);\n    function OptimisticCacheLayer(optimisticId, parent, transaction) {\n        var _this = _super.call(this, Object.create(null)) || this;\n        _this.optimisticId = optimisticId;\n        _this.parent = parent;\n        _this.transaction = transaction;\n        return _this;\n    }\n    OptimisticCacheLayer.prototype.toObject = function () {\n        return __assign(__assign({}, this.parent.toObject()), this.data);\n    };\n    OptimisticCacheLayer.prototype.get = function (dataId) {\n        return hasOwn$1.call(this.data, dataId)\n            ? this.data[dataId]\n            : this.parent.get(dataId);\n    };\n    return OptimisticCacheLayer;\n}(ObjectCache));\nvar InMemoryCache = (function (_super) {\n    __extends(InMemoryCache, _super);\n    function InMemoryCache(config) {\n        if (config === void 0) { config = {}; }\n        var _this = _super.call(this) || this;\n        _this.watches = new Set();\n        _this.typenameDocumentCache = new Map();\n        _this.cacheKeyRoot = new KeyTrie(canUseWeakMap);\n        _this.silenceBroadcast = false;\n        _this.config = __assign(__assign({}, defaultConfig), config);\n        if (_this.config.customResolvers) {\n            process.env.NODE_ENV === \"production\" || invariant.warn('customResolvers have been renamed to cacheRedirects. Please update your config as we will be deprecating customResolvers in the next major version.');\n            _this.config.cacheRedirects = _this.config.customResolvers;\n        }\n        if (_this.config.cacheResolvers) {\n            process.env.NODE_ENV === \"production\" || invariant.warn('cacheResolvers have been renamed to cacheRedirects. Please update your config as we will be deprecating cacheResolvers in the next major version.');\n            _this.config.cacheRedirects = _this.config.cacheResolvers;\n        }\n        _this.addTypename = !!_this.config.addTypename;\n        _this.data = _this.config.resultCaching\n            ? new DepTrackingCache()\n            : new ObjectCache();\n        _this.optimisticData = _this.data;\n        _this.storeWriter = new StoreWriter();\n        _this.storeReader = new StoreReader({\n            cacheKeyRoot: _this.cacheKeyRoot,\n            freezeResults: config.freezeResults,\n        });\n        var cache = _this;\n        var maybeBroadcastWatch = cache.maybeBroadcastWatch;\n        _this.maybeBroadcastWatch = wrap(function (c) {\n            return maybeBroadcastWatch.call(_this, c);\n        }, {\n            makeCacheKey: function (c) {\n                if (c.optimistic) {\n                    return;\n                }\n                if (c.previousResult) {\n                    return;\n                }\n                if (cache.data instanceof DepTrackingCache) {\n                    return cache.cacheKeyRoot.lookup(c.query, JSON.stringify(c.variables));\n                }\n            }\n        });\n        return _this;\n    }\n    InMemoryCache.prototype.restore = function (data) {\n        if (data)\n            this.data.replace(data);\n        return this;\n    };\n    InMemoryCache.prototype.extract = function (optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return (optimistic ? this.optimisticData : this.data).toObject();\n    };\n    InMemoryCache.prototype.read = function (options) {\n        if (typeof options.rootId === 'string' &&\n            typeof this.data.get(options.rootId) === 'undefined') {\n            return null;\n        }\n        var fragmentMatcher = this.config.fragmentMatcher;\n        var fragmentMatcherFunction = fragmentMatcher && fragmentMatcher.match;\n        return this.storeReader.readQueryFromStore({\n            store: options.optimistic ? this.optimisticData : this.data,\n            query: this.transformDocument(options.query),\n            variables: options.variables,\n            rootId: options.rootId,\n            fragmentMatcherFunction: fragmentMatcherFunction,\n            previousResult: options.previousResult,\n            config: this.config,\n        }) || null;\n    };\n    InMemoryCache.prototype.write = function (write) {\n        var fragmentMatcher = this.config.fragmentMatcher;\n        var fragmentMatcherFunction = fragmentMatcher && fragmentMatcher.match;\n        this.storeWriter.writeResultToStore({\n            dataId: write.dataId,\n            result: write.result,\n            variables: write.variables,\n            document: this.transformDocument(write.query),\n            store: this.data,\n            dataIdFromObject: this.config.dataIdFromObject,\n            fragmentMatcherFunction: fragmentMatcherFunction,\n        });\n        this.broadcastWatches();\n    };\n    InMemoryCache.prototype.diff = function (query) {\n        var fragmentMatcher = this.config.fragmentMatcher;\n        var fragmentMatcherFunction = fragmentMatcher && fragmentMatcher.match;\n        return this.storeReader.diffQueryAgainstStore({\n            store: query.optimistic ? this.optimisticData : this.data,\n            query: this.transformDocument(query.query),\n            variables: query.variables,\n            returnPartialData: query.returnPartialData,\n            previousResult: query.previousResult,\n            fragmentMatcherFunction: fragmentMatcherFunction,\n            config: this.config,\n        });\n    };\n    InMemoryCache.prototype.watch = function (watch) {\n        var _this = this;\n        this.watches.add(watch);\n        return function () {\n            _this.watches.delete(watch);\n        };\n    };\n    InMemoryCache.prototype.evict = function (query) {\n        throw process.env.NODE_ENV === \"production\" ? new InvariantError(1) : new InvariantError(\"eviction is not implemented on InMemory Cache\");\n    };\n    InMemoryCache.prototype.reset = function () {\n        this.data.clear();\n        this.broadcastWatches();\n        return Promise.resolve();\n    };\n    InMemoryCache.prototype.removeOptimistic = function (idToRemove) {\n        var toReapply = [];\n        var removedCount = 0;\n        var layer = this.optimisticData;\n        while (layer instanceof OptimisticCacheLayer) {\n            if (layer.optimisticId === idToRemove) {\n                ++removedCount;\n            }\n            else {\n                toReapply.push(layer);\n            }\n            layer = layer.parent;\n        }\n        if (removedCount > 0) {\n            this.optimisticData = layer;\n            while (toReapply.length > 0) {\n                var layer_1 = toReapply.pop();\n                this.performTransaction(layer_1.transaction, layer_1.optimisticId);\n            }\n            this.broadcastWatches();\n        }\n    };\n    InMemoryCache.prototype.performTransaction = function (transaction, optimisticId) {\n        var _a = this, data = _a.data, silenceBroadcast = _a.silenceBroadcast;\n        this.silenceBroadcast = true;\n        if (typeof optimisticId === 'string') {\n            this.data = this.optimisticData = new OptimisticCacheLayer(optimisticId, this.optimisticData, transaction);\n        }\n        try {\n            transaction(this);\n        }\n        finally {\n            this.silenceBroadcast = silenceBroadcast;\n            this.data = data;\n        }\n        this.broadcastWatches();\n    };\n    InMemoryCache.prototype.recordOptimisticTransaction = function (transaction, id) {\n        return this.performTransaction(transaction, id);\n    };\n    InMemoryCache.prototype.transformDocument = function (document) {\n        if (this.addTypename) {\n            var result = this.typenameDocumentCache.get(document);\n            if (!result) {\n                result = addTypenameToDocument(document);\n                this.typenameDocumentCache.set(document, result);\n                this.typenameDocumentCache.set(result, result);\n            }\n            return result;\n        }\n        return document;\n    };\n    InMemoryCache.prototype.broadcastWatches = function () {\n        var _this = this;\n        if (!this.silenceBroadcast) {\n            this.watches.forEach(function (c) { return _this.maybeBroadcastWatch(c); });\n        }\n    };\n    InMemoryCache.prototype.maybeBroadcastWatch = function (c) {\n        c.callback(this.diff({\n            query: c.query,\n            variables: c.variables,\n            previousResult: c.previousResult && c.previousResult(),\n            optimistic: c.optimistic,\n        }));\n    };\n    return InMemoryCache;\n}(ApolloCache));\n\nexport { HeuristicFragmentMatcher, InMemoryCache, IntrospectionFragmentMatcher, ObjectCache, StoreReader, StoreWriter, WriteError, assertIdValue, defaultDataIdFromObject, defaultNormalizedCacheFactory$1 as defaultNormalizedCacheFactory, enhanceErrorWithDocument };\n//# sourceMappingURL=bundle.esm.js.map\n","import { __assign } from 'tslib';\nimport { print } from 'graphql/language/printer';\nimport { InvariantError } from 'ts-invariant';\n\nvar defaultHttpOptions = {\n    includeQuery: true,\n    includeExtensions: false,\n};\nvar defaultHeaders = {\n    accept: '*/*',\n    'content-type': 'application/json',\n};\nvar defaultOptions = {\n    method: 'POST',\n};\nvar fallbackHttpConfig = {\n    http: defaultHttpOptions,\n    headers: defaultHeaders,\n    options: defaultOptions,\n};\nvar throwServerError = function (response, result, message) {\n    var error = new Error(message);\n    error.name = 'ServerError';\n    error.response = response;\n    error.statusCode = response.status;\n    error.result = result;\n    throw error;\n};\nvar parseAndCheckHttpResponse = function (operations) { return function (response) {\n    return (response\n        .text()\n        .then(function (bodyText) {\n        try {\n            return JSON.parse(bodyText);\n        }\n        catch (err) {\n            var parseError = err;\n            parseError.name = 'ServerParseError';\n            parseError.response = response;\n            parseError.statusCode = response.status;\n            parseError.bodyText = bodyText;\n            return Promise.reject(parseError);\n        }\n    })\n        .then(function (result) {\n        if (response.status >= 300) {\n            throwServerError(response, result, \"Response not successful: Received status code \" + response.status);\n        }\n        if (!Array.isArray(result) &&\n            !result.hasOwnProperty('data') &&\n            !result.hasOwnProperty('errors')) {\n            throwServerError(response, result, \"Server response was missing for query '\" + (Array.isArray(operations)\n                ? operations.map(function (op) { return op.operationName; })\n                : operations.operationName) + \"'.\");\n        }\n        return result;\n    }));\n}; };\nvar checkFetcher = function (fetcher) {\n    if (!fetcher && typeof fetch === 'undefined') {\n        var library = 'unfetch';\n        if (typeof window === 'undefined')\n            library = 'node-fetch';\n        throw process.env.NODE_ENV === \"production\" ? new InvariantError(1) : new InvariantError(\"\\nfetch is not found globally and no fetcher passed, to fix pass a fetch for\\nyour environment like https://www.npmjs.com/package/\" + library + \".\\n\\nFor example:\\nimport fetch from '\" + library + \"';\\nimport { createHttpLink } from 'apollo-link-http';\\n\\nconst link = createHttpLink({ uri: '/graphql', fetch: fetch });\");\n    }\n};\nvar createSignalIfSupported = function () {\n    if (typeof AbortController === 'undefined')\n        return { controller: false, signal: false };\n    var controller = new AbortController();\n    var signal = controller.signal;\n    return { controller: controller, signal: signal };\n};\nvar selectHttpOptionsAndBody = function (operation, fallbackConfig) {\n    var configs = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        configs[_i - 2] = arguments[_i];\n    }\n    var options = __assign({}, fallbackConfig.options, { headers: fallbackConfig.headers, credentials: fallbackConfig.credentials });\n    var http = fallbackConfig.http;\n    configs.forEach(function (config) {\n        options = __assign({}, options, config.options, { headers: __assign({}, options.headers, config.headers) });\n        if (config.credentials)\n            options.credentials = config.credentials;\n        http = __assign({}, http, config.http);\n    });\n    var operationName = operation.operationName, extensions = operation.extensions, variables = operation.variables, query = operation.query;\n    var body = { operationName: operationName, variables: variables };\n    if (http.includeExtensions)\n        body.extensions = extensions;\n    if (http.includeQuery)\n        body.query = print(query);\n    return {\n        options: options,\n        body: body,\n    };\n};\nvar serializeFetchParameter = function (p, label) {\n    var serialized;\n    try {\n        serialized = JSON.stringify(p);\n    }\n    catch (e) {\n        var parseError = process.env.NODE_ENV === \"production\" ? new InvariantError(2) : new InvariantError(\"Network request failed. \" + label + \" is not serializable: \" + e.message);\n        parseError.parseError = e;\n        throw parseError;\n    }\n    return serialized;\n};\nvar selectURI = function (operation, fallbackURI) {\n    var context = operation.getContext();\n    var contextURI = context.uri;\n    if (contextURI) {\n        return contextURI;\n    }\n    else if (typeof fallbackURI === 'function') {\n        return fallbackURI(operation);\n    }\n    else {\n        return fallbackURI || '/graphql';\n    }\n};\n\nexport { checkFetcher, createSignalIfSupported, fallbackHttpConfig, parseAndCheckHttpResponse, selectHttpOptionsAndBody, selectURI, serializeFetchParameter, throwServerError };\n//# sourceMappingURL=bundle.esm.js.map\n","import { __rest, __assign, __extends } from 'tslib';\nimport { ApolloLink, fromError, Observable } from 'apollo-link';\nimport { checkFetcher, selectURI, selectHttpOptionsAndBody, fallbackHttpConfig, createSignalIfSupported, serializeFetchParameter, parseAndCheckHttpResponse } from 'apollo-link-http-common';\n\nvar createHttpLink = function (linkOptions) {\n    if (linkOptions === void 0) { linkOptions = {}; }\n    var _a = linkOptions.uri, uri = _a === void 0 ? '/graphql' : _a, fetcher = linkOptions.fetch, includeExtensions = linkOptions.includeExtensions, useGETForQueries = linkOptions.useGETForQueries, requestOptions = __rest(linkOptions, [\"uri\", \"fetch\", \"includeExtensions\", \"useGETForQueries\"]);\n    checkFetcher(fetcher);\n    if (!fetcher) {\n        fetcher = fetch;\n    }\n    var linkConfig = {\n        http: { includeExtensions: includeExtensions },\n        options: requestOptions.fetchOptions,\n        credentials: requestOptions.credentials,\n        headers: requestOptions.headers,\n    };\n    return new ApolloLink(function (operation) {\n        var chosenURI = selectURI(operation, uri);\n        var context = operation.getContext();\n        var clientAwarenessHeaders = {};\n        if (context.clientAwareness) {\n            var _a = context.clientAwareness, name_1 = _a.name, version = _a.version;\n            if (name_1) {\n                clientAwarenessHeaders['apollographql-client-name'] = name_1;\n            }\n            if (version) {\n                clientAwarenessHeaders['apollographql-client-version'] = version;\n            }\n        }\n        var contextHeaders = __assign({}, clientAwarenessHeaders, context.headers);\n        var contextConfig = {\n            http: context.http,\n            options: context.fetchOptions,\n            credentials: context.credentials,\n            headers: contextHeaders,\n        };\n        var _b = selectHttpOptionsAndBody(operation, fallbackHttpConfig, linkConfig, contextConfig), options = _b.options, body = _b.body;\n        var controller;\n        if (!options.signal) {\n            var _c = createSignalIfSupported(), _controller = _c.controller, signal = _c.signal;\n            controller = _controller;\n            if (controller)\n                options.signal = signal;\n        }\n        var definitionIsMutation = function (d) {\n            return d.kind === 'OperationDefinition' && d.operation === 'mutation';\n        };\n        if (useGETForQueries &&\n            !operation.query.definitions.some(definitionIsMutation)) {\n            options.method = 'GET';\n        }\n        if (options.method === 'GET') {\n            var _d = rewriteURIForGET(chosenURI, body), newURI = _d.newURI, parseError = _d.parseError;\n            if (parseError) {\n                return fromError(parseError);\n            }\n            chosenURI = newURI;\n        }\n        else {\n            try {\n                options.body = serializeFetchParameter(body, 'Payload');\n            }\n            catch (parseError) {\n                return fromError(parseError);\n            }\n        }\n        return new Observable(function (observer) {\n            fetcher(chosenURI, options)\n                .then(function (response) {\n                operation.setContext({ response: response });\n                return response;\n            })\n                .then(parseAndCheckHttpResponse(operation))\n                .then(function (result) {\n                observer.next(result);\n                observer.complete();\n                return result;\n            })\n                .catch(function (err) {\n                if (err.name === 'AbortError')\n                    return;\n                if (err.result && err.result.errors && err.result.data) {\n                    observer.next(err.result);\n                }\n                observer.error(err);\n            });\n            return function () {\n                if (controller)\n                    controller.abort();\n            };\n        });\n    });\n};\nfunction rewriteURIForGET(chosenURI, body) {\n    var queryParams = [];\n    var addQueryParam = function (key, value) {\n        queryParams.push(key + \"=\" + encodeURIComponent(value));\n    };\n    if ('query' in body) {\n        addQueryParam('query', body.query);\n    }\n    if (body.operationName) {\n        addQueryParam('operationName', body.operationName);\n    }\n    if (body.variables) {\n        var serializedVariables = void 0;\n        try {\n            serializedVariables = serializeFetchParameter(body.variables, 'Variables map');\n        }\n        catch (parseError) {\n            return { parseError: parseError };\n        }\n        addQueryParam('variables', serializedVariables);\n    }\n    if (body.extensions) {\n        var serializedExtensions = void 0;\n        try {\n            serializedExtensions = serializeFetchParameter(body.extensions, 'Extensions map');\n        }\n        catch (parseError) {\n            return { parseError: parseError };\n        }\n        addQueryParam('extensions', serializedExtensions);\n    }\n    var fragment = '', preFragment = chosenURI;\n    var fragmentStart = chosenURI.indexOf('#');\n    if (fragmentStart !== -1) {\n        fragment = chosenURI.substr(fragmentStart);\n        preFragment = chosenURI.substr(0, fragmentStart);\n    }\n    var queryParamsPrefix = preFragment.indexOf('?') === -1 ? '?' : '&';\n    var newURI = preFragment + queryParamsPrefix + queryParams.join('&') + fragment;\n    return { newURI: newURI };\n}\nvar HttpLink = (function (_super) {\n    __extends(HttpLink, _super);\n    function HttpLink(opts) {\n        return _super.call(this, createHttpLink(opts).request) || this;\n    }\n    return HttpLink;\n}(ApolloLink));\n\nexport { HttpLink, createHttpLink };\n//# sourceMappingURL=bundle.esm.js.map\n","import { __extends } from 'tslib';\nimport { ApolloLink, Observable } from 'apollo-link';\n\nfunction onError(errorHandler) {\n    return new ApolloLink(function (operation, forward) {\n        return new Observable(function (observer) {\n            var sub;\n            var retriedSub;\n            var retriedResult;\n            try {\n                sub = forward(operation).subscribe({\n                    next: function (result) {\n                        if (result.errors) {\n                            retriedResult = errorHandler({\n                                graphQLErrors: result.errors,\n                                response: result,\n                                operation: operation,\n                                forward: forward,\n                            });\n                            if (retriedResult) {\n                                retriedSub = retriedResult.subscribe({\n                                    next: observer.next.bind(observer),\n                                    error: observer.error.bind(observer),\n                                    complete: observer.complete.bind(observer),\n                                });\n                                return;\n                            }\n                        }\n                        observer.next(result);\n                    },\n                    error: function (networkError) {\n                        retriedResult = errorHandler({\n                            operation: operation,\n                            networkError: networkError,\n                            graphQLErrors: networkError &&\n                                networkError.result &&\n                                networkError.result.errors,\n                            forward: forward,\n                        });\n                        if (retriedResult) {\n                            retriedSub = retriedResult.subscribe({\n                                next: observer.next.bind(observer),\n                                error: observer.error.bind(observer),\n                                complete: observer.complete.bind(observer),\n                            });\n                            return;\n                        }\n                        observer.error(networkError);\n                    },\n                    complete: function () {\n                        if (!retriedResult) {\n                            observer.complete.bind(observer)();\n                        }\n                    },\n                });\n            }\n            catch (e) {\n                errorHandler({ networkError: e, operation: operation, forward: forward });\n                observer.error(e);\n            }\n            return function () {\n                if (sub)\n                    sub.unsubscribe();\n                if (retriedSub)\n                    sub.unsubscribe();\n            };\n        });\n    });\n}\nvar ErrorLink = (function (_super) {\n    __extends(ErrorLink, _super);\n    function ErrorLink(errorHandler) {\n        var _this = _super.call(this) || this;\n        _this.link = onError(errorHandler);\n        return _this;\n    }\n    ErrorLink.prototype.request = function (operation, forward) {\n        return this.link.request(operation, forward);\n    };\n    return ErrorLink;\n}(ApolloLink));\n\nexport { ErrorLink, onError };\n//# sourceMappingURL=bundle.esm.js.map\n","import { print } from 'graphql';\nimport { checkDocument, removeDirectivesFromDocument } from 'apollo-utilities';\nvar connectionRemoveConfig = {\n    test: function (directive) { return directive.name.value === 'client'; },\n    remove: true,\n};\nvar removed = new Map();\nexport function removeClientSetsFromDocument(query) {\n    var cached = removed.get(query);\n    if (cached)\n        return cached;\n    checkDocument(query);\n    var docClone = removeDirectivesFromDocument([connectionRemoveConfig], query);\n    removed.set(query, docClone);\n    return docClone;\n}\nexport function normalizeTypeDefs(typeDefs) {\n    var defs = Array.isArray(typeDefs) ? typeDefs : [typeDefs];\n    return defs\n        .map(function (typeDef) { return (typeof typeDef === 'string' ? typeDef : print(typeDef)); })\n        .map(function (str) { return str.trim(); })\n        .join('\\n');\n}\n//# sourceMappingURL=utils.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { ApolloLink, Observable, } from 'apollo-link';\nimport { hasDirectives, getMainDefinition } from 'apollo-utilities';\nimport * as Async from 'graphql-anywhere/lib/async';\nvar graphql = Async.graphql;\nimport { removeClientSetsFromDocument, normalizeTypeDefs } from './utils';\nvar capitalizeFirstLetter = function (str) { return str.charAt(0).toUpperCase() + str.slice(1); };\nexport var withClientState = function (clientStateConfig) {\n    if (clientStateConfig === void 0) { clientStateConfig = { resolvers: {}, defaults: {} }; }\n    var defaults = clientStateConfig.defaults, cache = clientStateConfig.cache, typeDefs = clientStateConfig.typeDefs, fragmentMatcher = clientStateConfig.fragmentMatcher;\n    if (cache && defaults) {\n        cache.writeData({ data: defaults });\n    }\n    return new (function (_super) {\n        __extends(StateLink, _super);\n        function StateLink() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        StateLink.prototype.writeDefaults = function () {\n            if (cache && defaults) {\n                cache.writeData({ data: defaults });\n            }\n        };\n        StateLink.prototype.request = function (operation, forward) {\n            if (forward === void 0) { forward = function () { return Observable.of({ data: {} }); }; }\n            if (typeDefs) {\n                var directives_1 = 'directive @client on FIELD';\n                var definition_1 = normalizeTypeDefs(typeDefs);\n                operation.setContext(function (_a) {\n                    var _b = _a.schemas, schemas = _b === void 0 ? [] : _b;\n                    return ({\n                        schemas: schemas.concat([{ definition: definition_1, directives: directives_1 }]),\n                    });\n                });\n            }\n            var isClient = hasDirectives(['client'], operation.query);\n            if (!isClient)\n                return forward(operation);\n            var resolvers = typeof clientStateConfig.resolvers === 'function'\n                ? clientStateConfig.resolvers()\n                : clientStateConfig.resolvers;\n            var server = removeClientSetsFromDocument(operation.query);\n            var query = operation.query;\n            var type = capitalizeFirstLetter((getMainDefinition(query) || {}).operation) || 'Query';\n            var resolver = function (fieldName, rootValue, args, context, info) {\n                if (rootValue === void 0) { rootValue = {}; }\n                var resultKey = info.resultKey;\n                var aliasedNode = rootValue[resultKey];\n                var preAliasingNode = rootValue[fieldName];\n                var aliasNeeded = resultKey !== fieldName;\n                if (aliasedNode !== undefined || preAliasingNode !== undefined) {\n                    return aliasedNode || preAliasingNode;\n                }\n                var resolverMap = resolvers[rootValue.__typename || type];\n                if (resolverMap) {\n                    var resolve = resolverMap[fieldName];\n                    if (resolve)\n                        return resolve(rootValue, args, context, info);\n                }\n                return ((aliasNeeded ? aliasedNode : preAliasingNode) ||\n                    (defaults || {})[fieldName]);\n            };\n            if (server)\n                operation.query = server;\n            var obs = server && forward\n                ? forward(operation)\n                : Observable.of({\n                    data: {},\n                });\n            return new Observable(function (observer) {\n                var complete = false;\n                var handlingNext = false;\n                obs.subscribe({\n                    next: function (_a) {\n                        var data = _a.data, errors = _a.errors;\n                        var observerErrorHandler = observer.error.bind(observer);\n                        var context = operation.getContext();\n                        handlingNext = true;\n                        graphql(resolver, query, data, context, operation.variables, {\n                            fragmentMatcher: fragmentMatcher,\n                        })\n                            .then(function (nextData) {\n                            observer.next({\n                                data: nextData,\n                                errors: errors,\n                            });\n                            if (complete) {\n                                observer.complete();\n                            }\n                            handlingNext = false;\n                        })\n                            .catch(observerErrorHandler);\n                    },\n                    error: observer.error.bind(observer),\n                    complete: function () {\n                        if (!handlingNext) {\n                            observer.complete();\n                        }\n                        complete = true;\n                    },\n                });\n            });\n        };\n        return StateLink;\n    }(ApolloLink))();\n};\n//# sourceMappingURL=index.js.map","/*\n * Copyright (C) 2018 - present Instructure, Inc.\n *\n * This file is part of Canvas.\n *\n * Canvas is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, version 3 of the License.\n *\n * Canvas is distributed in the hope that it will be useful, but WITHOUT ANY\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\n * A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License along\n * with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport getCookie from './shared/helpers/getCookie'\nimport gql from 'graphql-tag'\nimport {ApolloClient} from 'apollo-client'\nimport {InMemoryCache, IntrospectionFragmentMatcher} from 'apollo-cache-inmemory'\nimport {HttpLink} from 'apollo-link-http'\nimport {onError} from 'apollo-link-error'\nimport {ApolloLink} from 'apollo-link'\nimport {ApolloProvider, Query} from 'react-apollo'\nimport introspectionQueryResultData from './fragmentTypes.json'\nimport {withClientState} from 'apollo-link-state'\n\nfunction createConsoleErrorReportLink() {\n  return onError(({graphQLErrors, networkError}) => {\n    if (graphQLErrors)\n      graphQLErrors.map(({message, locations, path}) =>\n        console.log(`[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`)\n      )\n    if (networkError) console.log(`[Network error]: ${networkError}`)\n  })\n}\n\nfunction setHeadersLink() {\n  return new ApolloLink((operation, forward) => {\n    operation.setContext({\n      headers: {\n        'X-Requested-With': 'XMLHttpRequest',\n        'GraphQL-Metrics': true,\n        'X-CSRF-Token': getCookie('_csrf_token')\n      }\n    })\n    return forward(operation)\n  })\n}\n\nfunction createHttpLink() {\n  return new HttpLink({\n    uri: '/api/graphql',\n    credentials: 'same-origin'\n  })\n}\n\nfunction createCache() {\n  return new InMemoryCache({\n    addTypename: true,\n    dataIdFromObject: object => {\n      if (object.id) {\n        return object.id\n      } else if (object._id && object.__typename) {\n        return object.__typename + object._id\n      } else {\n        return null\n      }\n    },\n    fragmentMatcher: new IntrospectionFragmentMatcher({\n      introspectionQueryResultData\n    })\n  })\n}\n\nfunction createClient(opts = {}) {\n  const cache = createCache()\n  const defaults = opts.defaults || {}\n  const resolvers = opts.resolvers || {}\n  const stateLink = withClientState({\n    cache,\n    resolvers,\n    defaults\n  })\n\n  const links =\n    createClient.mockLink == null\n      ? [createConsoleErrorReportLink(), setHeadersLink(), stateLink, createHttpLink()]\n      : [createConsoleErrorReportLink(), stateLink, createClient.mockLink]\n\n  const client = new ApolloClient({\n    link: ApolloLink.from(links),\n    cache\n  })\n\n  return client\n}\n\nexport {createClient, gql, ApolloProvider, Query, createCache}\n"],"sourceRoot":""}