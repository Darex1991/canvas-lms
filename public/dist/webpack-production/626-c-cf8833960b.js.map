{"version":3,"sources":["webpack:///./app/jsx/course_settings/components/CSPSelectionBox.js","webpack:///./app/jsx/course_settings/renderCSPSelectionBox.js"],"names":["CSPSelectionBox","Component","state","disabled","loading","failedToLoad","handleChange","e","initialState","this","checked","currentTarget","setState","props","apiLibrary","put","courseId","status","then","response","data","enabled","catch","showFlashError","I18n","t","componentDidMount","get","render","checkbox","Checkbox","label","onChange","canManage","Spinner","renderTitle","size","Tooltip","variant","tip","placement","renderCSPSelectionBox","containerElement","ReactDOM","ENV","COURSE_ID","PERMISSIONS","manage_account_settings","axios","defaultProps"],"mappings":";;;AA2Be,MAAMA,UAAwBC,YAAU,mCAcrDC,MAAQ,CACNC,UAAU,EACVC,SAAS,EACTC,cAAc,GAjBqC,KAkCrDC,aAAeC,IACb,MAAMC,EAAeC,KAAKP,MAAMC,SAC1BO,EAAUH,EAAEI,cAAcD;AAChCD,KAAKG,SACH,CACET,SAAUO,GAEZ,KACED,KAAKI,MAAMC,WACRC,IADH,0BAC0BN,KAAKI,MAAMG,SADrC,iBAC8D,CAC1DC,OAAQP,EAAU,WAAa,YAEhCQ,KAAKC,IACJV,KAAKG,SAAS,CACZT,UAAWgB,EAASC,KAAKC,YAG5BC,MAAM,KAELb,KAAKG,SACH,CACET,SAAUK,GAEZe,YAAeC,IAAKC,EAAE,0DArClCC,oBACEjB,KAAKI,MAAMC,WACRa,IADH,0BAC0BlB,KAAKI,MAAMG,SADrC,kBAEGE,KAAKC,IACJV,KAAKG,SAAS,CACZT,UAAWgB,EAASC,KAAKC,QACzBjB,SAAS,MAGZkB,MAAM,KACLb,KAAKG,SAAS,CAACP,cAAc,EAAMD,SAAS,MAkClDwB,SACE,IAAKnB,KAAKP,MAAME,SAAWK,KAAKP,MAAMG,aACpC,OAAO,4BAAMmB,IAAKC,EAAE;AAGtB,MAAMI,EACJ,YAACC,EAAA,EAAD,CACEC,MAAOP,IAAKC,EAAE,mCACdf,QAASD,KAAKP,MAAMC,SACpB6B,SAAUvB,KAAKH,aACfH,UAAWM,KAAKI,MAAMoB;AAI1B,OACE,4BACGxB,KAAKP,MAAME,QACV,YAAC8B,EAAA,EAAD,CAASC,YAAaX,IAAKC,EAAE,WAAYW,KAAK,YAC5C3B,KAAKI,MAAMoB,UACbJ,EAEA,YAACQ,EAAA,EAAD,CACEC,QAAQ,UACRC,IAAKf,IAAKC,EAAE,wDACZe,UAAU,cAHZ,EAKGX,KC9FN,SAASY,EAAsBC,GACpCC,IAASf,OACP,YAAC,EAAD,CACEZ,SAAU4B,IAAIC,UACdZ,UAAWW,IAAIE,YAAYC,wBAC3BjC,WAAYkC,MAEdN,GDHiB1C,EAUZiD,aAAe,CACpBhB,WAAW","file":"626-c-cf8833960b.js","sourcesContent":["/*\n * Copyright (C) 2019 - present Instructure, Inc.\n *\n * This file is part of Canvas.\n *\n * Canvas is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, version 3 of the License.\n *\n * Canvas is distributed in the hope that it will be useful, but WITHOUT ANY\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\n * A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License along\n * with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport React, {Component} from 'react'\nimport I18n from 'i18n!course_settings'\nimport {bool, func, shape, string} from 'prop-types'\nimport {Checkbox} from '@instructure/ui-forms'\nimport {Spinner} from '@instructure/ui-elements'\nimport {Tooltip} from '@instructure/ui-overlays'\n\nimport {showFlashError} from '../../shared/FlashAlert'\n\nexport default class CSPSelectionBox extends Component {\n  static propTypes = {\n    apiLibrary: shape({\n      get: func.isRequired,\n      put: func.isRequired\n    }).isRequired,\n    courseId: string.isRequired,\n    canManage: bool\n  }\n\n  static defaultProps = {\n    canManage: false\n  }\n\n  state = {\n    disabled: false,\n    loading: true,\n    failedToLoad: false\n  }\n\n  componentDidMount() {\n    this.props.apiLibrary\n      .get(`/api/v1/courses/${this.props.courseId}/csp_settings`)\n      .then(response => {\n        this.setState({\n          disabled: !response.data.enabled,\n          loading: false\n        })\n      })\n      .catch(() => {\n        this.setState({failedToLoad: true, loading: false})\n      })\n  }\n\n  handleChange = e => {\n    const initialState = this.state.disabled\n    const checked = e.currentTarget.checked\n    this.setState(\n      {\n        disabled: checked\n      },\n      () => {\n        this.props.apiLibrary\n          .put(`/api/v1/courses/${this.props.courseId}/csp_settings`, {\n            status: checked ? 'disabled' : 'enabled'\n          })\n          .then(response => {\n            this.setState({\n              disabled: !response.data.enabled\n            })\n          })\n          .catch(() => {\n            // Something bad happened, revert to the original value\n            this.setState(\n              {\n                disabled: initialState\n              },\n              showFlashError(I18n.t('Saving the CSP status failed, please try again.'))\n            )\n          })\n      }\n    )\n  }\n\n  render() {\n    if (!this.state.loading && this.state.failedToLoad) {\n      return <div>{I18n.t('Failed to load CSP information, try refreshing the page.')}</div>\n    }\n\n    const checkbox = (\n      <Checkbox\n        label={I18n.t('Disable Content Security Policy')}\n        checked={this.state.disabled}\n        onChange={this.handleChange}\n        disabled={!this.props.canManage}\n      />\n    )\n\n    return (\n      <div>\n        {this.state.loading ? (\n          <Spinner renderTitle={I18n.t('Loading')} size=\"x-small\" />\n        ) : this.props.canManage ? (\n          checkbox\n        ) : (\n          <Tooltip\n            variant=\"inverse\"\n            tip={I18n.t('Only account administrators can change this setting.')}\n            placement=\"start\"\n          >\n            {checkbox}\n          </Tooltip>\n        )}\n      </div>\n    )\n  }\n}\n","/*\n * Copyright (C) 2019 - present Instructure, Inc.\n *\n * This file is part of Canvas.\n *\n * Canvas is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, version 3 of the License.\n *\n * Canvas is distributed in the hope that it will be useful, but WITHOUT ANY\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\n * A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License along\n * with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport axios from 'axios'\nimport ReactDOM from 'react-dom'\nimport React from 'react'\nimport CSPSelectionBox from './components/CSPSelectionBox'\n\nexport function renderCSPSelectionBox(containerElement) {\n  ReactDOM.render(\n    <CSPSelectionBox\n      courseId={ENV.COURSE_ID}\n      canManage={ENV.PERMISSIONS.manage_account_settings}\n      apiLibrary={axios}\n    />,\n    containerElement\n  )\n}\n"],"sourceRoot":""}