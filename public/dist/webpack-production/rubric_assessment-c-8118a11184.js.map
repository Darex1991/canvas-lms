{"version":3,"sources":["webpack:///./node_modules/@instructure/ui-dom-utils/es/getFontSize.js","webpack:///./node_modules/@instructure/ui-utils/es/px.js","webpack:///./app/jsx/shared/helpers/numberHelper.js","webpack:///./app/jsx/bundles/rubric_assessment.js","webpack:///./node_modules/@instructure/ui-prop-types/es/childrenOrValue.js","webpack:///./node_modules/@instructure/ui-dom-utils/es/getBoundingClientRect.js","webpack:///./node_modules/parse-decimal-number/dist/parse-decimal-number.js"],"names":["COMPUTED_CACHE","getFontSize","el","ignoreCache","canUseDOM","container","ownerDocument","documentElement","fontSize","parseInt","getComputedStyle","getPropertyValue","px","val","document","body","_parseUnit","parseUnit","_parseUnit2","num","unit","helper","_parseNumber","parseNumber","parse","input","NaN","toString","thousands","I18n","lookup","decimal","isNaN","match","parseFloat","validate","ready","rubricElements","querySelectorAll","Array","prototype","forEach","call","rubricElement","rubric","id","dataset","rubricId","ENV","rubrics","find","r","assessment","rubric_assessments","findRubricAssessment","rubricAssessmentId","ReactDOM","render","rubricAssessment","fillAssessment","rubricAssociation","rubric_association","customRatings","outcome_proficiency","ratings","flexWidth","gradebook_non_scoring_rubrics_enabled","childrenOrValue","props","propName","componentName","as","children","value","Error","concat","getBoundingClientRect","rect","top","left","height","width","node","window","pageXOffset","pageYOffset","innerWidth","innerHeight","right","bottom","doc","docEl","k","boundingRect","frameElement","defaultView","frameRect","scrollTop","clientTop","scrollLeft","clientLeft","offsetWidth","offsetHeight","clientWidth","clientHeight","options","parseDecimalNumber","patterns","module","exports","inOptions","enforceGroupSize","fractionPart","groupMinSize","integerPart","pattern","patternIndex","result","length","name","message","isArray","group","RegExp","replace","setOptions","newOptions","key","factoryReset","withOptions","this"],"mappings":"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","file":"rubric_assessment-c-8118a11184.js","sourcesContent":["/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 - present Instructure, Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nimport { canUseDOM } from './canUseDOM';\nimport { ownerDocument } from './ownerDocument';\nimport { getComputedStyle } from './getComputedStyle';\nvar COMPUTED_CACHE = {};\n/**\n * ---\n * category: utilities/DOM\n * ---\n *\n * Gets font size in px\n *\n * @param {ReactComponent|DomNode} el - component or DOM node\n * @returns {Object} font size in px\n */\n\nfunction getFontSize(el, ignoreCache) {\n  if (!canUseDOM) {\n    return 16;\n  }\n\n  var container = el || ownerDocument(el).documentElement; // return the cached font size if it's there\n\n  if (!ignoreCache && COMPUTED_CACHE[container]) {\n    return COMPUTED_CACHE[container];\n  }\n\n  var fontSize = parseInt(getComputedStyle(container).getPropertyValue('font-size')); // cache the computed font size so that we don't have to compute it again\n\n  COMPUTED_CACHE[container] = fontSize;\n  return fontSize;\n}\n\nexport default getFontSize;\nexport { getFontSize };","import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 - present Instructure, Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nimport { getFontSize } from '@instructure/ui-dom-utils';\nimport { parseUnit } from './parseUnit';\n/**\n * ---\n * category: utilities\n * ---\n * Converts a unit value size combination (em, rem, px) to a number representing px\n *\n * Example inputs:\n *  - '100rem'\n *  - '20em'\n *  - '40px'\n *\n * @module px\n *\n * @param {String} val\n * @param {DomNode} el - containing element, for context measure is em (defaults to document.body)\n * @returns {Number} Returns numerical representation of pixels\n*/\n\nfunction px(val, el) {\n  var container = el || document.body;\n\n  if (!val || typeof val === 'number') {\n    return val;\n  }\n\n  var _parseUnit = parseUnit(val),\n      _parseUnit2 = _slicedToArray(_parseUnit, 2),\n      num = _parseUnit2[0],\n      unit = _parseUnit2[1];\n\n  if (unit === 'rem') {\n    return num * getFontSize();\n  } else if (unit === 'em') {\n    return num * getFontSize(container);\n  } else {\n    return num;\n  }\n}\n\nexport default px;\nexport { px };","/*\n * Copyright (C) 2016 - present Instructure, Inc.\n *\n * This file is part of Canvas.\n *\n * Canvas is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, version 3 of the License.\n *\n * Canvas is distributed in the hope that it will be useful, but WITHOUT ANY\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\n * A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License along\n * with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport parseNumber from 'parse-decimal-number'\nimport I18n from 'i18nObj'\n\nconst helper = {\n  _parseNumber: parseNumber,\n\n  parse(input) {\n    if (input == null) {\n      return NaN\n    } else if (typeof input === 'number') {\n      return input\n    }\n\n    let num = helper._parseNumber(input.toString(), {\n      thousands: I18n.lookup('number.format.delimiter'),\n      decimal: I18n.lookup('number.format.separator')\n    })\n\n    // fallback to default delimiters if invalid with locale specific ones\n    if (isNaN(num)) {\n      num = helper._parseNumber(input)\n    }\n\n    // final fallback to old parseFloat - this allows us to still support scientific 'e' notation\n    if (input.toString().match(/e/) && isNaN(num)) {\n      num = parseFloat(input)\n    }\n\n    return num\n  },\n\n  validate(input) {\n    return !isNaN(helper.parse(input))\n  }\n}\n\nexport default helper\n","/*\n * Copyright (C) 2011 - present Instructure, Inc.\n *\n * This file is part of Canvas.\n *\n * Canvas is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, version 3 of the License.\n *\n * Canvas is distributed in the hope that it will be useful, but WITHOUT ANY\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\n * A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License along\n * with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport Rubric from '../rubrics/Rubric'\nimport {fillAssessment} from '../rubrics/helpers'\nimport ready from '@instructure/ready'\n\nconst findRubric = id => {\n  if (ENV.rubrics) {\n    return ENV.rubrics.find(r => r.id === id)\n  }\n  return null\n}\n\nconst findRubricAssessment = id => {\n  if (ENV.rubric_assessments) {\n    return ENV.rubric_assessments.find(r => r.id === id)\n  }\n  return null\n}\n\nready(() => {\n  const rubricElements = document.querySelectorAll('.react_rubric_container')\n  Array.prototype.forEach.call(rubricElements, rubricElement => {\n    const rubric = findRubric(rubricElement.dataset.rubricId)\n    const assessment = findRubricAssessment(rubricElement.dataset.rubricAssessmentId)\n    ReactDOM.render(\n      <Rubric\n        rubric={rubric}\n        rubricAssessment={fillAssessment(rubric, assessment || {})}\n        rubricAssociation={assessment.rubric_association}\n        customRatings={ENV.outcome_proficiency ? ENV.outcome_proficiency.ratings : []}\n        flexWidth={ENV.gradebook_non_scoring_rubrics_enabled}\n      />,\n      rubricElement\n    )\n  })\n})\n","/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 - present Instructure, Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * ---\n * category: utilities/PropTypes\n * ---\n * Verify that either value is provided as a prop if as=\"input\", and children\n * if provided otherwise\n *\n * ```js\n *  import { childrenOrValue } from '@instructure/ui-prop-types'\n *\n *  class Foo extends Component {\n *    static propTypes = {\n *      children: childrenOrValue,\n *      value: childrenOrValue\n *    }\n *  ...\n * ```\n */\nfunction childrenOrValue(props, propName, componentName) {\n  if (props.as === 'input') {\n    if (propName === 'children' && props.children || props.value == void 0) {\n      return new Error(\"Prop `value` and not `children` must be supplied if `\".concat(componentName, \" as=\\\"input\\\"`\"));\n    }\n  } else {\n    if (propName === 'value' && props.value != void 0) {\n      return new Error(\"Prop `children` and not `value` must be supplied unless `\".concat(componentName, \" as=\\\"input\\\"`\"));\n    } else if (!props.children) {\n      return new Error(\"Prop `children` should be supplied unless `\".concat(componentName, \" as=\\\"input\\\"`.\"));\n    }\n  }\n\n  return;\n}\n\nexport default childrenOrValue;\nexport { childrenOrValue };","/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 - present Instructure, Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nimport { findDOMNode } from './findDOMNode';\nimport { canUseDOM } from './canUseDOM';\nimport { contains } from './contains';\nimport { ownerDocument } from './ownerDocument';\n/**\n * ---\n * category: utilities/DOM\n * ---\n *\n * Gets the bounding rectangle of an element\n *\n * @param {ReactComponent|DomNode} el - component or DOM node\n * @return {object} rect - object with top, left coords and height and width\n */\n\nfunction getBoundingClientRect(el) {\n  var rect = {\n    top: 0,\n    left: 0,\n    height: 0,\n    width: 0\n  };\n\n  if (!canUseDOM) {\n    return rect;\n  }\n\n  var node = findDOMNode(el);\n\n  if (!node) {\n    return rect;\n  }\n\n  if (node === window) {\n    return {\n      left: window.pageXOffset,\n      top: window.pageYOffset,\n      width: window.innerWidth,\n      height: window.innerHeight,\n      right: window.innerWidth + window.pageXOffset,\n      bottom: window.innerHeight + window.pageYOffset\n    };\n  }\n\n  var doc = el === document ? document : ownerDocument(node);\n  var docEl = doc && doc.documentElement;\n\n  if (!docEl || !contains(docEl, node)) {\n    return rect;\n  }\n\n  var boundingRect = node.getBoundingClientRect();\n  var k; // eslint-disable-next-line no-restricted-syntax\n\n  for (k in boundingRect) {\n    rect[k] = boundingRect[k];\n  }\n\n  if (doc !== document) {\n    var frameElement = doc.defaultView.frameElement;\n\n    if (frameElement) {\n      var frameRect = getBoundingClientRect(frameElement);\n      rect.top += frameRect.top;\n      rect.bottom += frameRect.top;\n      rect.left += frameRect.left;\n      rect.right += frameRect.left;\n    }\n  }\n  /* eslint-disable no-mixed-operators */\n\n\n  return {\n    top: rect.top + (window.pageYOffset || docEl.scrollTop) - (docEl.clientTop || 0),\n    left: rect.left + (window.pageXOffset || docEl.scrollLeft) - (docEl.clientLeft || 0),\n    width: (rect.width == null ? node.offsetWidth : rect.width) || 0,\n    height: (rect.height == null ? node.offsetHeight : rect.height) || 0,\n    right: doc.body.clientWidth - rect.width - rect.left,\n    bottom: doc.body.clientHeight - rect.height - rect.top\n  };\n  /* eslint-enable no-mixed-operators */\n}\n\nexport default getBoundingClientRect;\nexport { getBoundingClientRect };","(function() {\n  var options, parseDecimalNumber, patterns;\n\n  patterns = [];\n\n  options = {};\n\n  module.exports = parseDecimalNumber = function(value, inOptions, enforceGroupSize) {\n    var decimal, fractionPart, groupMinSize, integerPart, number, pattern, patternIndex, result, thousands;\n    if (enforceGroupSize == null) {\n      enforceGroupSize = true;\n    }\n    if (typeof inOptions === 'string') {\n      if (inOptions.length !== 2) {\n        throw {\n          name: 'ArgumentException',\n          message: 'The format for string options is \\'<thousands><decimal>\\' (exactly two characters)'\n        };\n      }\n      thousands = inOptions[0], decimal = inOptions[1];\n    } else if (Array.isArray(inOptions)) {\n      if (inOptions.length !== 2) {\n        throw {\n          name: 'ArgumentException',\n          message: 'The format for array options is [\\'<thousands>\\',\\'[<decimal>\\'] (exactly two elements)'\n        };\n      }\n      thousands = inOptions[0], decimal = inOptions[1];\n    } else {\n      thousands = (inOptions != null ? inOptions.thousands : void 0) || (inOptions != null ? inOptions.group : void 0) || options.thousands;\n      decimal = (inOptions != null ? inOptions.decimal : void 0) || options.decimal;\n    }\n    patternIndex = \"\" + thousands + decimal + enforceGroupSize;\n    pattern = patterns[patternIndex];\n    if (pattern == null) {\n      groupMinSize = enforceGroupSize ? 3 : 1;\n      pattern = patterns[patternIndex] = new RegExp(\"^\\\\s*([+\\-]?(?:(?:\\\\d{1,3}(?:\\\\\" + thousands + \"\\\\d{\" + groupMinSize + \",3})+)|\\\\d*))(?:\\\\\" + decimal + \"(\\\\d*))?\\\\s*$\");\n    }\n    result = value.match(pattern);\n    if (!((result != null) && result.length === 3)) {\n      return 0/0;\n    }\n    integerPart = result[1].replace(new RegExp(\"\\\\\" + thousands, 'g'), '');\n    fractionPart = result[2];\n    number = parseFloat(integerPart + \".\" + fractionPart);\n    return number;\n  };\n\n  module.exports.setOptions = function(newOptions) {\n    var key, value;\n    for (key in newOptions) {\n      value = newOptions[key];\n      options[key] = value;\n    }\n  };\n\n  module.exports.factoryReset = function() {\n    options = {\n      thousands: ',',\n      decimal: '.'\n    };\n  };\n\n  module.exports.withOptions = function(options, enforceGroupSize) {\n    if (enforceGroupSize == null) {\n      enforceGroupSize = true;\n    }\n    return function(value) {\n      return parseDecimalNumber(value, options, enforceGroupSize);\n    };\n  };\n\n  module.exports.factoryReset();\n\n}).call(this);\n"],"sourceRoot":""}